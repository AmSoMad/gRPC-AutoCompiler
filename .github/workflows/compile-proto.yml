name: Compile and Update Protobuf Files

on:
  push:
    paths:
      - '**/*.proto'

jobs:
  compile:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GRPC_AUTOCOMPILER_TOKEN }}

    - name: Install Protobuf Compiler
      run: sudo apt-get install -y protobuf-compiler

    - name: Install gRPC-Web Protobuf Plugin
      run: |
        wget https://github.com/grpc/grpc-web/releases/download/1.4.2/protoc-gen-grpc-web-1.4.2-linux-x86_64
        sudo mv protoc-gen-grpc-web-1.4.2-linux-x86_64 /usr/local/bin/protoc-gen-grpc-web
        sudo chmod +x /usr/local/bin/protoc-gen-grpc-web

    - name: Install TypeScript Protobuf Plugin
      run: npm install -g ts-protoc-gen

    - name: Install Dart SDK
      run: sudo apt-get install -y dart

    - name: Install Protobuf Compiler
      run: sudo apt-get install -y protobuf-compiler

    - name: Install Dart Protobuf Plugin
      run: |
        sudo apt-get install -y dart
        pub global activate protoc_plugin      

    # - name: Setup Go
    #   uses: actions/setup-go@v2
    #   with:
    #     go-version: 1.20

    # - name: Install Go Protobuf Plugin
    #   run: |
    #     go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
    #     go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2

    # - name: Add Go Protobuf Plugin to Path
    #   run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

    # - name: Install Dart Protobuf Plugin
    #   run: |
    #     sudo apt-get install -y dart
    #     pub global activate protoc_plugin

    # 각 언어별 컴파일 단계 추가
    - name: Compile Protobuf Files
      run: |
        find . -name "*.proto" | while read -r proto_file; do
          dir=$(dirname "$proto_file")
          filename=$(basename -- "$proto_file")
          name_no_ext="${filename%.*}"
          output_dir="$dir/$name_no_ext"
          if [ -d "$output_dir" ]; then
            rm -r "$output_dir"
          fi
          mkdir -p "$output_dir/csharp_out" "$output_dir/js_out" "$output_dir/ts_out" "$output_dir/java_out" "$output_dir/dart_out" "$output_dir/go_out" "$output_dir/grpc_web_out"
          #C#
          protoc --csharp_out="$output_dir/csharp_out" "$proto_file"
          #JavaScript
          protoc --js_out=import_style=commonjs,binary:"$output_dir/js_out" "$proto_file"
          # protoc --plugin="protoc-gen-ts=$(npm bin -g)/protoc-gen-ts" --ts_out="$output_dir/ts_out" "$proto_file"
          #Java
          protoc --java_out="$output_dir/java_out" "$proto_file"
          #Dart
          protoc --dart_out="$output_dir/dart_out" "$proto_file"
          #Go
          # protoc --go_out="$output_dir/go_out" "$proto_file"
          #gRPC-Web
          protoc --plugin=protoc-gen-grpc-web --grpc-web_out=import_style=commonjs,mode=grpcwebtext:"$output_dir/grpc_web_out" "$proto_file"
        done

    - name: Commit and push changes
      run: |
        git config --global user.name 'GitHub Actions'
        git config --global user.email 'github-actions@example.com'
        git add -A
        git commit -m "Update compiled protobuf files" || echo "No changes to commit"
        git push origin "${{ github.ref }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GRPC_AUTOCOMPILER_TOKEN }}