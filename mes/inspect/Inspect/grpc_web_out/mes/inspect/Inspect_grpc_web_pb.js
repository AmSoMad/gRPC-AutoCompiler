/**
 * @fileoverview gRPC-Web generated client stub for inspect
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: mes/inspect/Inspect.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js')

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.inspect = require('./Inspect_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.inspect.InspecterClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.inspect.InspecterPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.inspect.PartRequest,
 *   !proto.inspect.PartReply>}
 */
const methodDescriptor_Inspecter_GetPart = new grpc.web.MethodDescriptor(
  '/inspect.Inspecter/GetPart',
  grpc.web.MethodType.UNARY,
  proto.inspect.PartRequest,
  proto.inspect.PartReply,
  /**
   * @param {!proto.inspect.PartRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.inspect.PartReply.deserializeBinary
);


/**
 * @param {!proto.inspect.PartRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.inspect.PartReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.inspect.PartReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.inspect.InspecterClient.prototype.getPart =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/inspect.Inspecter/GetPart',
      request,
      metadata || {},
      methodDescriptor_Inspecter_GetPart,
      callback);
};


/**
 * @param {!proto.inspect.PartRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.inspect.PartReply>}
 *     Promise that resolves to the response
 */
proto.inspect.InspecterPromiseClient.prototype.getPart =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/inspect.Inspecter/GetPart',
      request,
      metadata || {},
      methodDescriptor_Inspecter_GetPart);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.inspect.InspectRequest,
 *   !proto.inspect.InspectReply>}
 */
const methodDescriptor_Inspecter_UpdateInspect = new grpc.web.MethodDescriptor(
  '/inspect.Inspecter/UpdateInspect',
  grpc.web.MethodType.UNARY,
  proto.inspect.InspectRequest,
  proto.inspect.InspectReply,
  /**
   * @param {!proto.inspect.InspectRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.inspect.InspectReply.deserializeBinary
);


/**
 * @param {!proto.inspect.InspectRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.inspect.InspectReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.inspect.InspectReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.inspect.InspecterClient.prototype.updateInspect =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/inspect.Inspecter/UpdateInspect',
      request,
      metadata || {},
      methodDescriptor_Inspecter_UpdateInspect,
      callback);
};


/**
 * @param {!proto.inspect.InspectRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.inspect.InspectReply>}
 *     Promise that resolves to the response
 */
proto.inspect.InspecterPromiseClient.prototype.updateInspect =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/inspect.Inspecter/UpdateInspect',
      request,
      metadata || {},
      methodDescriptor_Inspecter_UpdateInspect);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.inspect.InspectListRequest,
 *   !proto.inspect.InspectListReply>}
 */
const methodDescriptor_Inspecter_GetInspect = new grpc.web.MethodDescriptor(
  '/inspect.Inspecter/GetInspect',
  grpc.web.MethodType.UNARY,
  proto.inspect.InspectListRequest,
  proto.inspect.InspectListReply,
  /**
   * @param {!proto.inspect.InspectListRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.inspect.InspectListReply.deserializeBinary
);


/**
 * @param {!proto.inspect.InspectListRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.inspect.InspectListReply)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.inspect.InspectListReply>|undefined}
 *     The XHR Node Readable Stream
 */
proto.inspect.InspecterClient.prototype.getInspect =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/inspect.Inspecter/GetInspect',
      request,
      metadata || {},
      methodDescriptor_Inspecter_GetInspect,
      callback);
};


/**
 * @param {!proto.inspect.InspectListRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.inspect.InspectListReply>}
 *     Promise that resolves to the response
 */
proto.inspect.InspecterPromiseClient.prototype.getInspect =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/inspect.Inspecter/GetInspect',
      request,
      metadata || {},
      methodDescriptor_Inspecter_GetInspect);
};


module.exports = proto.inspect;

