// source: mes/CostCenters.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.CostCentersSvc.CostCentersResponse', null, global);
goog.exportSymbol('proto.CostCentersSvc.CostCentersSetResponse', null, global);
goog.exportSymbol('proto.CostCentersSvc.DataSetResponse', null, global);
goog.exportSymbol('proto.CostCentersSvc.DeleteRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.DeleteResponse', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetByKeyRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetForBusinessClass_SaleRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetForCalendarTypeRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetForCostCenterTypesRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetForCustomersRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetForInspectionSystemsRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetForLocationRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GetForMeasureUnitRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.GrpcDecimal', null, global);
goog.exportSymbol('proto.CostCentersSvc.InsertRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.UpdateRequest', null, global);
goog.exportSymbol('proto.CostCentersSvc.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GrpcDecimal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GrpcDecimal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GrpcDecimal.displayName = 'proto.CostCentersSvc.GrpcDecimal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.CostCentersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.CostCentersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.CostCentersResponse.displayName = 'proto.CostCentersSvc.CostCentersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.CostCentersSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.CostCentersSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.CostCentersSetResponse.displayName = 'proto.CostCentersSvc.CostCentersSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.DataSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.DataSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.DataSetResponse.displayName = 'proto.CostCentersSvc.DataSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetForCalendarTypeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetForCalendarTypeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetForCalendarTypeRequest.displayName = 'proto.CostCentersSvc.GetForCalendarTypeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetForCustomersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetForCustomersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetForCustomersRequest.displayName = 'proto.CostCentersSvc.GetForCustomersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetForLocationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetForLocationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetForLocationRequest.displayName = 'proto.CostCentersSvc.GetForLocationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetForCostCenterTypesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetForCostCenterTypesRequest.displayName = 'proto.CostCentersSvc.GetForCostCenterTypesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetForBusinessClass_SaleRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetForBusinessClass_SaleRequest.displayName = 'proto.CostCentersSvc.GetForBusinessClass_SaleRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetForInspectionSystemsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetForInspectionSystemsRequest.displayName = 'proto.CostCentersSvc.GetForInspectionSystemsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetForMeasureUnitRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetForMeasureUnitRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetForMeasureUnitRequest.displayName = 'proto.CostCentersSvc.GetForMeasureUnitRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.GetByKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.GetByKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.GetByKeyRequest.displayName = 'proto.CostCentersSvc.GetByKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.InsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.InsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.InsertRequest.displayName = 'proto.CostCentersSvc.InsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.UpdateRequest.displayName = 'proto.CostCentersSvc.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.UpdateResponse.displayName = 'proto.CostCentersSvc.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.DeleteRequest.displayName = 'proto.CostCentersSvc.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.CostCentersSvc.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.CostCentersSvc.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.CostCentersSvc.DeleteResponse.displayName = 'proto.CostCentersSvc.DeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GrpcDecimal.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GrpcDecimal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GrpcDecimal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GrpcDecimal.toObject = function(includeInstance, msg) {
  var f, obj = {
    units: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.GrpcDecimal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GrpcDecimal;
  return proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GrpcDecimal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GrpcDecimal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GrpcDecimal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnits();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeSfixed32(
      2,
      f
    );
  }
};


/**
 * optional int64 units = 1;
 * @return {number}
 */
proto.CostCentersSvc.GrpcDecimal.prototype.getUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.GrpcDecimal} returns this
 */
proto.CostCentersSvc.GrpcDecimal.prototype.setUnits = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sfixed32 nanos = 2;
 * @return {number}
 */
proto.CostCentersSvc.GrpcDecimal.prototype.getNanos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.GrpcDecimal} returns this
 */
proto.CostCentersSvc.GrpcDecimal.prototype.setNanos = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.CostCentersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.CostCentersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.CostCentersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.CostCentersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    costcenters: msg.getCostcenters_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.CostCentersResponse}
 */
proto.CostCentersSvc.CostCentersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.CostCentersResponse;
  return proto.CostCentersSvc.CostCentersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.CostCentersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.CostCentersResponse}
 */
proto.CostCentersSvc.CostCentersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCostcenters(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.CostCentersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.CostCentersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.CostCentersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.CostCentersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCostcenters_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes costCenters = 1;
 * @return {!(string|Uint8Array)}
 */
proto.CostCentersSvc.CostCentersResponse.prototype.getCostcenters = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes costCenters = 1;
 * This is a type-conversion wrapper around `getCostcenters()`
 * @return {string}
 */
proto.CostCentersSvc.CostCentersResponse.prototype.getCostcenters_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCostcenters()));
};


/**
 * optional bytes costCenters = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCostcenters()`
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.CostCentersResponse.prototype.getCostcenters_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCostcenters()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.CostCentersSvc.CostCentersResponse} returns this
 */
proto.CostCentersSvc.CostCentersResponse.prototype.setCostcenters = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.CostCentersSvc.CostCentersResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.CostCentersResponse} returns this
 */
proto.CostCentersSvc.CostCentersResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.CostCentersSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.CostCentersSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.CostCentersSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    costcentersset: msg.getCostcentersset_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.CostCentersSetResponse}
 */
proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.CostCentersSetResponse;
  return proto.CostCentersSvc.CostCentersSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.CostCentersSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.CostCentersSetResponse}
 */
proto.CostCentersSvc.CostCentersSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCostcentersset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.CostCentersSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.CostCentersSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.CostCentersSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCostcentersset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes costCentersSet = 1;
 * @return {!(string|Uint8Array)}
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.getCostcentersset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes costCentersSet = 1;
 * This is a type-conversion wrapper around `getCostcentersset()`
 * @return {string}
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.getCostcentersset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCostcentersset()));
};


/**
 * optional bytes costCentersSet = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCostcentersset()`
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.getCostcentersset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCostcentersset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.CostCentersSvc.CostCentersSetResponse} returns this
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.setCostcentersset = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.CostCentersSetResponse} returns this
 */
proto.CostCentersSvc.CostCentersSetResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.DataSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.DataSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.DataSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.DataSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataset: msg.getDataset_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.DataSetResponse}
 */
proto.CostCentersSvc.DataSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.DataSetResponse;
  return proto.CostCentersSvc.DataSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.DataSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.DataSetResponse}
 */
proto.CostCentersSvc.DataSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDataset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.DataSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.DataSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.DataSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.DataSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes dataSet = 1;
 * @return {!(string|Uint8Array)}
 */
proto.CostCentersSvc.DataSetResponse.prototype.getDataset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes dataSet = 1;
 * This is a type-conversion wrapper around `getDataset()`
 * @return {string}
 */
proto.CostCentersSvc.DataSetResponse.prototype.getDataset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDataset()));
};


/**
 * optional bytes dataSet = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataset()`
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.DataSetResponse.prototype.getDataset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDataset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.CostCentersSvc.DataSetResponse} returns this
 */
proto.CostCentersSvc.DataSetResponse.prototype.setDataset = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.CostCentersSvc.DataSetResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.DataSetResponse} returns this
 */
proto.CostCentersSvc.DataSetResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetForCalendarTypeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    calendartype: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetForCalendarTypeRequest}
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetForCalendarTypeRequest;
  return proto.CostCentersSvc.GetForCalendarTypeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetForCalendarTypeRequest}
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCalendartype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetForCalendarTypeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCalendartype();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 calendarType = 1;
 * @return {number}
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.prototype.getCalendartype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.GetForCalendarTypeRequest} returns this
 */
proto.CostCentersSvc.GetForCalendarTypeRequest.prototype.setCalendartype = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetForCustomersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetForCustomersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetForCustomersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForCustomersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    customercode: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetForCustomersRequest}
 */
proto.CostCentersSvc.GetForCustomersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetForCustomersRequest;
  return proto.CostCentersSvc.GetForCustomersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetForCustomersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetForCustomersRequest}
 */
proto.CostCentersSvc.GetForCustomersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomercode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetForCustomersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetForCustomersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetForCustomersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForCustomersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCustomercode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string customerCode = 1;
 * @return {string}
 */
proto.CostCentersSvc.GetForCustomersRequest.prototype.getCustomercode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.GetForCustomersRequest} returns this
 */
proto.CostCentersSvc.GetForCustomersRequest.prototype.setCustomercode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetForLocationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetForLocationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetForLocationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForLocationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    locationno: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetForLocationRequest}
 */
proto.CostCentersSvc.GetForLocationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetForLocationRequest;
  return proto.CostCentersSvc.GetForLocationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetForLocationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetForLocationRequest}
 */
proto.CostCentersSvc.GetForLocationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLocationno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetForLocationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetForLocationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetForLocationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForLocationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLocationno();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 locationNo = 1;
 * @return {number}
 */
proto.CostCentersSvc.GetForLocationRequest.prototype.getLocationno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.GetForLocationRequest} returns this
 */
proto.CostCentersSvc.GetForLocationRequest.prototype.setLocationno = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetForCostCenterTypesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    costcentertype: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetForCostCenterTypesRequest}
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetForCostCenterTypesRequest;
  return proto.CostCentersSvc.GetForCostCenterTypesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetForCostCenterTypesRequest}
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostcentertype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetForCostCenterTypesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCostcentertype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string costCenterType = 1;
 * @return {string}
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.prototype.getCostcentertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.GetForCostCenterTypesRequest} returns this
 */
proto.CostCentersSvc.GetForCostCenterTypesRequest.prototype.setCostcentertype = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetForBusinessClass_SaleRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest}
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetForBusinessClass_SaleRequest;
  return proto.CostCentersSvc.GetForBusinessClass_SaleRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest}
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetForBusinessClass_SaleRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} returns this
 */
proto.CostCentersSvc.GetForBusinessClass_SaleRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetForInspectionSystemsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    systemid: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetForInspectionSystemsRequest}
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetForInspectionSystemsRequest;
  return proto.CostCentersSvc.GetForInspectionSystemsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetForInspectionSystemsRequest}
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSystemid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetForInspectionSystemsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSystemid();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 systemID = 1;
 * @return {number}
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.prototype.getSystemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.GetForInspectionSystemsRequest} returns this
 */
proto.CostCentersSvc.GetForInspectionSystemsRequest.prototype.setSystemid = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetForMeasureUnitRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    measureunit: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetForMeasureUnitRequest}
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetForMeasureUnitRequest;
  return proto.CostCentersSvc.GetForMeasureUnitRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetForMeasureUnitRequest}
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeasureunit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetForMeasureUnitRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMeasureunit();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string measureUnit = 1;
 * @return {string}
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.prototype.getMeasureunit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.GetForMeasureUnitRequest} returns this
 */
proto.CostCentersSvc.GetForMeasureUnitRequest.prototype.setMeasureunit = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.GetByKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.GetByKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.GetByKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetByKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    costcenter: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.GetByKeyRequest}
 */
proto.CostCentersSvc.GetByKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.GetByKeyRequest;
  return proto.CostCentersSvc.GetByKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.GetByKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.GetByKeyRequest}
 */
proto.CostCentersSvc.GetByKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostcenter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.GetByKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.GetByKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.GetByKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.GetByKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCostcenter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string costCenter = 1;
 * @return {string}
 */
proto.CostCentersSvc.GetByKeyRequest.prototype.getCostcenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.GetByKeyRequest} returns this
 */
proto.CostCentersSvc.GetByKeyRequest.prototype.setCostcenter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.InsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.InsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.InsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.InsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    costcenter: jspb.Message.getFieldWithDefault(msg, 1, ""),
    calendartype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    costcentername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    machines: jspb.Message.getFieldWithDefault(msg, 4, 0),
    effectivepercent: (f = msg.getEffectivepercent()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdlaborrate: (f = msg.getStdlaborrate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    curlaborrate: (f = msg.getCurlaborrate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdsetuprate: (f = msg.getStdsetuprate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    cursetuprate: (f = msg.getCursetuprate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdlaboroverhead: (f = msg.getStdlaboroverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    curlaboroverhead: (f = msg.getCurlaboroverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdsetupoverhead: (f = msg.getStdsetupoverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    cursetupoverhead: (f = msg.getCursetupoverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    triallaborrate: (f = msg.getTriallaborrate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    trialsetuprate: (f = msg.getTrialsetuprate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    triallaboroverhead: (f = msg.getTriallaboroverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    trialsetupoverhead: (f = msg.getTrialsetupoverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    customercode: (f = msg.getCustomercode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    optimecalculationmethod: (f = msg.getOptimecalculationmethod()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    locationno: (f = msg.getLocationno()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    worklevel: jspb.Message.getFieldWithDefault(msg, 21, 0),
    costcentertype: (f = msg.getCostcentertype()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    worktype: jspb.Message.getFieldWithDefault(msg, 23, 0),
    addedvalue: (f = msg.getAddedvalue()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    centertype: jspb.Message.getFieldWithDefault(msg, 25, 0),
    machinecostcenter: (f = msg.getMachinecostcenter()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    businessclasscode: (f = msg.getBusinessclasscode()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    capaflag: jspb.Message.getFieldWithDefault(msg, 28, 0),
    centerlotchar: jspb.Message.getFieldWithDefault(msg, 29, ""),
    centernumber: jspb.Message.getFieldWithDefault(msg, 30, 0),
    workmspec: jspb.Message.getFieldWithDefault(msg, 31, ""),
    seqno: jspb.Message.getFieldWithDefault(msg, 32, 0),
    systemid: (f = msg.getSystemid()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    useflag: jspb.Message.getFieldWithDefault(msg, 34, 0),
    macaddress: (f = msg.getMacaddress()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    outsourcingtype: (f = msg.getOutsourcingtype()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    measureunit: jspb.Message.getFieldWithDefault(msg, 37, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.InsertRequest}
 */
proto.CostCentersSvc.InsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.InsertRequest;
  return proto.CostCentersSvc.InsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.InsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.InsertRequest}
 */
proto.CostCentersSvc.InsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostcenter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCalendartype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostcentername(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setMachines(value);
      break;
    case 5:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setEffectivepercent(value);
      break;
    case 6:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdlaborrate(value);
      break;
    case 7:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCurlaborrate(value);
      break;
    case 8:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdsetuprate(value);
      break;
    case 9:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCursetuprate(value);
      break;
    case 10:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdlaboroverhead(value);
      break;
    case 11:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCurlaboroverhead(value);
      break;
    case 12:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdsetupoverhead(value);
      break;
    case 13:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCursetupoverhead(value);
      break;
    case 14:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTriallaborrate(value);
      break;
    case 15:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTrialsetuprate(value);
      break;
    case 16:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTriallaboroverhead(value);
      break;
    case 17:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTrialsetupoverhead(value);
      break;
    case 18:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCustomercode(value);
      break;
    case 19:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setOptimecalculationmethod(value);
      break;
    case 20:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setLocationno(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setWorklevel(value);
      break;
    case 22:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCostcentertype(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setWorktype(value);
      break;
    case 24:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setAddedvalue(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCentertype(value);
      break;
    case 26:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMachinecostcenter(value);
      break;
    case 27:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setBusinessclasscode(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCapaflag(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setCenterlotchar(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCenternumber(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkmspec(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSeqno(value);
      break;
    case 33:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setSystemid(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setUseflag(value);
      break;
    case 35:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMacaddress(value);
      break;
    case 36:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setOutsourcingtype(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeasureunit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.InsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.InsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.InsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.InsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCostcenter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCalendartype();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
  f = message.getCostcentername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMachines();
  if (f !== 0) {
    writer.writeSint32(
      4,
      f
    );
  }
  f = message.getEffectivepercent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdlaborrate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCurlaborrate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdsetuprate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCursetuprate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdlaboroverhead();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCurlaboroverhead();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdsetupoverhead();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCursetupoverhead();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTriallaborrate();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTrialsetuprate();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTriallaboroverhead();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTrialsetupoverhead();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCustomercode();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getOptimecalculationmethod();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getLocationno();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getWorklevel();
  if (f !== 0) {
    writer.writeSint32(
      21,
      f
    );
  }
  f = message.getCostcentertype();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getWorktype();
  if (f !== 0) {
    writer.writeSint32(
      23,
      f
    );
  }
  f = message.getAddedvalue();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCentertype();
  if (f !== 0) {
    writer.writeSint32(
      25,
      f
    );
  }
  f = message.getMachinecostcenter();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getBusinessclasscode();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getCapaflag();
  if (f !== 0) {
    writer.writeSint32(
      28,
      f
    );
  }
  f = message.getCenterlotchar();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getCenternumber();
  if (f !== 0) {
    writer.writeSint32(
      30,
      f
    );
  }
  f = message.getWorkmspec();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getSeqno();
  if (f !== 0) {
    writer.writeSint32(
      32,
      f
    );
  }
  f = message.getSystemid();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getUseflag();
  if (f !== 0) {
    writer.writeSint32(
      34,
      f
    );
  }
  f = message.getMacaddress();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getOutsourcingtype();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getMeasureunit();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
};


/**
 * optional string costCenter = 1;
 * @return {string}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCostcenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setCostcenter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sint32 calendarType = 2;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCalendartype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setCalendartype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string costCenterName = 3;
 * @return {string}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCostcentername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setCostcentername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sint32 machines = 4;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getMachines = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setMachines = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional GrpcDecimal effectivePercent = 5;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getEffectivepercent = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 5));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setEffectivepercent = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearEffectivepercent = function() {
  return this.setEffectivepercent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasEffectivepercent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GrpcDecimal stdLaborRate = 6;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getStdlaborrate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 6));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setStdlaborrate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearStdlaborrate = function() {
  return this.setStdlaborrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasStdlaborrate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GrpcDecimal curLaborRate = 7;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCurlaborrate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 7));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setCurlaborrate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearCurlaborrate = function() {
  return this.setCurlaborrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasCurlaborrate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional GrpcDecimal stdSetupRate = 8;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getStdsetuprate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 8));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setStdsetuprate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearStdsetuprate = function() {
  return this.setStdsetuprate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasStdsetuprate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional GrpcDecimal curSetupRate = 9;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCursetuprate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 9));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setCursetuprate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearCursetuprate = function() {
  return this.setCursetuprate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasCursetuprate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GrpcDecimal stdLaborOverhead = 10;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getStdlaboroverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 10));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setStdlaboroverhead = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearStdlaboroverhead = function() {
  return this.setStdlaboroverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasStdlaboroverhead = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional GrpcDecimal curLaborOverhead = 11;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCurlaboroverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 11));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setCurlaboroverhead = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearCurlaboroverhead = function() {
  return this.setCurlaboroverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasCurlaboroverhead = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional GrpcDecimal stdSetupOverhead = 12;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getStdsetupoverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 12));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setStdsetupoverhead = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearStdsetupoverhead = function() {
  return this.setStdsetupoverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasStdsetupoverhead = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GrpcDecimal curSetupOverhead = 13;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCursetupoverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 13));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setCursetupoverhead = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearCursetupoverhead = function() {
  return this.setCursetupoverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasCursetupoverhead = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional GrpcDecimal trialLaborRate = 14;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getTriallaborrate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 14));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setTriallaborrate = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearTriallaborrate = function() {
  return this.setTriallaborrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasTriallaborrate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional GrpcDecimal trialSetupRate = 15;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getTrialsetuprate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 15));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setTrialsetuprate = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearTrialsetuprate = function() {
  return this.setTrialsetuprate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasTrialsetuprate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional GrpcDecimal trialLaborOverhead = 16;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getTriallaboroverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 16));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setTriallaboroverhead = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearTriallaboroverhead = function() {
  return this.setTriallaboroverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasTriallaboroverhead = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional GrpcDecimal trialSetupOverhead = 17;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getTrialsetupoverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 17));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setTrialsetupoverhead = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearTrialsetupoverhead = function() {
  return this.setTrialsetupoverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasTrialsetupoverhead = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional google.protobuf.StringValue customerCode = 18;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCustomercode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 18));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setCustomercode = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearCustomercode = function() {
  return this.setCustomercode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasCustomercode = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Int32Value opTimeCalculationMethod = 19;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.InsertRequest.prototype.getOptimecalculationmethod = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 19));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setOptimecalculationmethod = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearOptimecalculationmethod = function() {
  return this.setOptimecalculationmethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasOptimecalculationmethod = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Int32Value locationNo = 20;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.InsertRequest.prototype.getLocationno = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 20));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setLocationno = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearLocationno = function() {
  return this.setLocationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasLocationno = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional sint32 workLevel = 21;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getWorklevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setWorklevel = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional google.protobuf.StringValue costCenterType = 22;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCostcentertype = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 22));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setCostcentertype = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearCostcentertype = function() {
  return this.setCostcentertype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasCostcentertype = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional sint32 workType = 23;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getWorktype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setWorktype = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional GrpcDecimal addedValue = 24;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.InsertRequest.prototype.getAddedvalue = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 24));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setAddedvalue = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearAddedvalue = function() {
  return this.setAddedvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasAddedvalue = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional sint32 centerType = 25;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCentertype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setCentertype = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional google.protobuf.StringValue machineCostCenter = 26;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.InsertRequest.prototype.getMachinecostcenter = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 26));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setMachinecostcenter = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearMachinecostcenter = function() {
  return this.setMachinecostcenter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasMachinecostcenter = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional google.protobuf.Int32Value businessClassCode = 27;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.InsertRequest.prototype.getBusinessclasscode = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 27));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearBusinessclasscode = function() {
  return this.setBusinessclasscode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasBusinessclasscode = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional sint32 capaFlag = 28;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCapaflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setCapaflag = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional string centerLotChar = 29;
 * @return {string}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCenterlotchar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setCenterlotchar = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional sint32 centerNumber = 30;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getCenternumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setCenternumber = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional string workMSpec = 31;
 * @return {string}
 */
proto.CostCentersSvc.InsertRequest.prototype.getWorkmspec = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setWorkmspec = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional sint32 seqNo = 32;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getSeqno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setSeqno = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional google.protobuf.Int32Value systemID = 33;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.InsertRequest.prototype.getSystemid = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 33));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setSystemid = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearSystemid = function() {
  return this.setSystemid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasSystemid = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional sint32 useFlag = 34;
 * @return {number}
 */
proto.CostCentersSvc.InsertRequest.prototype.getUseflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setUseflag = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional google.protobuf.StringValue mACAddress = 35;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.InsertRequest.prototype.getMacaddress = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 35));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setMacaddress = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearMacaddress = function() {
  return this.setMacaddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasMacaddress = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional google.protobuf.Int32Value outSourcingType = 36;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.InsertRequest.prototype.getOutsourcingtype = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 36));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
*/
proto.CostCentersSvc.InsertRequest.prototype.setOutsourcingtype = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.clearOutsourcingtype = function() {
  return this.setOutsourcingtype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.InsertRequest.prototype.hasOutsourcingtype = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional string measureUnit = 37;
 * @return {string}
 */
proto.CostCentersSvc.InsertRequest.prototype.getMeasureunit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.InsertRequest} returns this
 */
proto.CostCentersSvc.InsertRequest.prototype.setMeasureunit = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    costcenter: jspb.Message.getFieldWithDefault(msg, 1, ""),
    calendartype: jspb.Message.getFieldWithDefault(msg, 2, 0),
    costcentername: jspb.Message.getFieldWithDefault(msg, 3, ""),
    machines: jspb.Message.getFieldWithDefault(msg, 4, 0),
    effectivepercent: (f = msg.getEffectivepercent()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdlaborrate: (f = msg.getStdlaborrate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    curlaborrate: (f = msg.getCurlaborrate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdsetuprate: (f = msg.getStdsetuprate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    cursetuprate: (f = msg.getCursetuprate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdlaboroverhead: (f = msg.getStdlaboroverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    curlaboroverhead: (f = msg.getCurlaboroverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    stdsetupoverhead: (f = msg.getStdsetupoverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    cursetupoverhead: (f = msg.getCursetupoverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    triallaborrate: (f = msg.getTriallaborrate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    trialsetuprate: (f = msg.getTrialsetuprate()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    triallaboroverhead: (f = msg.getTriallaboroverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    trialsetupoverhead: (f = msg.getTrialsetupoverhead()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    customercode: (f = msg.getCustomercode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    optimecalculationmethod: (f = msg.getOptimecalculationmethod()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    locationno: (f = msg.getLocationno()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    worklevel: jspb.Message.getFieldWithDefault(msg, 21, 0),
    costcentertype: (f = msg.getCostcentertype()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    worktype: jspb.Message.getFieldWithDefault(msg, 23, 0),
    addedvalue: (f = msg.getAddedvalue()) && proto.CostCentersSvc.GrpcDecimal.toObject(includeInstance, f),
    centertype: jspb.Message.getFieldWithDefault(msg, 25, 0),
    machinecostcenter: (f = msg.getMachinecostcenter()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    businessclasscode: (f = msg.getBusinessclasscode()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    capaflag: jspb.Message.getFieldWithDefault(msg, 28, 0),
    centerlotchar: jspb.Message.getFieldWithDefault(msg, 29, ""),
    centernumber: jspb.Message.getFieldWithDefault(msg, 30, 0),
    workmspec: jspb.Message.getFieldWithDefault(msg, 31, ""),
    seqno: jspb.Message.getFieldWithDefault(msg, 32, 0),
    systemid: (f = msg.getSystemid()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    useflag: jspb.Message.getFieldWithDefault(msg, 34, 0),
    macaddress: (f = msg.getMacaddress()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    outsourcingtype: (f = msg.getOutsourcingtype()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    measureunit: jspb.Message.getFieldWithDefault(msg, 37, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.UpdateRequest}
 */
proto.CostCentersSvc.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.UpdateRequest;
  return proto.CostCentersSvc.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.UpdateRequest}
 */
proto.CostCentersSvc.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostcenter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCalendartype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostcentername(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setMachines(value);
      break;
    case 5:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setEffectivepercent(value);
      break;
    case 6:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdlaborrate(value);
      break;
    case 7:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCurlaborrate(value);
      break;
    case 8:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdsetuprate(value);
      break;
    case 9:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCursetuprate(value);
      break;
    case 10:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdlaboroverhead(value);
      break;
    case 11:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCurlaboroverhead(value);
      break;
    case 12:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setStdsetupoverhead(value);
      break;
    case 13:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setCursetupoverhead(value);
      break;
    case 14:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTriallaborrate(value);
      break;
    case 15:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTrialsetuprate(value);
      break;
    case 16:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTriallaboroverhead(value);
      break;
    case 17:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setTrialsetupoverhead(value);
      break;
    case 18:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCustomercode(value);
      break;
    case 19:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setOptimecalculationmethod(value);
      break;
    case 20:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setLocationno(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setWorklevel(value);
      break;
    case 22:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCostcentertype(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setWorktype(value);
      break;
    case 24:
      var value = new proto.CostCentersSvc.GrpcDecimal;
      reader.readMessage(value,proto.CostCentersSvc.GrpcDecimal.deserializeBinaryFromReader);
      msg.setAddedvalue(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCentertype(value);
      break;
    case 26:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMachinecostcenter(value);
      break;
    case 27:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setBusinessclasscode(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCapaflag(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setCenterlotchar(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setCenternumber(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkmspec(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSeqno(value);
      break;
    case 33:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setSystemid(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setUseflag(value);
      break;
    case 35:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setMacaddress(value);
      break;
    case 36:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setOutsourcingtype(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setMeasureunit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCostcenter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCalendartype();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
  f = message.getCostcentername();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMachines();
  if (f !== 0) {
    writer.writeSint32(
      4,
      f
    );
  }
  f = message.getEffectivepercent();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdlaborrate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCurlaborrate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdsetuprate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCursetuprate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdlaboroverhead();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCurlaboroverhead();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getStdsetupoverhead();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCursetupoverhead();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTriallaborrate();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTrialsetuprate();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTriallaboroverhead();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getTrialsetupoverhead();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCustomercode();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getOptimecalculationmethod();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getLocationno();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getWorklevel();
  if (f !== 0) {
    writer.writeSint32(
      21,
      f
    );
  }
  f = message.getCostcentertype();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getWorktype();
  if (f !== 0) {
    writer.writeSint32(
      23,
      f
    );
  }
  f = message.getAddedvalue();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      proto.CostCentersSvc.GrpcDecimal.serializeBinaryToWriter
    );
  }
  f = message.getCentertype();
  if (f !== 0) {
    writer.writeSint32(
      25,
      f
    );
  }
  f = message.getMachinecostcenter();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getBusinessclasscode();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getCapaflag();
  if (f !== 0) {
    writer.writeSint32(
      28,
      f
    );
  }
  f = message.getCenterlotchar();
  if (f.length > 0) {
    writer.writeString(
      29,
      f
    );
  }
  f = message.getCenternumber();
  if (f !== 0) {
    writer.writeSint32(
      30,
      f
    );
  }
  f = message.getWorkmspec();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getSeqno();
  if (f !== 0) {
    writer.writeSint32(
      32,
      f
    );
  }
  f = message.getSystemid();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getUseflag();
  if (f !== 0) {
    writer.writeSint32(
      34,
      f
    );
  }
  f = message.getMacaddress();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getOutsourcingtype();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getMeasureunit();
  if (f.length > 0) {
    writer.writeString(
      37,
      f
    );
  }
};


/**
 * optional string costCenter = 1;
 * @return {string}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCostcenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setCostcenter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sint32 calendarType = 2;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCalendartype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setCalendartype = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string costCenterName = 3;
 * @return {string}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCostcentername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setCostcentername = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sint32 machines = 4;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getMachines = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setMachines = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional GrpcDecimal effectivePercent = 5;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getEffectivepercent = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 5));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setEffectivepercent = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearEffectivepercent = function() {
  return this.setEffectivepercent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasEffectivepercent = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional GrpcDecimal stdLaborRate = 6;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getStdlaborrate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 6));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setStdlaborrate = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearStdlaborrate = function() {
  return this.setStdlaborrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasStdlaborrate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional GrpcDecimal curLaborRate = 7;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCurlaborrate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 7));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setCurlaborrate = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearCurlaborrate = function() {
  return this.setCurlaborrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasCurlaborrate = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional GrpcDecimal stdSetupRate = 8;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getStdsetuprate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 8));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setStdsetuprate = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearStdsetuprate = function() {
  return this.setStdsetuprate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasStdsetuprate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional GrpcDecimal curSetupRate = 9;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCursetuprate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 9));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setCursetuprate = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearCursetuprate = function() {
  return this.setCursetuprate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasCursetuprate = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional GrpcDecimal stdLaborOverhead = 10;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getStdlaboroverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 10));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setStdlaboroverhead = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearStdlaboroverhead = function() {
  return this.setStdlaboroverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasStdlaboroverhead = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional GrpcDecimal curLaborOverhead = 11;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCurlaboroverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 11));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setCurlaboroverhead = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearCurlaboroverhead = function() {
  return this.setCurlaboroverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasCurlaboroverhead = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional GrpcDecimal stdSetupOverhead = 12;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getStdsetupoverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 12));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setStdsetupoverhead = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearStdsetupoverhead = function() {
  return this.setStdsetupoverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasStdsetupoverhead = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional GrpcDecimal curSetupOverhead = 13;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCursetupoverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 13));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setCursetupoverhead = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearCursetupoverhead = function() {
  return this.setCursetupoverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasCursetupoverhead = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional GrpcDecimal trialLaborRate = 14;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getTriallaborrate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 14));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setTriallaborrate = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearTriallaborrate = function() {
  return this.setTriallaborrate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasTriallaborrate = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional GrpcDecimal trialSetupRate = 15;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getTrialsetuprate = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 15));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setTrialsetuprate = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearTrialsetuprate = function() {
  return this.setTrialsetuprate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasTrialsetuprate = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional GrpcDecimal trialLaborOverhead = 16;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getTriallaboroverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 16));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setTriallaboroverhead = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearTriallaboroverhead = function() {
  return this.setTriallaboroverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasTriallaboroverhead = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional GrpcDecimal trialSetupOverhead = 17;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getTrialsetupoverhead = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 17));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setTrialsetupoverhead = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearTrialsetupoverhead = function() {
  return this.setTrialsetupoverhead(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasTrialsetupoverhead = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional google.protobuf.StringValue customerCode = 18;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCustomercode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 18));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setCustomercode = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearCustomercode = function() {
  return this.setCustomercode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasCustomercode = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional google.protobuf.Int32Value opTimeCalculationMethod = 19;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getOptimecalculationmethod = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 19));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setOptimecalculationmethod = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearOptimecalculationmethod = function() {
  return this.setOptimecalculationmethod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasOptimecalculationmethod = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional google.protobuf.Int32Value locationNo = 20;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getLocationno = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 20));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setLocationno = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearLocationno = function() {
  return this.setLocationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasLocationno = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional sint32 workLevel = 21;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getWorklevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setWorklevel = function(value) {
  return jspb.Message.setProto3IntField(this, 21, value);
};


/**
 * optional google.protobuf.StringValue costCenterType = 22;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCostcentertype = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 22));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setCostcentertype = function(value) {
  return jspb.Message.setWrapperField(this, 22, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearCostcentertype = function() {
  return this.setCostcentertype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasCostcentertype = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional sint32 workType = 23;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getWorktype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setWorktype = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional GrpcDecimal addedValue = 24;
 * @return {?proto.CostCentersSvc.GrpcDecimal}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getAddedvalue = function() {
  return /** @type{?proto.CostCentersSvc.GrpcDecimal} */ (
    jspb.Message.getWrapperField(this, proto.CostCentersSvc.GrpcDecimal, 24));
};


/**
 * @param {?proto.CostCentersSvc.GrpcDecimal|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setAddedvalue = function(value) {
  return jspb.Message.setWrapperField(this, 24, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearAddedvalue = function() {
  return this.setAddedvalue(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasAddedvalue = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional sint32 centerType = 25;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCentertype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setCentertype = function(value) {
  return jspb.Message.setProto3IntField(this, 25, value);
};


/**
 * optional google.protobuf.StringValue machineCostCenter = 26;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getMachinecostcenter = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 26));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setMachinecostcenter = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearMachinecostcenter = function() {
  return this.setMachinecostcenter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasMachinecostcenter = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional google.protobuf.Int32Value businessClassCode = 27;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getBusinessclasscode = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 27));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setWrapperField(this, 27, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearBusinessclasscode = function() {
  return this.setBusinessclasscode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasBusinessclasscode = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional sint32 capaFlag = 28;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCapaflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setCapaflag = function(value) {
  return jspb.Message.setProto3IntField(this, 28, value);
};


/**
 * optional string centerLotChar = 29;
 * @return {string}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCenterlotchar = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setCenterlotchar = function(value) {
  return jspb.Message.setProto3StringField(this, 29, value);
};


/**
 * optional sint32 centerNumber = 30;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getCenternumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setCenternumber = function(value) {
  return jspb.Message.setProto3IntField(this, 30, value);
};


/**
 * optional string workMSpec = 31;
 * @return {string}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getWorkmspec = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setWorkmspec = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * optional sint32 seqNo = 32;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getSeqno = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setSeqno = function(value) {
  return jspb.Message.setProto3IntField(this, 32, value);
};


/**
 * optional google.protobuf.Int32Value systemID = 33;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getSystemid = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 33));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setSystemid = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearSystemid = function() {
  return this.setSystemid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasSystemid = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional sint32 useFlag = 34;
 * @return {number}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getUseflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setUseflag = function(value) {
  return jspb.Message.setProto3IntField(this, 34, value);
};


/**
 * optional google.protobuf.StringValue mACAddress = 35;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getMacaddress = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 35));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setMacaddress = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearMacaddress = function() {
  return this.setMacaddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasMacaddress = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional google.protobuf.Int32Value outSourcingType = 36;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getOutsourcingtype = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 36));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
*/
proto.CostCentersSvc.UpdateRequest.prototype.setOutsourcingtype = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.clearOutsourcingtype = function() {
  return this.setOutsourcingtype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.CostCentersSvc.UpdateRequest.prototype.hasOutsourcingtype = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional string measureUnit = 37;
 * @return {string}
 */
proto.CostCentersSvc.UpdateRequest.prototype.getMeasureunit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.UpdateRequest} returns this
 */
proto.CostCentersSvc.UpdateRequest.prototype.setMeasureunit = function(value) {
  return jspb.Message.setProto3StringField(this, 37, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.UpdateResponse}
 */
proto.CostCentersSvc.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.UpdateResponse;
  return proto.CostCentersSvc.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.UpdateResponse}
 */
proto.CostCentersSvc.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.CostCentersSvc.UpdateResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.UpdateResponse} returns this
 */
proto.CostCentersSvc.UpdateResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    costcenter: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.DeleteRequest}
 */
proto.CostCentersSvc.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.DeleteRequest;
  return proto.CostCentersSvc.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.DeleteRequest}
 */
proto.CostCentersSvc.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCostcenter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCostcenter();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string costCenter = 1;
 * @return {string}
 */
proto.CostCentersSvc.DeleteRequest.prototype.getCostcenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.CostCentersSvc.DeleteRequest} returns this
 */
proto.CostCentersSvc.DeleteRequest.prototype.setCostcenter = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.CostCentersSvc.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.CostCentersSvc.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.CostCentersSvc.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.CostCentersSvc.DeleteResponse}
 */
proto.CostCentersSvc.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.CostCentersSvc.DeleteResponse;
  return proto.CostCentersSvc.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.CostCentersSvc.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.CostCentersSvc.DeleteResponse}
 */
proto.CostCentersSvc.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.CostCentersSvc.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.CostCentersSvc.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.CostCentersSvc.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.CostCentersSvc.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.CostCentersSvc.DeleteResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.CostCentersSvc.DeleteResponse} returns this
 */
proto.CostCentersSvc.DeleteResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.CostCentersSvc);
