/**
 * @fileoverview gRPC-Web generated client stub for CostCentersSvc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: mes/CostCenters.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js')

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.CostCentersSvc = require('./CostCenters_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.CostCentersSvc.CostCentersClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.CostCentersSvc.CostCentersPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForCalendarTypeRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForCalendarType = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForCalendarType',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForCalendarTypeRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForCalendarType =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCalendarType',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCalendarType,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForCalendarType =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCalendarType',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCalendarType);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForCalendarTypeRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForCalendarTypeJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForCalendarTypeJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForCalendarTypeRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForCalendarTypeJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCalendarTypeJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCalendarTypeJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForCalendarTypeRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForCalendarTypeJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCalendarTypeJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCalendarTypeJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForCustomersRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForCustomers = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForCustomers',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForCustomersRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForCustomersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForCustomersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForCustomers =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCustomers',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCustomers,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForCustomersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForCustomers =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCustomers',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCustomers);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForCustomersRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForCustomersJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForCustomersJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForCustomersRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForCustomersRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForCustomersRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForCustomersJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCustomersJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCustomersJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForCustomersRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForCustomersJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCustomersJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCustomersJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForLocationRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForLocation = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForLocation',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForLocationRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForLocation =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForLocation',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForLocation,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForLocation =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForLocation',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForLocation);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForLocationRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForLocationJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForLocationJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForLocationRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForLocationRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForLocationJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForLocationJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForLocationJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForLocationRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForLocationJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForLocationJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForLocationJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForCostCenterTypesRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForCostCenterTypes = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForCostCenterTypes',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForCostCenterTypesRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForCostCenterTypes =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCostCenterTypes',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCostCenterTypes,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForCostCenterTypes =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCostCenterTypes',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCostCenterTypes);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForCostCenterTypesRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForCostCenterTypesJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForCostCenterTypesJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForCostCenterTypesRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForCostCenterTypesJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCostCenterTypesJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCostCenterTypesJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForCostCenterTypesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForCostCenterTypesJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForCostCenterTypesJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForCostCenterTypesJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForBusinessClass_SaleRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForBusinessClass_Sale = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForBusinessClass_Sale',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForBusinessClass_SaleRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForBusinessClass_Sale =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForBusinessClass_Sale',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForBusinessClass_Sale,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForBusinessClass_Sale =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForBusinessClass_Sale',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForBusinessClass_Sale);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForBusinessClass_SaleRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForBusinessClass_SaleJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForBusinessClass_SaleJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForBusinessClass_SaleRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForBusinessClass_SaleJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForBusinessClass_SaleJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForBusinessClass_SaleJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForBusinessClass_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForBusinessClass_SaleJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForBusinessClass_SaleJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForBusinessClass_SaleJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForInspectionSystemsRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForInspectionSystems = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForInspectionSystems',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForInspectionSystemsRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForInspectionSystems =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForInspectionSystems',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForInspectionSystems,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForInspectionSystems =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForInspectionSystems',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForInspectionSystems);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForInspectionSystemsRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForInspectionSystemsJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForInspectionSystemsJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForInspectionSystemsRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForInspectionSystemsJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForInspectionSystemsJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForInspectionSystemsJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForInspectionSystemsRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForInspectionSystemsJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForInspectionSystemsJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForInspectionSystemsJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForMeasureUnitRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForMeasureUnit = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForMeasureUnit',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForMeasureUnitRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForMeasureUnit =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForMeasureUnit',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForMeasureUnit,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForMeasureUnit =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForMeasureUnit',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForMeasureUnit);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetForMeasureUnitRequest,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetForMeasureUnitJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetForMeasureUnitJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetForMeasureUnitRequest,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getForMeasureUnitJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForMeasureUnitJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForMeasureUnitJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetForMeasureUnitRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getForMeasureUnitJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetForMeasureUnitJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetForMeasureUnitJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetByKeyRequest,
 *   !proto.CostCentersSvc.CostCentersResponse>}
 */
const methodDescriptor_CostCenters_GetByKey = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetByKey',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetByKeyRequest,
  proto.CostCentersSvc.CostCentersResponse,
  /**
   * @param {!proto.CostCentersSvc.GetByKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getByKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetByKey',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetByKey,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getByKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetByKey',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetByKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.GetByKeyRequest,
 *   !proto.CostCentersSvc.CostCentersResponse>}
 */
const methodDescriptor_CostCenters_GetByKeyJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetByKeyJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.GetByKeyRequest,
  proto.CostCentersSvc.CostCentersResponse,
  /**
   * @param {!proto.CostCentersSvc.GetByKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getByKeyJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetByKeyJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetByKeyJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getByKeyJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetByKeyJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetByKeyJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetAll = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetAll',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getAll =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetAll',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetAll,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getAll =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetAll',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetAll);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.CostCentersSvc.CostCentersSetResponse>}
 */
const methodDescriptor_CostCenters_GetAllJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/GetAllJson',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.CostCentersSvc.CostCentersSetResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersSetResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.getAllJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetAllJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetAllJson,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersSetResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.getAllJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/GetAllJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_GetAllJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.InsertRequest,
 *   !proto.CostCentersSvc.CostCentersResponse>}
 */
const methodDescriptor_CostCenters_Insert = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/Insert',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.InsertRequest,
  proto.CostCentersSvc.CostCentersResponse,
  /**
   * @param {!proto.CostCentersSvc.InsertRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.insert =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/Insert',
      request,
      metadata || {},
      methodDescriptor_CostCenters_Insert,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.insert =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/Insert',
      request,
      metadata || {},
      methodDescriptor_CostCenters_Insert);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.InsertRequest,
 *   !proto.CostCentersSvc.CostCentersResponse>}
 */
const methodDescriptor_CostCenters_InsertJson = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/InsertJson',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.InsertRequest,
  proto.CostCentersSvc.CostCentersResponse,
  /**
   * @param {!proto.CostCentersSvc.InsertRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.CostCentersResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.CostCentersResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.CostCentersResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.insertJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/InsertJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_InsertJson,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.CostCentersResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.insertJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/InsertJson',
      request,
      metadata || {},
      methodDescriptor_CostCenters_InsertJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.UpdateRequest,
 *   !proto.CostCentersSvc.UpdateResponse>}
 */
const methodDescriptor_CostCenters_Update = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/Update',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.UpdateRequest,
  proto.CostCentersSvc.UpdateResponse,
  /**
   * @param {!proto.CostCentersSvc.UpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.UpdateResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.UpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.UpdateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.UpdateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/Update',
      request,
      metadata || {},
      methodDescriptor_CostCenters_Update,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.UpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.UpdateResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/Update',
      request,
      metadata || {},
      methodDescriptor_CostCenters_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.CostCentersSvc.DeleteRequest,
 *   !proto.CostCentersSvc.DeleteResponse>}
 */
const methodDescriptor_CostCenters_Delete = new grpc.web.MethodDescriptor(
  '/CostCentersSvc.CostCenters/Delete',
  grpc.web.MethodType.UNARY,
  proto.CostCentersSvc.DeleteRequest,
  proto.CostCentersSvc.DeleteResponse,
  /**
   * @param {!proto.CostCentersSvc.DeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.CostCentersSvc.DeleteResponse.deserializeBinary
);


/**
 * @param {!proto.CostCentersSvc.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.CostCentersSvc.DeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.CostCentersSvc.DeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.CostCentersSvc.CostCentersClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/Delete',
      request,
      metadata || {},
      methodDescriptor_CostCenters_Delete,
      callback);
};


/**
 * @param {!proto.CostCentersSvc.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.CostCentersSvc.DeleteResponse>}
 *     Promise that resolves to the response
 */
proto.CostCentersSvc.CostCentersPromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/CostCentersSvc.CostCenters/Delete',
      request,
      metadata || {},
      methodDescriptor_CostCenters_Delete);
};


module.exports = proto.CostCentersSvc;

