// source: mes/BusinessClass_Sale.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.DataSetResponse', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.DeleteRequest', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.DeleteResponse', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.GetByKeyRequest', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.GrpcDecimal', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.InsertRequest', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.UpdateRequest', null, global);
goog.exportSymbol('proto.BusinessClass_SaleSvc.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.GrpcDecimal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.GrpcDecimal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.GrpcDecimal.displayName = 'proto.BusinessClass_SaleSvc.GrpcDecimal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.displayName = 'proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.displayName = 'proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.DataSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.DataSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.DataSetResponse.displayName = 'proto.BusinessClass_SaleSvc.DataSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.GetByKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.GetByKeyRequest.displayName = 'proto.BusinessClass_SaleSvc.GetByKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.InsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.InsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.InsertRequest.displayName = 'proto.BusinessClass_SaleSvc.InsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.UpdateRequest.displayName = 'proto.BusinessClass_SaleSvc.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.UpdateResponse.displayName = 'proto.BusinessClass_SaleSvc.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.DeleteRequest.displayName = 'proto.BusinessClass_SaleSvc.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClass_SaleSvc.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClass_SaleSvc.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClass_SaleSvc.DeleteResponse.displayName = 'proto.BusinessClass_SaleSvc.DeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.GrpcDecimal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.GrpcDecimal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.toObject = function(includeInstance, msg) {
  var f, obj = {
    units: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.GrpcDecimal}
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.GrpcDecimal;
  return proto.BusinessClass_SaleSvc.GrpcDecimal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.GrpcDecimal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.GrpcDecimal}
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.GrpcDecimal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.GrpcDecimal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnits();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeSfixed32(
      2,
      f
    );
  }
};


/**
 * optional int64 units = 1;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.prototype.getUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.GrpcDecimal} returns this
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.prototype.setUnits = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sfixed32 nanos = 2;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.prototype.getNanos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.GrpcDecimal} returns this
 */
proto.BusinessClass_SaleSvc.GrpcDecimal.prototype.setNanos = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclassSale: msg.getBusinessclassSale_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse;
  return proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBusinessclassSale(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclassSale_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes businessClass_Sale = 1;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.getBusinessclassSale = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes businessClass_Sale = 1;
 * This is a type-conversion wrapper around `getBusinessclassSale()`
 * @return {string}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.getBusinessclassSale_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBusinessclassSale()));
};


/**
 * optional bytes businessClass_Sale = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBusinessclassSale()`
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.getBusinessclassSale_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBusinessclassSale()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse} returns this
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.setBusinessclassSale = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse} returns this
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclassSaleset: msg.getBusinessclassSaleset_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse;
  return proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBusinessclassSaleset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclassSaleset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes businessClass_SaleSet = 1;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.getBusinessclassSaleset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes businessClass_SaleSet = 1;
 * This is a type-conversion wrapper around `getBusinessclassSaleset()`
 * @return {string}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.getBusinessclassSaleset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBusinessclassSaleset()));
};


/**
 * optional bytes businessClass_SaleSet = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBusinessclassSaleset()`
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.getBusinessclassSaleset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBusinessclassSaleset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse} returns this
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.setBusinessclassSaleset = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse} returns this
 */
proto.BusinessClass_SaleSvc.BusinessClass_SaleSetResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.DataSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.DataSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.DataSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataset: msg.getDataset_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.DataSetResponse}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.DataSetResponse;
  return proto.BusinessClass_SaleSvc.DataSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.DataSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.DataSetResponse}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDataset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.DataSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.DataSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.DataSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes dataSet = 1;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.getDataset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes dataSet = 1;
 * This is a type-conversion wrapper around `getDataset()`
 * @return {string}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.getDataset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDataset()));
};


/**
 * optional bytes dataSet = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataset()`
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.getDataset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDataset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClass_SaleSvc.DataSetResponse} returns this
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.setDataset = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.DataSetResponse} returns this
 */
proto.BusinessClass_SaleSvc.DataSetResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.GetByKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.GetByKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.GetByKeyRequest}
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.GetByKeyRequest;
  return proto.BusinessClass_SaleSvc.GetByKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.GetByKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.GetByKeyRequest}
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.GetByKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.GetByKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.GetByKeyRequest} returns this
 */
proto.BusinessClass_SaleSvc.GetByKeyRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.InsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.InsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.InsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businesscode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    president: jspb.Message.getFieldWithDefault(msg, 5, ""),
    businessitem: jspb.Message.getFieldWithDefault(msg, 6, ""),
    businesstype: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customercode: (f = msg.getCustomercode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    locationno: (f = msg.getLocationno()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    productlocationno: (f = msg.getProductlocationno()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest}
 */
proto.BusinessClass_SaleSvc.InsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.InsertRequest;
  return proto.BusinessClass_SaleSvc.InsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.InsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest}
 */
proto.BusinessClass_SaleSvc.InsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesscode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresident(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessitem(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesstype(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCustomercode(value);
      break;
    case 9:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setLocationno(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setProductlocationno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.InsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.InsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.InsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinesscode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPresident();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBusinessitem();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBusinesstype();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomercode();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getLocationno();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getProductlocationno();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string companyName = 3;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string businessCode = 4;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getBusinesscode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setBusinesscode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string president = 5;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getPresident = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setPresident = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string businessItem = 6;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getBusinessitem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setBusinessitem = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string businessType = 7;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getBusinesstype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setBusinesstype = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional google.protobuf.StringValue customerCode = 8;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getCustomercode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 8));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
*/
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setCustomercode = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.clearCustomercode = function() {
  return this.setCustomercode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.hasCustomercode = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Int32Value locationNo = 9;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getLocationno = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 9));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
*/
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setLocationno = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.clearLocationno = function() {
  return this.setLocationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.hasLocationno = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Int32Value productLocationNo = 10;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.getProductlocationno = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 10));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
*/
proto.BusinessClass_SaleSvc.InsertRequest.prototype.setProductlocationno = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClass_SaleSvc.InsertRequest} returns this
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.clearProductlocationno = function() {
  return this.setProductlocationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClass_SaleSvc.InsertRequest.prototype.hasProductlocationno = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    companyname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    businesscode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    president: jspb.Message.getFieldWithDefault(msg, 5, ""),
    businessitem: jspb.Message.getFieldWithDefault(msg, 6, ""),
    businesstype: jspb.Message.getFieldWithDefault(msg, 7, ""),
    customercode: (f = msg.getCustomercode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    locationno: (f = msg.getLocationno()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    productlocationno: (f = msg.getProductlocationno()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.UpdateRequest;
  return proto.BusinessClass_SaleSvc.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesscode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPresident(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessitem(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesstype(value);
      break;
    case 8:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCustomercode(value);
      break;
    case 9:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setLocationno(value);
      break;
    case 10:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setProductlocationno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBusinesscode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPresident();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBusinessitem();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getBusinesstype();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCustomercode();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getLocationno();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getProductlocationno();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string companyName = 3;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string businessCode = 4;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getBusinesscode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setBusinesscode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string president = 5;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getPresident = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setPresident = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string businessItem = 6;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getBusinessitem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setBusinessitem = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string businessType = 7;
 * @return {string}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getBusinesstype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setBusinesstype = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional google.protobuf.StringValue customerCode = 8;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getCustomercode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 8));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
*/
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setCustomercode = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.clearCustomercode = function() {
  return this.setCustomercode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.hasCustomercode = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Int32Value locationNo = 9;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getLocationno = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 9));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
*/
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setLocationno = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.clearLocationno = function() {
  return this.setLocationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.hasLocationno = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional google.protobuf.Int32Value productLocationNo = 10;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.getProductlocationno = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 10));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
*/
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.setProductlocationno = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClass_SaleSvc.UpdateRequest} returns this
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.clearProductlocationno = function() {
  return this.setProductlocationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClass_SaleSvc.UpdateRequest.prototype.hasProductlocationno = function() {
  return jspb.Message.getField(this, 10) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.UpdateResponse}
 */
proto.BusinessClass_SaleSvc.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.UpdateResponse;
  return proto.BusinessClass_SaleSvc.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.UpdateResponse}
 */
proto.BusinessClass_SaleSvc.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.UpdateResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.UpdateResponse} returns this
 */
proto.BusinessClass_SaleSvc.UpdateResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.DeleteRequest}
 */
proto.BusinessClass_SaleSvc.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.DeleteRequest;
  return proto.BusinessClass_SaleSvc.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.DeleteRequest}
 */
proto.BusinessClass_SaleSvc.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.DeleteRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.DeleteRequest} returns this
 */
proto.BusinessClass_SaleSvc.DeleteRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClass_SaleSvc.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClass_SaleSvc.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClass_SaleSvc.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClass_SaleSvc.DeleteResponse}
 */
proto.BusinessClass_SaleSvc.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClass_SaleSvc.DeleteResponse;
  return proto.BusinessClass_SaleSvc.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClass_SaleSvc.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClass_SaleSvc.DeleteResponse}
 */
proto.BusinessClass_SaleSvc.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClass_SaleSvc.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClass_SaleSvc.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClass_SaleSvc.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClass_SaleSvc.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.BusinessClass_SaleSvc.DeleteResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClass_SaleSvc.DeleteResponse} returns this
 */
proto.BusinessClass_SaleSvc.DeleteResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.BusinessClass_SaleSvc);
