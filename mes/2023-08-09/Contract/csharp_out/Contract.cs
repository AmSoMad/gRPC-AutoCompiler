// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mes/Contract.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HaccpManager.ContractProtos {

  /// <summary>Holder for reflection information generated from mes/Contract.proto</summary>
  public static partial class ContractReflection {

    #region Descriptor
    /// <summary>File descriptor for mes/Contract.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContractReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJtZXMvQ29udHJhY3QucHJvdG8SC0NvbnRyYWN0U3ZjGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGh5nb29nbGUvcHJvdG9idWYvZHVyYXRp",
            "b24ucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxobZ29v",
            "Z2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvIisKC0dycGNEZWNpbWFsEg0KBXVu",
            "aXRzGAEgASgDEg0KBW5hbm9zGAIgASgPIjgKEENvbnRyYWN0UmVzcG9uc2US",
            "EAoIY29udHJhY3QYASABKAwSEgoKanNvblN0cmluZxgCIAEoCSI+ChNDb250",
            "cmFjdFNldFJlc3BvbnNlEhMKC2NvbnRyYWN0U2V0GAEgASgMEhIKCmpzb25T",
            "dHJpbmcYAiABKAkiNgoPRGF0YVNldFJlc3BvbnNlEg8KB2RhdGFTZXQYASAB",
            "KAwSEgoKanNvblN0cmluZxgCIAEoCSIqChZHZXRGb3JEZXB0X1NhbGVSZXF1",
            "ZXN0EhAKCGRlcHRDb2RlGAEgASgRIi4KFkdldEZvckVtcGxveWVlc1JlcXVl",
            "c3QSFAoMZW1wbG95ZWVDb2RlGAEgASgJIiUKD0dldEJ5S2V5UmVxdWVzdBIS",
            "Cgpjb250cmFjdE5vGAEgASgJIskFCg1JbnNlcnRSZXF1ZXN0EhIKCmNvbnRy",
            "YWN0Tm8YASABKAkSFAoMY29udHJhY3RGbGFnGAIgASgREi0KCXN0YXJ0RGF0",
            "ZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASKwoHZW5kRGF0",
            "ZRgEIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASLQoHc2VjdGlv",
            "bhgFIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIqCgZhbW91",
            "bnQYBiABKAsyGC5Db250cmFjdFN2Yy5HcnBjRGVjaW1hbEgAEiUKA3ZBVBgH",
            "IAEoCzIYLkNvbnRyYWN0U3ZjLkdycGNEZWNpbWFsEjAKDGNvbnRyYWN0RGF0",
            "ZRgIIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASDgoGcmVtYXJr",
            "GAkgASgJEi0KCGRlcHRDb2RlGAogASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUSFAoMZW1wbG95ZWVDb2RlGAsgASgJEi0KCXNhbGVUb0FtdBgM",
            "IAEoCzIYLkNvbnRyYWN0U3ZjLkdycGNEZWNpbWFsSAESNAoPc2FsZUlzc3Vl",
            "TWV0aG9kGA0gASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSGgoS",
            "bW9uZXlDb25kaXRpb25Db2RlGA4gASgREhQKDHByb2dyZXNzRmxhZxgPIAEo",
            "ARIvCgllbnRyeURhdGUYECABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0",
            "YW1wSAISLgoIdXNlckNvZGUYESABKAsyHC5nb29nbGUucHJvdG9idWYuU3Ry",
            "aW5nVmFsdWVCDQoLb25lb2ZBbW91bnRCEAoOb25lb2ZTYWxlVG9BbXRCEAoO",
            "b25lb2ZFbnRyeURhdGUiyQUKDVVwZGF0ZVJlcXVlc3QSEgoKY29udHJhY3RO",
            "bxgBIAEoCRIUCgxjb250cmFjdEZsYWcYAiABKBESLQoJc3RhcnREYXRlGAMg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIrCgdlbmREYXRlGAQg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBItCgdzZWN0aW9uGAUg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEioKBmFtb3VudBgG",
            "IAEoCzIYLkNvbnRyYWN0U3ZjLkdycGNEZWNpbWFsSAASJQoDdkFUGAcgASgL",
            "MhguQ29udHJhY3RTdmMuR3JwY0RlY2ltYWwSMAoMY29udHJhY3REYXRlGAgg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIOCgZyZW1hcmsYCSAB",
            "KAkSLQoIZGVwdENvZGUYCiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJW",
            "YWx1ZRIUCgxlbXBsb3llZUNvZGUYCyABKAkSLQoJc2FsZVRvQW10GAwgASgL",
            "MhguQ29udHJhY3RTdmMuR3JwY0RlY2ltYWxIARI0Cg9zYWxlSXNzdWVNZXRo",
            "b2QYDSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIaChJtb25l",
            "eUNvbmRpdGlvbkNvZGUYDiABKBESFAoMcHJvZ3Jlc3NGbGFnGA8gASgBEi8K",
            "CWVudHJ5RGF0ZRgQIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBI",
            "AhIuCgh1c2VyQ29kZRgRIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZUINCgtvbmVvZkFtb3VudEIQCg5vbmVvZlNhbGVUb0FtdEIQCg5vbmVv",
            "ZkVudHJ5RGF0ZSIfCg5VcGRhdGVSZXNwb25zZRINCgVjb3VudBgBIAEoBSIj",
            "Cg1EZWxldGVSZXF1ZXN0EhIKCmNvbnRyYWN0Tm8YASABKAkiHwoORGVsZXRl",
            "UmVzcG9uc2USDQoFY291bnQYASABKAUysAcKCENvbnRyYWN0ElgKD0dldEZv",
            "ckRlcHRfU2FsZRIjLkNvbnRyYWN0U3ZjLkdldEZvckRlcHRfU2FsZVJlcXVl",
            "c3QaIC5Db250cmFjdFN2Yy5Db250cmFjdFNldFJlc3BvbnNlElwKE0dldEZv",
            "ckRlcHRfU2FsZUpzb24SIy5Db250cmFjdFN2Yy5HZXRGb3JEZXB0X1NhbGVS",
            "ZXF1ZXN0GiAuQ29udHJhY3RTdmMuQ29udHJhY3RTZXRSZXNwb25zZRJYCg9H",
            "ZXRGb3JFbXBsb3llZXMSIy5Db250cmFjdFN2Yy5HZXRGb3JFbXBsb3llZXNS",
            "ZXF1ZXN0GiAuQ29udHJhY3RTdmMuQ29udHJhY3RTZXRSZXNwb25zZRJcChNH",
            "ZXRGb3JFbXBsb3llZXNKc29uEiMuQ29udHJhY3RTdmMuR2V0Rm9yRW1wbG95",
            "ZWVzUmVxdWVzdBogLkNvbnRyYWN0U3ZjLkNvbnRyYWN0U2V0UmVzcG9uc2US",
            "RwoIR2V0QnlLZXkSHC5Db250cmFjdFN2Yy5HZXRCeUtleVJlcXVlc3QaHS5D",
            "b250cmFjdFN2Yy5Db250cmFjdFJlc3BvbnNlEksKDEdldEJ5S2V5SnNvbhIc",
            "LkNvbnRyYWN0U3ZjLkdldEJ5S2V5UmVxdWVzdBodLkNvbnRyYWN0U3ZjLkNv",
            "bnRyYWN0UmVzcG9uc2USQgoGR2V0QWxsEhYuZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5GiAuQ29udHJhY3RTdmMuQ29udHJhY3RTZXRSZXNwb25zZRJGCgpHZXRB",
            "bGxKc29uEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GiAuQ29udHJhY3RTdmMu",
            "Q29udHJhY3RTZXRSZXNwb25zZRJDCgZJbnNlcnQSGi5Db250cmFjdFN2Yy5J",
            "bnNlcnRSZXF1ZXN0Gh0uQ29udHJhY3RTdmMuQ29udHJhY3RSZXNwb25zZRJH",
            "CgpJbnNlcnRKc29uEhouQ29udHJhY3RTdmMuSW5zZXJ0UmVxdWVzdBodLkNv",
            "bnRyYWN0U3ZjLkNvbnRyYWN0UmVzcG9uc2USQQoGVXBkYXRlEhouQ29udHJh",
            "Y3RTdmMuVXBkYXRlUmVxdWVzdBobLkNvbnRyYWN0U3ZjLlVwZGF0ZVJlc3Bv",
            "bnNlEkEKBkRlbGV0ZRIaLkNvbnRyYWN0U3ZjLkRlbGV0ZVJlcXVlc3QaGy5D",
            "b250cmFjdFN2Yy5EZWxldGVSZXNwb25zZUIeqgIbSGFjY3BNYW5hZ2VyLkNv",
            "bnRyYWN0UHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.GrpcDecimal), global::HaccpManager.ContractProtos.GrpcDecimal.Parser, new[]{ "Units", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.ContractResponse), global::HaccpManager.ContractProtos.ContractResponse.Parser, new[]{ "Contract", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.ContractSetResponse), global::HaccpManager.ContractProtos.ContractSetResponse.Parser, new[]{ "ContractSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.DataSetResponse), global::HaccpManager.ContractProtos.DataSetResponse.Parser, new[]{ "DataSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.GetForDept_SaleRequest), global::HaccpManager.ContractProtos.GetForDept_SaleRequest.Parser, new[]{ "DeptCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.GetForEmployeesRequest), global::HaccpManager.ContractProtos.GetForEmployeesRequest.Parser, new[]{ "EmployeeCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.GetByKeyRequest), global::HaccpManager.ContractProtos.GetByKeyRequest.Parser, new[]{ "ContractNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.InsertRequest), global::HaccpManager.ContractProtos.InsertRequest.Parser, new[]{ "ContractNo", "ContractFlag", "StartDate", "EndDate", "Section", "Amount", "VAT", "ContractDate", "Remark", "DeptCode", "EmployeeCode", "SaleToAmt", "SaleIssueMethod", "MoneyConditionCode", "ProgressFlag", "EntryDate", "UserCode" }, new[]{ "OneofAmount", "OneofSaleToAmt", "OneofEntryDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.UpdateRequest), global::HaccpManager.ContractProtos.UpdateRequest.Parser, new[]{ "ContractNo", "ContractFlag", "StartDate", "EndDate", "Section", "Amount", "VAT", "ContractDate", "Remark", "DeptCode", "EmployeeCode", "SaleToAmt", "SaleIssueMethod", "MoneyConditionCode", "ProgressFlag", "EntryDate", "UserCode" }, new[]{ "OneofAmount", "OneofSaleToAmt", "OneofEntryDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.UpdateResponse), global::HaccpManager.ContractProtos.UpdateResponse.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.DeleteRequest), global::HaccpManager.ContractProtos.DeleteRequest.Parser, new[]{ "ContractNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.ContractProtos.DeleteResponse), global::HaccpManager.ContractProtos.DeleteResponse.Parser, new[]{ "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcDecimal : pb::IMessage<GrpcDecimal> {
    private static readonly pb::MessageParser<GrpcDecimal> _parser = new pb::MessageParser<GrpcDecimal>(() => new GrpcDecimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDecimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal(GrpcDecimal other) : this() {
      units_ = other.units_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal Clone() {
      return new GrpcDecimal(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private long units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDecimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDecimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0L) hash ^= Units.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Units);
      }
      if (Nanos != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Units);
      }
      if (Nanos != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDecimal other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0L) {
        Units = other.Units;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Units = input.ReadInt64();
            break;
          }
          case 21: {
            Nanos = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractResponse : pb::IMessage<ContractResponse> {
    private static readonly pb::MessageParser<ContractResponse> _parser = new pb::MessageParser<ContractResponse>(() => new ContractResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractResponse(ContractResponse other) : this() {
      contract_ = other.contract_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractResponse Clone() {
      return new ContractResponse(this);
    }

    /// <summary>Field number for the "contract" field.</summary>
    public const int ContractFieldNumber = 1;
    private pb::ByteString contract_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Contract {
      get { return contract_; }
      set {
        contract_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Contract != other.Contract) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Contract.Length != 0) hash ^= Contract.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Contract.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Contract);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Contract.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Contract);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractResponse other) {
      if (other == null) {
        return;
      }
      if (other.Contract.Length != 0) {
        Contract = other.Contract;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Contract = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ContractSetResponse : pb::IMessage<ContractSetResponse> {
    private static readonly pb::MessageParser<ContractSetResponse> _parser = new pb::MessageParser<ContractSetResponse>(() => new ContractSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ContractSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractSetResponse(ContractSetResponse other) : this() {
      contractSet_ = other.contractSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContractSetResponse Clone() {
      return new ContractSetResponse(this);
    }

    /// <summary>Field number for the "contractSet" field.</summary>
    public const int ContractSetFieldNumber = 1;
    private pb::ByteString contractSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractSet {
      get { return contractSet_; }
      set {
        contractSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ContractSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ContractSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractSet != other.ContractSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractSet.Length != 0) hash ^= ContractSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ContractSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ContractSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.ContractSet.Length != 0) {
        ContractSet = other.ContractSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSetResponse : pb::IMessage<DataSetResponse> {
    private static readonly pb::MessageParser<DataSetResponse> _parser = new pb::MessageParser<DataSetResponse>(() => new DataSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse(DataSetResponse other) : this() {
      dataSet_ = other.dataSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse Clone() {
      return new DataSetResponse(this);
    }

    /// <summary>Field number for the "dataSet" field.</summary>
    public const int DataSetFieldNumber = 1;
    private pb::ByteString dataSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataSet {
      get { return dataSet_; }
      set {
        dataSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSet != other.DataSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSet.Length != 0) hash ^= DataSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DataSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DataSet.Length != 0) {
        DataSet = other.DataSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForDept_SaleRequest : pb::IMessage<GetForDept_SaleRequest> {
    private static readonly pb::MessageParser<GetForDept_SaleRequest> _parser = new pb::MessageParser<GetForDept_SaleRequest>(() => new GetForDept_SaleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForDept_SaleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForDept_SaleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForDept_SaleRequest(GetForDept_SaleRequest other) : this() {
      deptCode_ = other.deptCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForDept_SaleRequest Clone() {
      return new GetForDept_SaleRequest(this);
    }

    /// <summary>Field number for the "deptCode" field.</summary>
    public const int DeptCodeFieldNumber = 1;
    private int deptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeptCode {
      get { return deptCode_; }
      set {
        deptCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForDept_SaleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForDept_SaleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeptCode != other.DeptCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeptCode != 0) hash ^= DeptCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeptCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(DeptCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeptCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DeptCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForDept_SaleRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeptCode != 0) {
        DeptCode = other.DeptCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeptCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForEmployeesRequest : pb::IMessage<GetForEmployeesRequest> {
    private static readonly pb::MessageParser<GetForEmployeesRequest> _parser = new pb::MessageParser<GetForEmployeesRequest>(() => new GetForEmployeesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForEmployeesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForEmployeesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForEmployeesRequest(GetForEmployeesRequest other) : this() {
      employeeCode_ = other.employeeCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForEmployeesRequest Clone() {
      return new GetForEmployeesRequest(this);
    }

    /// <summary>Field number for the "employeeCode" field.</summary>
    public const int EmployeeCodeFieldNumber = 1;
    private string employeeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmployeeCode {
      get { return employeeCode_; }
      set {
        employeeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForEmployeesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForEmployeesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EmployeeCode != other.EmployeeCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EmployeeCode.Length != 0) hash ^= EmployeeCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EmployeeCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(EmployeeCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EmployeeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmployeeCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForEmployeesRequest other) {
      if (other == null) {
        return;
      }
      if (other.EmployeeCode.Length != 0) {
        EmployeeCode = other.EmployeeCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            EmployeeCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByKeyRequest : pb::IMessage<GetByKeyRequest> {
    private static readonly pb::MessageParser<GetByKeyRequest> _parser = new pb::MessageParser<GetByKeyRequest>(() => new GetByKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest(GetByKeyRequest other) : this() {
      contractNo_ = other.contractNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest Clone() {
      return new GetByKeyRequest(this);
    }

    /// <summary>Field number for the "contractNo" field.</summary>
    public const int ContractNoFieldNumber = 1;
    private string contractNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNo {
      get { return contractNo_; }
      set {
        contractNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNo != other.ContractNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNo.Length != 0) hash ^= ContractNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContractNo.Length != 0) {
        ContractNo = other.ContractNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertRequest : pb::IMessage<InsertRequest> {
    private static readonly pb::MessageParser<InsertRequest> _parser = new pb::MessageParser<InsertRequest>(() => new InsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest(InsertRequest other) : this() {
      contractNo_ = other.contractNo_;
      contractFlag_ = other.contractFlag_;
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      Section = other.Section;
      vAT_ = other.vAT_ != null ? other.vAT_.Clone() : null;
      contractDate_ = other.contractDate_ != null ? other.contractDate_.Clone() : null;
      remark_ = other.remark_;
      DeptCode = other.DeptCode;
      employeeCode_ = other.employeeCode_;
      SaleIssueMethod = other.SaleIssueMethod;
      moneyConditionCode_ = other.moneyConditionCode_;
      progressFlag_ = other.progressFlag_;
      UserCode = other.UserCode;
      switch (other.OneofAmountCase) {
        case OneofAmountOneofCase.Amount:
          Amount = other.Amount.Clone();
          break;
      }

      switch (other.OneofSaleToAmtCase) {
        case OneofSaleToAmtOneofCase.SaleToAmt:
          SaleToAmt = other.SaleToAmt.Clone();
          break;
      }

      switch (other.OneofEntryDateCase) {
        case OneofEntryDateOneofCase.EntryDate:
          EntryDate = other.EntryDate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest Clone() {
      return new InsertRequest(this);
    }

    /// <summary>Field number for the "contractNo" field.</summary>
    public const int ContractNoFieldNumber = 1;
    private string contractNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNo {
      get { return contractNo_; }
      set {
        contractNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractFlag" field.</summary>
    public const int ContractFlagFieldNumber = 2;
    private int contractFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContractFlag {
      get { return contractFlag_; }
      set {
        contractFlag_ = value;
      }
    }

    /// <summary>Field number for the "startDate" field.</summary>
    public const int StartDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "section" field.</summary>
    public const int SectionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_section_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string section_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Section {
      get { return section_; }
      set {
        section_ = value;
      }
    }


    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.ContractProtos.GrpcDecimal Amount {
      get { return oneofAmountCase_ == OneofAmountOneofCase.Amount ? (global::HaccpManager.ContractProtos.GrpcDecimal) oneofAmount_ : null; }
      set {
        oneofAmount_ = value;
        oneofAmountCase_ = value == null ? OneofAmountOneofCase.None : OneofAmountOneofCase.Amount;
      }
    }

    /// <summary>Field number for the "vAT" field.</summary>
    public const int VATFieldNumber = 7;
    private global::HaccpManager.ContractProtos.GrpcDecimal vAT_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.ContractProtos.GrpcDecimal VAT {
      get { return vAT_; }
      set {
        vAT_ = value;
      }
    }

    /// <summary>Field number for the "contractDate" field.</summary>
    public const int ContractDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp contractDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ContractDate {
      get { return contractDate_; }
      set {
        contractDate_ = value;
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 9;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deptCode" field.</summary>
    public const int DeptCodeFieldNumber = 10;
    private static readonly pb::FieldCodec<int?> _single_deptCode_codec = pb::FieldCodec.ForStructWrapper<int>(82);
    private int? deptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DeptCode {
      get { return deptCode_; }
      set {
        deptCode_ = value;
      }
    }


    /// <summary>Field number for the "employeeCode" field.</summary>
    public const int EmployeeCodeFieldNumber = 11;
    private string employeeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmployeeCode {
      get { return employeeCode_; }
      set {
        employeeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "saleToAmt" field.</summary>
    public const int SaleToAmtFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.ContractProtos.GrpcDecimal SaleToAmt {
      get { return oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt ? (global::HaccpManager.ContractProtos.GrpcDecimal) oneofSaleToAmt_ : null; }
      set {
        oneofSaleToAmt_ = value;
        oneofSaleToAmtCase_ = value == null ? OneofSaleToAmtOneofCase.None : OneofSaleToAmtOneofCase.SaleToAmt;
      }
    }

    /// <summary>Field number for the "saleIssueMethod" field.</summary>
    public const int SaleIssueMethodFieldNumber = 13;
    private static readonly pb::FieldCodec<int?> _single_saleIssueMethod_codec = pb::FieldCodec.ForStructWrapper<int>(106);
    private int? saleIssueMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? SaleIssueMethod {
      get { return saleIssueMethod_; }
      set {
        saleIssueMethod_ = value;
      }
    }


    /// <summary>Field number for the "moneyConditionCode" field.</summary>
    public const int MoneyConditionCodeFieldNumber = 14;
    private int moneyConditionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MoneyConditionCode {
      get { return moneyConditionCode_; }
      set {
        moneyConditionCode_ = value;
      }
    }

    /// <summary>Field number for the "progressFlag" field.</summary>
    public const int ProgressFlagFieldNumber = 15;
    private double progressFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ProgressFlag {
      get { return progressFlag_; }
      set {
        progressFlag_ = value;
      }
    }

    /// <summary>Field number for the "entryDate" field.</summary>
    public const int EntryDateFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EntryDate {
      get { return oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofEntryDate_ : null; }
      set {
        oneofEntryDate_ = value;
        oneofEntryDateCase_ = value == null ? OneofEntryDateOneofCase.None : OneofEntryDateOneofCase.EntryDate;
      }
    }

    /// <summary>Field number for the "userCode" field.</summary>
    public const int UserCodeFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_userCode_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string userCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserCode {
      get { return userCode_; }
      set {
        userCode_ = value;
      }
    }


    private object oneofAmount_;
    /// <summary>Enum of possible cases for the "oneofAmount" oneof.</summary>
    public enum OneofAmountOneofCase {
      None = 0,
      Amount = 6,
    }
    private OneofAmountOneofCase oneofAmountCase_ = OneofAmountOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofAmountOneofCase OneofAmountCase {
      get { return oneofAmountCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofAmount() {
      oneofAmountCase_ = OneofAmountOneofCase.None;
      oneofAmount_ = null;
    }

    private object oneofSaleToAmt_;
    /// <summary>Enum of possible cases for the "oneofSaleToAmt" oneof.</summary>
    public enum OneofSaleToAmtOneofCase {
      None = 0,
      SaleToAmt = 12,
    }
    private OneofSaleToAmtOneofCase oneofSaleToAmtCase_ = OneofSaleToAmtOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofSaleToAmtOneofCase OneofSaleToAmtCase {
      get { return oneofSaleToAmtCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofSaleToAmt() {
      oneofSaleToAmtCase_ = OneofSaleToAmtOneofCase.None;
      oneofSaleToAmt_ = null;
    }

    private object oneofEntryDate_;
    /// <summary>Enum of possible cases for the "oneofEntryDate" oneof.</summary>
    public enum OneofEntryDateOneofCase {
      None = 0,
      EntryDate = 16,
    }
    private OneofEntryDateOneofCase oneofEntryDateCase_ = OneofEntryDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofEntryDateOneofCase OneofEntryDateCase {
      get { return oneofEntryDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofEntryDate() {
      oneofEntryDateCase_ = OneofEntryDateOneofCase.None;
      oneofEntryDate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNo != other.ContractNo) return false;
      if (ContractFlag != other.ContractFlag) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (Section != other.Section) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(VAT, other.VAT)) return false;
      if (!object.Equals(ContractDate, other.ContractDate)) return false;
      if (Remark != other.Remark) return false;
      if (DeptCode != other.DeptCode) return false;
      if (EmployeeCode != other.EmployeeCode) return false;
      if (!object.Equals(SaleToAmt, other.SaleToAmt)) return false;
      if (SaleIssueMethod != other.SaleIssueMethod) return false;
      if (MoneyConditionCode != other.MoneyConditionCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ProgressFlag, other.ProgressFlag)) return false;
      if (!object.Equals(EntryDate, other.EntryDate)) return false;
      if (UserCode != other.UserCode) return false;
      if (OneofAmountCase != other.OneofAmountCase) return false;
      if (OneofSaleToAmtCase != other.OneofSaleToAmtCase) return false;
      if (OneofEntryDateCase != other.OneofEntryDateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNo.Length != 0) hash ^= ContractNo.GetHashCode();
      if (ContractFlag != 0) hash ^= ContractFlag.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (section_ != null) hash ^= Section.GetHashCode();
      if (oneofAmountCase_ == OneofAmountOneofCase.Amount) hash ^= Amount.GetHashCode();
      if (vAT_ != null) hash ^= VAT.GetHashCode();
      if (contractDate_ != null) hash ^= ContractDate.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (deptCode_ != null) hash ^= DeptCode.GetHashCode();
      if (EmployeeCode.Length != 0) hash ^= EmployeeCode.GetHashCode();
      if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) hash ^= SaleToAmt.GetHashCode();
      if (saleIssueMethod_ != null) hash ^= SaleIssueMethod.GetHashCode();
      if (MoneyConditionCode != 0) hash ^= MoneyConditionCode.GetHashCode();
      if (ProgressFlag != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ProgressFlag);
      if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) hash ^= EntryDate.GetHashCode();
      if (userCode_ != null) hash ^= UserCode.GetHashCode();
      hash ^= (int) oneofAmountCase_;
      hash ^= (int) oneofSaleToAmtCase_;
      hash ^= (int) oneofEntryDateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNo);
      }
      if (ContractFlag != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ContractFlag);
      }
      if (startDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndDate);
      }
      if (section_ != null) {
        _single_section_codec.WriteTagAndValue(output, Section);
      }
      if (oneofAmountCase_ == OneofAmountOneofCase.Amount) {
        output.WriteRawTag(50);
        output.WriteMessage(Amount);
      }
      if (vAT_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(VAT);
      }
      if (contractDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ContractDate);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Remark);
      }
      if (deptCode_ != null) {
        _single_deptCode_codec.WriteTagAndValue(output, DeptCode);
      }
      if (EmployeeCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(EmployeeCode);
      }
      if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) {
        output.WriteRawTag(98);
        output.WriteMessage(SaleToAmt);
      }
      if (saleIssueMethod_ != null) {
        _single_saleIssueMethod_codec.WriteTagAndValue(output, SaleIssueMethod);
      }
      if (MoneyConditionCode != 0) {
        output.WriteRawTag(112);
        output.WriteSInt32(MoneyConditionCode);
      }
      if (ProgressFlag != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(ProgressFlag);
      }
      if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(EntryDate);
      }
      if (userCode_ != null) {
        _single_userCode_codec.WriteTagAndValue(output, UserCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNo);
      }
      if (ContractFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ContractFlag);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (section_ != null) {
        size += _single_section_codec.CalculateSizeWithTag(Section);
      }
      if (oneofAmountCase_ == OneofAmountOneofCase.Amount) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (vAT_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VAT);
      }
      if (contractDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContractDate);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (deptCode_ != null) {
        size += _single_deptCode_codec.CalculateSizeWithTag(DeptCode);
      }
      if (EmployeeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmployeeCode);
      }
      if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SaleToAmt);
      }
      if (saleIssueMethod_ != null) {
        size += _single_saleIssueMethod_codec.CalculateSizeWithTag(SaleIssueMethod);
      }
      if (MoneyConditionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MoneyConditionCode);
      }
      if (ProgressFlag != 0D) {
        size += 1 + 8;
      }
      if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntryDate);
      }
      if (userCode_ != null) {
        size += _single_userCode_codec.CalculateSizeWithTag(UserCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContractNo.Length != 0) {
        ContractNo = other.ContractNo;
      }
      if (other.ContractFlag != 0) {
        ContractFlag = other.ContractFlag;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.section_ != null) {
        if (section_ == null || other.Section != "") {
          Section = other.Section;
        }
      }
      if (other.vAT_ != null) {
        if (vAT_ == null) {
          VAT = new global::HaccpManager.ContractProtos.GrpcDecimal();
        }
        VAT.MergeFrom(other.VAT);
      }
      if (other.contractDate_ != null) {
        if (contractDate_ == null) {
          ContractDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ContractDate.MergeFrom(other.ContractDate);
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.deptCode_ != null) {
        if (deptCode_ == null || other.DeptCode != 0) {
          DeptCode = other.DeptCode;
        }
      }
      if (other.EmployeeCode.Length != 0) {
        EmployeeCode = other.EmployeeCode;
      }
      if (other.saleIssueMethod_ != null) {
        if (saleIssueMethod_ == null || other.SaleIssueMethod != 0) {
          SaleIssueMethod = other.SaleIssueMethod;
        }
      }
      if (other.MoneyConditionCode != 0) {
        MoneyConditionCode = other.MoneyConditionCode;
      }
      if (other.ProgressFlag != 0D) {
        ProgressFlag = other.ProgressFlag;
      }
      if (other.userCode_ != null) {
        if (userCode_ == null || other.UserCode != "") {
          UserCode = other.UserCode;
        }
      }
      switch (other.OneofAmountCase) {
        case OneofAmountOneofCase.Amount:
          if (Amount == null) {
            Amount = new global::HaccpManager.ContractProtos.GrpcDecimal();
          }
          Amount.MergeFrom(other.Amount);
          break;
      }

      switch (other.OneofSaleToAmtCase) {
        case OneofSaleToAmtOneofCase.SaleToAmt:
          if (SaleToAmt == null) {
            SaleToAmt = new global::HaccpManager.ContractProtos.GrpcDecimal();
          }
          SaleToAmt.MergeFrom(other.SaleToAmt);
          break;
      }

      switch (other.OneofEntryDateCase) {
        case OneofEntryDateOneofCase.EntryDate:
          if (EntryDate == null) {
            EntryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          EntryDate.MergeFrom(other.EntryDate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNo = input.ReadString();
            break;
          }
          case 16: {
            ContractFlag = input.ReadSInt32();
            break;
          }
          case 26: {
            if (startDate_ == null) {
              StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 34: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 42: {
            string value = _single_section_codec.Read(input);
            if (section_ == null || value != "") {
              Section = value;
            }
            break;
          }
          case 50: {
            global::HaccpManager.ContractProtos.GrpcDecimal subBuilder = new global::HaccpManager.ContractProtos.GrpcDecimal();
            if (oneofAmountCase_ == OneofAmountOneofCase.Amount) {
              subBuilder.MergeFrom(Amount);
            }
            input.ReadMessage(subBuilder);
            Amount = subBuilder;
            break;
          }
          case 58: {
            if (vAT_ == null) {
              VAT = new global::HaccpManager.ContractProtos.GrpcDecimal();
            }
            input.ReadMessage(VAT);
            break;
          }
          case 66: {
            if (contractDate_ == null) {
              ContractDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ContractDate);
            break;
          }
          case 74: {
            Remark = input.ReadString();
            break;
          }
          case 82: {
            int? value = _single_deptCode_codec.Read(input);
            if (deptCode_ == null || value != 0) {
              DeptCode = value;
            }
            break;
          }
          case 90: {
            EmployeeCode = input.ReadString();
            break;
          }
          case 98: {
            global::HaccpManager.ContractProtos.GrpcDecimal subBuilder = new global::HaccpManager.ContractProtos.GrpcDecimal();
            if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) {
              subBuilder.MergeFrom(SaleToAmt);
            }
            input.ReadMessage(subBuilder);
            SaleToAmt = subBuilder;
            break;
          }
          case 106: {
            int? value = _single_saleIssueMethod_codec.Read(input);
            if (saleIssueMethod_ == null || value != 0) {
              SaleIssueMethod = value;
            }
            break;
          }
          case 112: {
            MoneyConditionCode = input.ReadSInt32();
            break;
          }
          case 121: {
            ProgressFlag = input.ReadDouble();
            break;
          }
          case 130: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) {
              subBuilder.MergeFrom(EntryDate);
            }
            input.ReadMessage(subBuilder);
            EntryDate = subBuilder;
            break;
          }
          case 138: {
            string value = _single_userCode_codec.Read(input);
            if (userCode_ == null || value != "") {
              UserCode = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      contractNo_ = other.contractNo_;
      contractFlag_ = other.contractFlag_;
      startDate_ = other.startDate_ != null ? other.startDate_.Clone() : null;
      endDate_ = other.endDate_ != null ? other.endDate_.Clone() : null;
      Section = other.Section;
      vAT_ = other.vAT_ != null ? other.vAT_.Clone() : null;
      contractDate_ = other.contractDate_ != null ? other.contractDate_.Clone() : null;
      remark_ = other.remark_;
      DeptCode = other.DeptCode;
      employeeCode_ = other.employeeCode_;
      SaleIssueMethod = other.SaleIssueMethod;
      moneyConditionCode_ = other.moneyConditionCode_;
      progressFlag_ = other.progressFlag_;
      UserCode = other.UserCode;
      switch (other.OneofAmountCase) {
        case OneofAmountOneofCase.Amount:
          Amount = other.Amount.Clone();
          break;
      }

      switch (other.OneofSaleToAmtCase) {
        case OneofSaleToAmtOneofCase.SaleToAmt:
          SaleToAmt = other.SaleToAmt.Clone();
          break;
      }

      switch (other.OneofEntryDateCase) {
        case OneofEntryDateOneofCase.EntryDate:
          EntryDate = other.EntryDate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "contractNo" field.</summary>
    public const int ContractNoFieldNumber = 1;
    private string contractNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNo {
      get { return contractNo_; }
      set {
        contractNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contractFlag" field.</summary>
    public const int ContractFlagFieldNumber = 2;
    private int contractFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ContractFlag {
      get { return contractFlag_; }
      set {
        contractFlag_ = value;
      }
    }

    /// <summary>Field number for the "startDate" field.</summary>
    public const int StartDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartDate {
      get { return startDate_; }
      set {
        startDate_ = value;
      }
    }

    /// <summary>Field number for the "endDate" field.</summary>
    public const int EndDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp endDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EndDate {
      get { return endDate_; }
      set {
        endDate_ = value;
      }
    }

    /// <summary>Field number for the "section" field.</summary>
    public const int SectionFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_section_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string section_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Section {
      get { return section_; }
      set {
        section_ = value;
      }
    }


    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.ContractProtos.GrpcDecimal Amount {
      get { return oneofAmountCase_ == OneofAmountOneofCase.Amount ? (global::HaccpManager.ContractProtos.GrpcDecimal) oneofAmount_ : null; }
      set {
        oneofAmount_ = value;
        oneofAmountCase_ = value == null ? OneofAmountOneofCase.None : OneofAmountOneofCase.Amount;
      }
    }

    /// <summary>Field number for the "vAT" field.</summary>
    public const int VATFieldNumber = 7;
    private global::HaccpManager.ContractProtos.GrpcDecimal vAT_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.ContractProtos.GrpcDecimal VAT {
      get { return vAT_; }
      set {
        vAT_ = value;
      }
    }

    /// <summary>Field number for the "contractDate" field.</summary>
    public const int ContractDateFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp contractDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ContractDate {
      get { return contractDate_; }
      set {
        contractDate_ = value;
      }
    }

    /// <summary>Field number for the "remark" field.</summary>
    public const int RemarkFieldNumber = 9;
    private string remark_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remark {
      get { return remark_; }
      set {
        remark_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deptCode" field.</summary>
    public const int DeptCodeFieldNumber = 10;
    private static readonly pb::FieldCodec<int?> _single_deptCode_codec = pb::FieldCodec.ForStructWrapper<int>(82);
    private int? deptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? DeptCode {
      get { return deptCode_; }
      set {
        deptCode_ = value;
      }
    }


    /// <summary>Field number for the "employeeCode" field.</summary>
    public const int EmployeeCodeFieldNumber = 11;
    private string employeeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EmployeeCode {
      get { return employeeCode_; }
      set {
        employeeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "saleToAmt" field.</summary>
    public const int SaleToAmtFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.ContractProtos.GrpcDecimal SaleToAmt {
      get { return oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt ? (global::HaccpManager.ContractProtos.GrpcDecimal) oneofSaleToAmt_ : null; }
      set {
        oneofSaleToAmt_ = value;
        oneofSaleToAmtCase_ = value == null ? OneofSaleToAmtOneofCase.None : OneofSaleToAmtOneofCase.SaleToAmt;
      }
    }

    /// <summary>Field number for the "saleIssueMethod" field.</summary>
    public const int SaleIssueMethodFieldNumber = 13;
    private static readonly pb::FieldCodec<int?> _single_saleIssueMethod_codec = pb::FieldCodec.ForStructWrapper<int>(106);
    private int? saleIssueMethod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? SaleIssueMethod {
      get { return saleIssueMethod_; }
      set {
        saleIssueMethod_ = value;
      }
    }


    /// <summary>Field number for the "moneyConditionCode" field.</summary>
    public const int MoneyConditionCodeFieldNumber = 14;
    private int moneyConditionCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MoneyConditionCode {
      get { return moneyConditionCode_; }
      set {
        moneyConditionCode_ = value;
      }
    }

    /// <summary>Field number for the "progressFlag" field.</summary>
    public const int ProgressFlagFieldNumber = 15;
    private double progressFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ProgressFlag {
      get { return progressFlag_; }
      set {
        progressFlag_ = value;
      }
    }

    /// <summary>Field number for the "entryDate" field.</summary>
    public const int EntryDateFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp EntryDate {
      get { return oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofEntryDate_ : null; }
      set {
        oneofEntryDate_ = value;
        oneofEntryDateCase_ = value == null ? OneofEntryDateOneofCase.None : OneofEntryDateOneofCase.EntryDate;
      }
    }

    /// <summary>Field number for the "userCode" field.</summary>
    public const int UserCodeFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_userCode_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string userCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserCode {
      get { return userCode_; }
      set {
        userCode_ = value;
      }
    }


    private object oneofAmount_;
    /// <summary>Enum of possible cases for the "oneofAmount" oneof.</summary>
    public enum OneofAmountOneofCase {
      None = 0,
      Amount = 6,
    }
    private OneofAmountOneofCase oneofAmountCase_ = OneofAmountOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofAmountOneofCase OneofAmountCase {
      get { return oneofAmountCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofAmount() {
      oneofAmountCase_ = OneofAmountOneofCase.None;
      oneofAmount_ = null;
    }

    private object oneofSaleToAmt_;
    /// <summary>Enum of possible cases for the "oneofSaleToAmt" oneof.</summary>
    public enum OneofSaleToAmtOneofCase {
      None = 0,
      SaleToAmt = 12,
    }
    private OneofSaleToAmtOneofCase oneofSaleToAmtCase_ = OneofSaleToAmtOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofSaleToAmtOneofCase OneofSaleToAmtCase {
      get { return oneofSaleToAmtCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofSaleToAmt() {
      oneofSaleToAmtCase_ = OneofSaleToAmtOneofCase.None;
      oneofSaleToAmt_ = null;
    }

    private object oneofEntryDate_;
    /// <summary>Enum of possible cases for the "oneofEntryDate" oneof.</summary>
    public enum OneofEntryDateOneofCase {
      None = 0,
      EntryDate = 16,
    }
    private OneofEntryDateOneofCase oneofEntryDateCase_ = OneofEntryDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofEntryDateOneofCase OneofEntryDateCase {
      get { return oneofEntryDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofEntryDate() {
      oneofEntryDateCase_ = OneofEntryDateOneofCase.None;
      oneofEntryDate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNo != other.ContractNo) return false;
      if (ContractFlag != other.ContractFlag) return false;
      if (!object.Equals(StartDate, other.StartDate)) return false;
      if (!object.Equals(EndDate, other.EndDate)) return false;
      if (Section != other.Section) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(VAT, other.VAT)) return false;
      if (!object.Equals(ContractDate, other.ContractDate)) return false;
      if (Remark != other.Remark) return false;
      if (DeptCode != other.DeptCode) return false;
      if (EmployeeCode != other.EmployeeCode) return false;
      if (!object.Equals(SaleToAmt, other.SaleToAmt)) return false;
      if (SaleIssueMethod != other.SaleIssueMethod) return false;
      if (MoneyConditionCode != other.MoneyConditionCode) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ProgressFlag, other.ProgressFlag)) return false;
      if (!object.Equals(EntryDate, other.EntryDate)) return false;
      if (UserCode != other.UserCode) return false;
      if (OneofAmountCase != other.OneofAmountCase) return false;
      if (OneofSaleToAmtCase != other.OneofSaleToAmtCase) return false;
      if (OneofEntryDateCase != other.OneofEntryDateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNo.Length != 0) hash ^= ContractNo.GetHashCode();
      if (ContractFlag != 0) hash ^= ContractFlag.GetHashCode();
      if (startDate_ != null) hash ^= StartDate.GetHashCode();
      if (endDate_ != null) hash ^= EndDate.GetHashCode();
      if (section_ != null) hash ^= Section.GetHashCode();
      if (oneofAmountCase_ == OneofAmountOneofCase.Amount) hash ^= Amount.GetHashCode();
      if (vAT_ != null) hash ^= VAT.GetHashCode();
      if (contractDate_ != null) hash ^= ContractDate.GetHashCode();
      if (Remark.Length != 0) hash ^= Remark.GetHashCode();
      if (deptCode_ != null) hash ^= DeptCode.GetHashCode();
      if (EmployeeCode.Length != 0) hash ^= EmployeeCode.GetHashCode();
      if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) hash ^= SaleToAmt.GetHashCode();
      if (saleIssueMethod_ != null) hash ^= SaleIssueMethod.GetHashCode();
      if (MoneyConditionCode != 0) hash ^= MoneyConditionCode.GetHashCode();
      if (ProgressFlag != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ProgressFlag);
      if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) hash ^= EntryDate.GetHashCode();
      if (userCode_ != null) hash ^= UserCode.GetHashCode();
      hash ^= (int) oneofAmountCase_;
      hash ^= (int) oneofSaleToAmtCase_;
      hash ^= (int) oneofEntryDateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNo);
      }
      if (ContractFlag != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(ContractFlag);
      }
      if (startDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(StartDate);
      }
      if (endDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(EndDate);
      }
      if (section_ != null) {
        _single_section_codec.WriteTagAndValue(output, Section);
      }
      if (oneofAmountCase_ == OneofAmountOneofCase.Amount) {
        output.WriteRawTag(50);
        output.WriteMessage(Amount);
      }
      if (vAT_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(VAT);
      }
      if (contractDate_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ContractDate);
      }
      if (Remark.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Remark);
      }
      if (deptCode_ != null) {
        _single_deptCode_codec.WriteTagAndValue(output, DeptCode);
      }
      if (EmployeeCode.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(EmployeeCode);
      }
      if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) {
        output.WriteRawTag(98);
        output.WriteMessage(SaleToAmt);
      }
      if (saleIssueMethod_ != null) {
        _single_saleIssueMethod_codec.WriteTagAndValue(output, SaleIssueMethod);
      }
      if (MoneyConditionCode != 0) {
        output.WriteRawTag(112);
        output.WriteSInt32(MoneyConditionCode);
      }
      if (ProgressFlag != 0D) {
        output.WriteRawTag(121);
        output.WriteDouble(ProgressFlag);
      }
      if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(EntryDate);
      }
      if (userCode_ != null) {
        _single_userCode_codec.WriteTagAndValue(output, UserCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNo);
      }
      if (ContractFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ContractFlag);
      }
      if (startDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartDate);
      }
      if (endDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndDate);
      }
      if (section_ != null) {
        size += _single_section_codec.CalculateSizeWithTag(Section);
      }
      if (oneofAmountCase_ == OneofAmountOneofCase.Amount) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (vAT_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VAT);
      }
      if (contractDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ContractDate);
      }
      if (Remark.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remark);
      }
      if (deptCode_ != null) {
        size += _single_deptCode_codec.CalculateSizeWithTag(DeptCode);
      }
      if (EmployeeCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EmployeeCode);
      }
      if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SaleToAmt);
      }
      if (saleIssueMethod_ != null) {
        size += _single_saleIssueMethod_codec.CalculateSizeWithTag(SaleIssueMethod);
      }
      if (MoneyConditionCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(MoneyConditionCode);
      }
      if (ProgressFlag != 0D) {
        size += 1 + 8;
      }
      if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EntryDate);
      }
      if (userCode_ != null) {
        size += _single_userCode_codec.CalculateSizeWithTag(UserCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContractNo.Length != 0) {
        ContractNo = other.ContractNo;
      }
      if (other.ContractFlag != 0) {
        ContractFlag = other.ContractFlag;
      }
      if (other.startDate_ != null) {
        if (startDate_ == null) {
          StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartDate.MergeFrom(other.StartDate);
      }
      if (other.endDate_ != null) {
        if (endDate_ == null) {
          EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        EndDate.MergeFrom(other.EndDate);
      }
      if (other.section_ != null) {
        if (section_ == null || other.Section != "") {
          Section = other.Section;
        }
      }
      if (other.vAT_ != null) {
        if (vAT_ == null) {
          VAT = new global::HaccpManager.ContractProtos.GrpcDecimal();
        }
        VAT.MergeFrom(other.VAT);
      }
      if (other.contractDate_ != null) {
        if (contractDate_ == null) {
          ContractDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ContractDate.MergeFrom(other.ContractDate);
      }
      if (other.Remark.Length != 0) {
        Remark = other.Remark;
      }
      if (other.deptCode_ != null) {
        if (deptCode_ == null || other.DeptCode != 0) {
          DeptCode = other.DeptCode;
        }
      }
      if (other.EmployeeCode.Length != 0) {
        EmployeeCode = other.EmployeeCode;
      }
      if (other.saleIssueMethod_ != null) {
        if (saleIssueMethod_ == null || other.SaleIssueMethod != 0) {
          SaleIssueMethod = other.SaleIssueMethod;
        }
      }
      if (other.MoneyConditionCode != 0) {
        MoneyConditionCode = other.MoneyConditionCode;
      }
      if (other.ProgressFlag != 0D) {
        ProgressFlag = other.ProgressFlag;
      }
      if (other.userCode_ != null) {
        if (userCode_ == null || other.UserCode != "") {
          UserCode = other.UserCode;
        }
      }
      switch (other.OneofAmountCase) {
        case OneofAmountOneofCase.Amount:
          if (Amount == null) {
            Amount = new global::HaccpManager.ContractProtos.GrpcDecimal();
          }
          Amount.MergeFrom(other.Amount);
          break;
      }

      switch (other.OneofSaleToAmtCase) {
        case OneofSaleToAmtOneofCase.SaleToAmt:
          if (SaleToAmt == null) {
            SaleToAmt = new global::HaccpManager.ContractProtos.GrpcDecimal();
          }
          SaleToAmt.MergeFrom(other.SaleToAmt);
          break;
      }

      switch (other.OneofEntryDateCase) {
        case OneofEntryDateOneofCase.EntryDate:
          if (EntryDate == null) {
            EntryDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          EntryDate.MergeFrom(other.EntryDate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNo = input.ReadString();
            break;
          }
          case 16: {
            ContractFlag = input.ReadSInt32();
            break;
          }
          case 26: {
            if (startDate_ == null) {
              StartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartDate);
            break;
          }
          case 34: {
            if (endDate_ == null) {
              EndDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(EndDate);
            break;
          }
          case 42: {
            string value = _single_section_codec.Read(input);
            if (section_ == null || value != "") {
              Section = value;
            }
            break;
          }
          case 50: {
            global::HaccpManager.ContractProtos.GrpcDecimal subBuilder = new global::HaccpManager.ContractProtos.GrpcDecimal();
            if (oneofAmountCase_ == OneofAmountOneofCase.Amount) {
              subBuilder.MergeFrom(Amount);
            }
            input.ReadMessage(subBuilder);
            Amount = subBuilder;
            break;
          }
          case 58: {
            if (vAT_ == null) {
              VAT = new global::HaccpManager.ContractProtos.GrpcDecimal();
            }
            input.ReadMessage(VAT);
            break;
          }
          case 66: {
            if (contractDate_ == null) {
              ContractDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ContractDate);
            break;
          }
          case 74: {
            Remark = input.ReadString();
            break;
          }
          case 82: {
            int? value = _single_deptCode_codec.Read(input);
            if (deptCode_ == null || value != 0) {
              DeptCode = value;
            }
            break;
          }
          case 90: {
            EmployeeCode = input.ReadString();
            break;
          }
          case 98: {
            global::HaccpManager.ContractProtos.GrpcDecimal subBuilder = new global::HaccpManager.ContractProtos.GrpcDecimal();
            if (oneofSaleToAmtCase_ == OneofSaleToAmtOneofCase.SaleToAmt) {
              subBuilder.MergeFrom(SaleToAmt);
            }
            input.ReadMessage(subBuilder);
            SaleToAmt = subBuilder;
            break;
          }
          case 106: {
            int? value = _single_saleIssueMethod_codec.Read(input);
            if (saleIssueMethod_ == null || value != 0) {
              SaleIssueMethod = value;
            }
            break;
          }
          case 112: {
            MoneyConditionCode = input.ReadSInt32();
            break;
          }
          case 121: {
            ProgressFlag = input.ReadDouble();
            break;
          }
          case 130: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofEntryDateCase_ == OneofEntryDateOneofCase.EntryDate) {
              subBuilder.MergeFrom(EntryDate);
            }
            input.ReadMessage(subBuilder);
            EntryDate = subBuilder;
            break;
          }
          case 138: {
            string value = _single_userCode_codec.Read(input);
            if (userCode_ == null || value != "") {
              UserCode = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResponse : pb::IMessage<UpdateResponse> {
    private static readonly pb::MessageParser<UpdateResponse> _parser = new pb::MessageParser<UpdateResponse>(() => new UpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse(UpdateResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse Clone() {
      return new UpdateResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      contractNo_ = other.contractNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "contractNo" field.</summary>
    public const int ContractNoFieldNumber = 1;
    private string contractNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContractNo {
      get { return contractNo_; }
      set {
        contractNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractNo != other.ContractNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractNo.Length != 0) hash ^= ContractNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ContractNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContractNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.ContractNo.Length != 0) {
        ContractNo = other.ContractNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.ContractProtos.ContractReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
