// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mes/Calendars.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HaccpManager.CalendarsProtos {

  /// <summary>Holder for reflection information generated from mes/Calendars.proto</summary>
  public static partial class CalendarsReflection {

    #region Descriptor
    /// <summary>File descriptor for mes/Calendars.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CalendarsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNtZXMvQ2FsZW5kYXJzLnByb3RvEgxDYWxlbmRhcnNTdmMaH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJh",
            "dGlvbi5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhtn",
            "b29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8iKwoLR3JwY0RlY2ltYWwSDQoF",
            "dW5pdHMYASABKAMSDQoFbmFub3MYAiABKA8iOgoRQ2FsZW5kYXJzUmVzcG9u",
            "c2USEQoJY2FsZW5kYXJzGAEgASgMEhIKCmpzb25TdHJpbmcYAiABKAkiQAoU",
            "Q2FsZW5kYXJzU2V0UmVzcG9uc2USFAoMY2FsZW5kYXJzU2V0GAEgASgMEhIK",
            "Cmpzb25TdHJpbmcYAiABKAkiNgoPRGF0YVNldFJlc3BvbnNlEg8KB2RhdGFT",
            "ZXQYASABKAwSEgoKanNvblN0cmluZxgCIAEoCSIxChlHZXRGb3JDYWxlbmRh",
            "clR5cGVSZXF1ZXN0EhQKDGNhbGVuZGFyVHlwZRgBIAEoESJZCg9HZXRCeUtl",
            "eVJlcXVlc3QSFAoMY2FsZW5kYXJUeXBlGAEgASgREjAKDGNhbGVuZGFyRGF0",
            "ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiqgEKDUluc2Vy",
            "dFJlcXVlc3QSFAoMY2FsZW5kYXJUeXBlGAEgASgREjAKDGNhbGVuZGFyRGF0",
            "ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoId29ya1Rp",
            "bWUYAyABKBESEAoId29ya1R5cGUYBCABKAkSLQoHcmVtYXJrcxgFIAEoCzIc",
            "Lmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZSKqAQoNVXBkYXRlUmVxdWVz",
            "dBIUCgxjYWxlbmRhclR5cGUYASABKBESMAoMY2FsZW5kYXJEYXRlGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIQCgh3b3JrVGltZRgDIAEo",
            "ERIQCgh3b3JrVHlwZRgEIAEoCRItCgdyZW1hcmtzGAUgASgLMhwuZ29vZ2xl",
            "LnByb3RvYnVmLlN0cmluZ1ZhbHVlIh8KDlVwZGF0ZVJlc3BvbnNlEg0KBWNv",
            "dW50GAEgASgFIlcKDURlbGV0ZVJlcXVlc3QSFAoMY2FsZW5kYXJUeXBlGAEg",
            "ASgREjAKDGNhbGVuZGFyRGF0ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5U",
            "aW1lc3RhbXAiHwoORGVsZXRlUmVzcG9uc2USDQoFY291bnQYASABKAUynwYK",
            "CUNhbGVuZGFycxJhChJHZXRGb3JDYWxlbmRhclR5cGUSJy5DYWxlbmRhcnNT",
            "dmMuR2V0Rm9yQ2FsZW5kYXJUeXBlUmVxdWVzdBoiLkNhbGVuZGFyc1N2Yy5D",
            "YWxlbmRhcnNTZXRSZXNwb25zZRJlChZHZXRGb3JDYWxlbmRhclR5cGVKc29u",
            "EicuQ2FsZW5kYXJzU3ZjLkdldEZvckNhbGVuZGFyVHlwZVJlcXVlc3QaIi5D",
            "YWxlbmRhcnNTdmMuQ2FsZW5kYXJzU2V0UmVzcG9uc2USSgoIR2V0QnlLZXkS",
            "HS5DYWxlbmRhcnNTdmMuR2V0QnlLZXlSZXF1ZXN0Gh8uQ2FsZW5kYXJzU3Zj",
            "LkNhbGVuZGFyc1Jlc3BvbnNlEk4KDEdldEJ5S2V5SnNvbhIdLkNhbGVuZGFy",
            "c1N2Yy5HZXRCeUtleVJlcXVlc3QaHy5DYWxlbmRhcnNTdmMuQ2FsZW5kYXJz",
            "UmVzcG9uc2USRAoGR2V0QWxsEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5GiIu",
            "Q2FsZW5kYXJzU3ZjLkNhbGVuZGFyc1NldFJlc3BvbnNlEkgKCkdldEFsbEpz",
            "b24SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaIi5DYWxlbmRhcnNTdmMuQ2Fs",
            "ZW5kYXJzU2V0UmVzcG9uc2USRgoGSW5zZXJ0EhsuQ2FsZW5kYXJzU3ZjLklu",
            "c2VydFJlcXVlc3QaHy5DYWxlbmRhcnNTdmMuQ2FsZW5kYXJzUmVzcG9uc2US",
            "SgoKSW5zZXJ0SnNvbhIbLkNhbGVuZGFyc1N2Yy5JbnNlcnRSZXF1ZXN0Gh8u",
            "Q2FsZW5kYXJzU3ZjLkNhbGVuZGFyc1Jlc3BvbnNlEkMKBlVwZGF0ZRIbLkNh",
            "bGVuZGFyc1N2Yy5VcGRhdGVSZXF1ZXN0GhwuQ2FsZW5kYXJzU3ZjLlVwZGF0",
            "ZVJlc3BvbnNlEkMKBkRlbGV0ZRIbLkNhbGVuZGFyc1N2Yy5EZWxldGVSZXF1",
            "ZXN0GhwuQ2FsZW5kYXJzU3ZjLkRlbGV0ZVJlc3BvbnNlQh+qAhxIYWNjcE1h",
            "bmFnZXIuQ2FsZW5kYXJzUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.GrpcDecimal), global::HaccpManager.CalendarsProtos.GrpcDecimal.Parser, new[]{ "Units", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.CalendarsResponse), global::HaccpManager.CalendarsProtos.CalendarsResponse.Parser, new[]{ "Calendars", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.CalendarsSetResponse), global::HaccpManager.CalendarsProtos.CalendarsSetResponse.Parser, new[]{ "CalendarsSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.DataSetResponse), global::HaccpManager.CalendarsProtos.DataSetResponse.Parser, new[]{ "DataSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.GetForCalendarTypeRequest), global::HaccpManager.CalendarsProtos.GetForCalendarTypeRequest.Parser, new[]{ "CalendarType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.GetByKeyRequest), global::HaccpManager.CalendarsProtos.GetByKeyRequest.Parser, new[]{ "CalendarType", "CalendarDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.InsertRequest), global::HaccpManager.CalendarsProtos.InsertRequest.Parser, new[]{ "CalendarType", "CalendarDate", "WorkTime", "WorkType", "Remarks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.UpdateRequest), global::HaccpManager.CalendarsProtos.UpdateRequest.Parser, new[]{ "CalendarType", "CalendarDate", "WorkTime", "WorkType", "Remarks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.UpdateResponse), global::HaccpManager.CalendarsProtos.UpdateResponse.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.DeleteRequest), global::HaccpManager.CalendarsProtos.DeleteRequest.Parser, new[]{ "CalendarType", "CalendarDate" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CalendarsProtos.DeleteResponse), global::HaccpManager.CalendarsProtos.DeleteResponse.Parser, new[]{ "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcDecimal : pb::IMessage<GrpcDecimal> {
    private static readonly pb::MessageParser<GrpcDecimal> _parser = new pb::MessageParser<GrpcDecimal>(() => new GrpcDecimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDecimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal(GrpcDecimal other) : this() {
      units_ = other.units_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal Clone() {
      return new GrpcDecimal(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private long units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDecimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDecimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0L) hash ^= Units.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Units);
      }
      if (Nanos != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Units);
      }
      if (Nanos != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDecimal other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0L) {
        Units = other.Units;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Units = input.ReadInt64();
            break;
          }
          case 21: {
            Nanos = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CalendarsResponse : pb::IMessage<CalendarsResponse> {
    private static readonly pb::MessageParser<CalendarsResponse> _parser = new pb::MessageParser<CalendarsResponse>(() => new CalendarsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalendarsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalendarsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalendarsResponse(CalendarsResponse other) : this() {
      calendars_ = other.calendars_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalendarsResponse Clone() {
      return new CalendarsResponse(this);
    }

    /// <summary>Field number for the "calendars" field.</summary>
    public const int CalendarsFieldNumber = 1;
    private pb::ByteString calendars_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Calendars {
      get { return calendars_; }
      set {
        calendars_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalendarsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalendarsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Calendars != other.Calendars) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Calendars.Length != 0) hash ^= Calendars.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Calendars.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Calendars);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Calendars.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Calendars);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalendarsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Calendars.Length != 0) {
        Calendars = other.Calendars;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Calendars = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CalendarsSetResponse : pb::IMessage<CalendarsSetResponse> {
    private static readonly pb::MessageParser<CalendarsSetResponse> _parser = new pb::MessageParser<CalendarsSetResponse>(() => new CalendarsSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CalendarsSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalendarsSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalendarsSetResponse(CalendarsSetResponse other) : this() {
      calendarsSet_ = other.calendarsSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CalendarsSetResponse Clone() {
      return new CalendarsSetResponse(this);
    }

    /// <summary>Field number for the "calendarsSet" field.</summary>
    public const int CalendarsSetFieldNumber = 1;
    private pb::ByteString calendarsSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CalendarsSet {
      get { return calendarsSet_; }
      set {
        calendarsSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CalendarsSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CalendarsSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CalendarsSet != other.CalendarsSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CalendarsSet.Length != 0) hash ^= CalendarsSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CalendarsSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(CalendarsSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CalendarsSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CalendarsSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CalendarsSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.CalendarsSet.Length != 0) {
        CalendarsSet = other.CalendarsSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CalendarsSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSetResponse : pb::IMessage<DataSetResponse> {
    private static readonly pb::MessageParser<DataSetResponse> _parser = new pb::MessageParser<DataSetResponse>(() => new DataSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse(DataSetResponse other) : this() {
      dataSet_ = other.dataSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse Clone() {
      return new DataSetResponse(this);
    }

    /// <summary>Field number for the "dataSet" field.</summary>
    public const int DataSetFieldNumber = 1;
    private pb::ByteString dataSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataSet {
      get { return dataSet_; }
      set {
        dataSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSet != other.DataSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSet.Length != 0) hash ^= DataSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DataSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DataSet.Length != 0) {
        DataSet = other.DataSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForCalendarTypeRequest : pb::IMessage<GetForCalendarTypeRequest> {
    private static readonly pb::MessageParser<GetForCalendarTypeRequest> _parser = new pb::MessageParser<GetForCalendarTypeRequest>(() => new GetForCalendarTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForCalendarTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCalendarTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCalendarTypeRequest(GetForCalendarTypeRequest other) : this() {
      calendarType_ = other.calendarType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCalendarTypeRequest Clone() {
      return new GetForCalendarTypeRequest(this);
    }

    /// <summary>Field number for the "calendarType" field.</summary>
    public const int CalendarTypeFieldNumber = 1;
    private int calendarType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalendarType {
      get { return calendarType_; }
      set {
        calendarType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForCalendarTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForCalendarTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CalendarType != other.CalendarType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CalendarType != 0) hash ^= CalendarType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CalendarType != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CalendarType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CalendarType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CalendarType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForCalendarTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.CalendarType != 0) {
        CalendarType = other.CalendarType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CalendarType = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByKeyRequest : pb::IMessage<GetByKeyRequest> {
    private static readonly pb::MessageParser<GetByKeyRequest> _parser = new pb::MessageParser<GetByKeyRequest>(() => new GetByKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest(GetByKeyRequest other) : this() {
      calendarType_ = other.calendarType_;
      calendarDate_ = other.calendarDate_ != null ? other.calendarDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest Clone() {
      return new GetByKeyRequest(this);
    }

    /// <summary>Field number for the "calendarType" field.</summary>
    public const int CalendarTypeFieldNumber = 1;
    private int calendarType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalendarType {
      get { return calendarType_; }
      set {
        calendarType_ = value;
      }
    }

    /// <summary>Field number for the "calendarDate" field.</summary>
    public const int CalendarDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp calendarDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CalendarDate {
      get { return calendarDate_; }
      set {
        calendarDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CalendarType != other.CalendarType) return false;
      if (!object.Equals(CalendarDate, other.CalendarDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CalendarType != 0) hash ^= CalendarType.GetHashCode();
      if (calendarDate_ != null) hash ^= CalendarDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CalendarType != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CalendarType);
      }
      if (calendarDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CalendarDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CalendarType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CalendarType);
      }
      if (calendarDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalendarDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.CalendarType != 0) {
        CalendarType = other.CalendarType;
      }
      if (other.calendarDate_ != null) {
        if (calendarDate_ == null) {
          CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CalendarDate.MergeFrom(other.CalendarDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CalendarType = input.ReadSInt32();
            break;
          }
          case 18: {
            if (calendarDate_ == null) {
              CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CalendarDate);
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertRequest : pb::IMessage<InsertRequest> {
    private static readonly pb::MessageParser<InsertRequest> _parser = new pb::MessageParser<InsertRequest>(() => new InsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest(InsertRequest other) : this() {
      calendarType_ = other.calendarType_;
      calendarDate_ = other.calendarDate_ != null ? other.calendarDate_.Clone() : null;
      workTime_ = other.workTime_;
      workType_ = other.workType_;
      Remarks = other.Remarks;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest Clone() {
      return new InsertRequest(this);
    }

    /// <summary>Field number for the "calendarType" field.</summary>
    public const int CalendarTypeFieldNumber = 1;
    private int calendarType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalendarType {
      get { return calendarType_; }
      set {
        calendarType_ = value;
      }
    }

    /// <summary>Field number for the "calendarDate" field.</summary>
    public const int CalendarDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp calendarDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CalendarDate {
      get { return calendarDate_; }
      set {
        calendarDate_ = value;
      }
    }

    /// <summary>Field number for the "workTime" field.</summary>
    public const int WorkTimeFieldNumber = 3;
    private int workTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorkTime {
      get { return workTime_; }
      set {
        workTime_ = value;
      }
    }

    /// <summary>Field number for the "workType" field.</summary>
    public const int WorkTypeFieldNumber = 4;
    private string workType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkType {
      get { return workType_; }
      set {
        workType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remarks" field.</summary>
    public const int RemarksFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_remarks_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string remarks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remarks {
      get { return remarks_; }
      set {
        remarks_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CalendarType != other.CalendarType) return false;
      if (!object.Equals(CalendarDate, other.CalendarDate)) return false;
      if (WorkTime != other.WorkTime) return false;
      if (WorkType != other.WorkType) return false;
      if (Remarks != other.Remarks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CalendarType != 0) hash ^= CalendarType.GetHashCode();
      if (calendarDate_ != null) hash ^= CalendarDate.GetHashCode();
      if (WorkTime != 0) hash ^= WorkTime.GetHashCode();
      if (WorkType.Length != 0) hash ^= WorkType.GetHashCode();
      if (remarks_ != null) hash ^= Remarks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CalendarType != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CalendarType);
      }
      if (calendarDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CalendarDate);
      }
      if (WorkTime != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(WorkTime);
      }
      if (WorkType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WorkType);
      }
      if (remarks_ != null) {
        _single_remarks_codec.WriteTagAndValue(output, Remarks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CalendarType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CalendarType);
      }
      if (calendarDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalendarDate);
      }
      if (WorkTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(WorkTime);
      }
      if (WorkType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkType);
      }
      if (remarks_ != null) {
        size += _single_remarks_codec.CalculateSizeWithTag(Remarks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.CalendarType != 0) {
        CalendarType = other.CalendarType;
      }
      if (other.calendarDate_ != null) {
        if (calendarDate_ == null) {
          CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CalendarDate.MergeFrom(other.CalendarDate);
      }
      if (other.WorkTime != 0) {
        WorkTime = other.WorkTime;
      }
      if (other.WorkType.Length != 0) {
        WorkType = other.WorkType;
      }
      if (other.remarks_ != null) {
        if (remarks_ == null || other.Remarks != "") {
          Remarks = other.Remarks;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CalendarType = input.ReadSInt32();
            break;
          }
          case 18: {
            if (calendarDate_ == null) {
              CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CalendarDate);
            break;
          }
          case 24: {
            WorkTime = input.ReadSInt32();
            break;
          }
          case 34: {
            WorkType = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_remarks_codec.Read(input);
            if (remarks_ == null || value != "") {
              Remarks = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      calendarType_ = other.calendarType_;
      calendarDate_ = other.calendarDate_ != null ? other.calendarDate_.Clone() : null;
      workTime_ = other.workTime_;
      workType_ = other.workType_;
      Remarks = other.Remarks;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "calendarType" field.</summary>
    public const int CalendarTypeFieldNumber = 1;
    private int calendarType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalendarType {
      get { return calendarType_; }
      set {
        calendarType_ = value;
      }
    }

    /// <summary>Field number for the "calendarDate" field.</summary>
    public const int CalendarDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp calendarDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CalendarDate {
      get { return calendarDate_; }
      set {
        calendarDate_ = value;
      }
    }

    /// <summary>Field number for the "workTime" field.</summary>
    public const int WorkTimeFieldNumber = 3;
    private int workTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WorkTime {
      get { return workTime_; }
      set {
        workTime_ = value;
      }
    }

    /// <summary>Field number for the "workType" field.</summary>
    public const int WorkTypeFieldNumber = 4;
    private string workType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkType {
      get { return workType_; }
      set {
        workType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remarks" field.</summary>
    public const int RemarksFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _single_remarks_codec = pb::FieldCodec.ForClassWrapper<string>(42);
    private string remarks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remarks {
      get { return remarks_; }
      set {
        remarks_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CalendarType != other.CalendarType) return false;
      if (!object.Equals(CalendarDate, other.CalendarDate)) return false;
      if (WorkTime != other.WorkTime) return false;
      if (WorkType != other.WorkType) return false;
      if (Remarks != other.Remarks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CalendarType != 0) hash ^= CalendarType.GetHashCode();
      if (calendarDate_ != null) hash ^= CalendarDate.GetHashCode();
      if (WorkTime != 0) hash ^= WorkTime.GetHashCode();
      if (WorkType.Length != 0) hash ^= WorkType.GetHashCode();
      if (remarks_ != null) hash ^= Remarks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CalendarType != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CalendarType);
      }
      if (calendarDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CalendarDate);
      }
      if (WorkTime != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(WorkTime);
      }
      if (WorkType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WorkType);
      }
      if (remarks_ != null) {
        _single_remarks_codec.WriteTagAndValue(output, Remarks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CalendarType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CalendarType);
      }
      if (calendarDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalendarDate);
      }
      if (WorkTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(WorkTime);
      }
      if (WorkType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkType);
      }
      if (remarks_ != null) {
        size += _single_remarks_codec.CalculateSizeWithTag(Remarks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.CalendarType != 0) {
        CalendarType = other.CalendarType;
      }
      if (other.calendarDate_ != null) {
        if (calendarDate_ == null) {
          CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CalendarDate.MergeFrom(other.CalendarDate);
      }
      if (other.WorkTime != 0) {
        WorkTime = other.WorkTime;
      }
      if (other.WorkType.Length != 0) {
        WorkType = other.WorkType;
      }
      if (other.remarks_ != null) {
        if (remarks_ == null || other.Remarks != "") {
          Remarks = other.Remarks;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CalendarType = input.ReadSInt32();
            break;
          }
          case 18: {
            if (calendarDate_ == null) {
              CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CalendarDate);
            break;
          }
          case 24: {
            WorkTime = input.ReadSInt32();
            break;
          }
          case 34: {
            WorkType = input.ReadString();
            break;
          }
          case 42: {
            string value = _single_remarks_codec.Read(input);
            if (remarks_ == null || value != "") {
              Remarks = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResponse : pb::IMessage<UpdateResponse> {
    private static readonly pb::MessageParser<UpdateResponse> _parser = new pb::MessageParser<UpdateResponse>(() => new UpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse(UpdateResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse Clone() {
      return new UpdateResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      calendarType_ = other.calendarType_;
      calendarDate_ = other.calendarDate_ != null ? other.calendarDate_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "calendarType" field.</summary>
    public const int CalendarTypeFieldNumber = 1;
    private int calendarType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalendarType {
      get { return calendarType_; }
      set {
        calendarType_ = value;
      }
    }

    /// <summary>Field number for the "calendarDate" field.</summary>
    public const int CalendarDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp calendarDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CalendarDate {
      get { return calendarDate_; }
      set {
        calendarDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CalendarType != other.CalendarType) return false;
      if (!object.Equals(CalendarDate, other.CalendarDate)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CalendarType != 0) hash ^= CalendarType.GetHashCode();
      if (calendarDate_ != null) hash ^= CalendarDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CalendarType != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(CalendarType);
      }
      if (calendarDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CalendarDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CalendarType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CalendarType);
      }
      if (calendarDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CalendarDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.CalendarType != 0) {
        CalendarType = other.CalendarType;
      }
      if (other.calendarDate_ != null) {
        if (calendarDate_ == null) {
          CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CalendarDate.MergeFrom(other.CalendarDate);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CalendarType = input.ReadSInt32();
            break;
          }
          case 18: {
            if (calendarDate_ == null) {
              CalendarDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CalendarDate);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CalendarsProtos.CalendarsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
