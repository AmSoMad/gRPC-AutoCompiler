// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mes/BusinessClass.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HaccpManager.BusinessClassProtos {

  /// <summary>Holder for reflection information generated from mes/BusinessClass.proto</summary>
  public static partial class BusinessClassReflection {

    #region Descriptor
    /// <summary>File descriptor for mes/BusinessClass.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BusinessClassReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChdtZXMvQnVzaW5lc3NDbGFzcy5wcm90bxIQQnVzaW5lc3NDbGFzc1N2Yxof",
            "Z29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoeZ29vZ2xlL3Byb3Rv",
            "YnVmL2R1cmF0aW9uLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMu",
            "cHJvdG8aG2dvb2dsZS9wcm90b2J1Zi9lbXB0eS5wcm90byIrCgtHcnBjRGVj",
            "aW1hbBINCgV1bml0cxgBIAEoAxINCgVuYW5vcxgCIAEoDyJCChVCdXNpbmVz",
            "c0NsYXNzUmVzcG9uc2USFQoNYnVzaW5lc3NDbGFzcxgBIAEoDBISCgpqc29u",
            "U3RyaW5nGAIgASgJIkgKGEJ1c2luZXNzQ2xhc3NTZXRSZXNwb25zZRIYChBi",
            "dXNpbmVzc0NsYXNzU2V0GAEgASgMEhIKCmpzb25TdHJpbmcYAiABKAkiNgoP",
            "RGF0YVNldFJlc3BvbnNlEg8KB2RhdGFTZXQYASABKAwSEgoKanNvblN0cmlu",
            "ZxgCIAEoCSIyCh9HZXRGb3JDb21wYW55SW5mb3JtYXRpb25SZXF1ZXN0Eg8K",
            "B2xDTlNfTk8YASABKAkiLAoPR2V0QnlLZXlSZXF1ZXN0EhkKEWJ1c2luZXNz",
            "Q2xhc3NDb2RlGAEgASgRItkFCg1JbnNlcnRSZXF1ZXN0EhkKEWJ1c2luZXNz",
            "Q2xhc3NDb2RlGAEgASgREi0KB3ppcENvZGUYAiABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSEwoLYWNjb3VudFVuaXQYAyABKBESDwoHYWRk",
            "cmVzcxgEIAEoCRIVCg1maW5hbmNlUGVyaW9kGAUgASgREhMKC2NvbXBhbnlO",
            "YW1lGAYgASgJEjMKDWNvcnBvcmF0aW9uTm8YByABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSFAoMYnVzaW5lc3NDb2RlGAggASgJEi8KCXBy",
            "ZXNpZGVudBgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIU",
            "CgxidXNpbmVzc0l0ZW0YCiABKAkSFAoMYnVzaW5lc3NUeXBlGAsgASgJEisK",
            "BXBob25lGAwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhUK",
            "DWFjY291bnRQZXJpb2QYDSABKBESFgoOc2V0dGxlbWVudFllYXIYDiABKBES",
            "FgoOc2V0dGxlbWVudEZsYWcYDyABKBESMAoLY29tcGFueVR5cGUYECABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIvCglzZXR1cERhdGUYESAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASFQoNdGF4T2ZmaWNl",
            "Q29kZRgSIAEoCRIWCgxvZmZpY2lhbFNlYWwYEyABKAxIARIVCgtjb21wYW55",
            "TG9nbxgUIAEoDEgCEiwKBmxDTlNOTxgVIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZUIQCg5vbmVvZlNldHVwRGF0ZUITChFvbmVvZk9mZmlj",
            "aWFsU2VhbEISChBvbmVvZkNvbXBhbnlMb2dvItkFCg1VcGRhdGVSZXF1ZXN0",
            "EhkKEWJ1c2luZXNzQ2xhc3NDb2RlGAEgASgREi0KB3ppcENvZGUYAiABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEwoLYWNjb3VudFVuaXQY",
            "AyABKBESDwoHYWRkcmVzcxgEIAEoCRIVCg1maW5hbmNlUGVyaW9kGAUgASgR",
            "EhMKC2NvbXBhbnlOYW1lGAYgASgJEjMKDWNvcnBvcmF0aW9uTm8YByABKAsy",
            "HC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSFAoMYnVzaW5lc3NDb2Rl",
            "GAggASgJEi8KCXByZXNpZGVudBgJIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIUCgxidXNpbmVzc0l0ZW0YCiABKAkSFAoMYnVzaW5lc3NU",
            "eXBlGAsgASgJEisKBXBob25lGAwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0",
            "cmluZ1ZhbHVlEhUKDWFjY291bnRQZXJpb2QYDSABKBESFgoOc2V0dGxlbWVu",
            "dFllYXIYDiABKBESFgoOc2V0dGxlbWVudEZsYWcYDyABKBESMAoLY29tcGFu",
            "eVR5cGUYECABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIvCglz",
            "ZXR1cERhdGUYESABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAAS",
            "FQoNdGF4T2ZmaWNlQ29kZRgSIAEoCRIWCgxvZmZpY2lhbFNlYWwYEyABKAxI",
            "ARIVCgtjb21wYW55TG9nbxgUIAEoDEgCEiwKBmxDTlNOTxgVIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUIQCg5vbmVvZlNldHVwRGF0ZUIT",
            "ChFvbmVvZk9mZmljaWFsU2VhbEISChBvbmVvZkNvbXBhbnlMb2dvIh8KDlVw",
            "ZGF0ZVJlc3BvbnNlEg0KBWNvdW50GAEgASgFIioKDURlbGV0ZVJlcXVlc3QS",
            "GQoRYnVzaW5lc3NDbGFzc0NvZGUYASABKBEiHwoORGVsZXRlUmVzcG9uc2US",
            "DQoFY291bnQYASABKAUyowcKDUJ1c2luZXNzQ2xhc3MSeQoYR2V0Rm9yQ29t",
            "cGFueUluZm9ybWF0aW9uEjEuQnVzaW5lc3NDbGFzc1N2Yy5HZXRGb3JDb21w",
            "YW55SW5mb3JtYXRpb25SZXF1ZXN0GiouQnVzaW5lc3NDbGFzc1N2Yy5CdXNp",
            "bmVzc0NsYXNzU2V0UmVzcG9uc2USfQocR2V0Rm9yQ29tcGFueUluZm9ybWF0",
            "aW9uSnNvbhIxLkJ1c2luZXNzQ2xhc3NTdmMuR2V0Rm9yQ29tcGFueUluZm9y",
            "bWF0aW9uUmVxdWVzdBoqLkJ1c2luZXNzQ2xhc3NTdmMuQnVzaW5lc3NDbGFz",
            "c1NldFJlc3BvbnNlElYKCEdldEJ5S2V5EiEuQnVzaW5lc3NDbGFzc1N2Yy5H",
            "ZXRCeUtleVJlcXVlc3QaJy5CdXNpbmVzc0NsYXNzU3ZjLkJ1c2luZXNzQ2xh",
            "c3NSZXNwb25zZRJaCgxHZXRCeUtleUpzb24SIS5CdXNpbmVzc0NsYXNzU3Zj",
            "LkdldEJ5S2V5UmVxdWVzdBonLkJ1c2luZXNzQ2xhc3NTdmMuQnVzaW5lc3ND",
            "bGFzc1Jlc3BvbnNlEkwKBkdldEFsbBIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0",
            "eRoqLkJ1c2luZXNzQ2xhc3NTdmMuQnVzaW5lc3NDbGFzc1NldFJlc3BvbnNl",
            "ElAKCkdldEFsbEpzb24SFi5nb29nbGUucHJvdG9idWYuRW1wdHkaKi5CdXNp",
            "bmVzc0NsYXNzU3ZjLkJ1c2luZXNzQ2xhc3NTZXRSZXNwb25zZRJSCgZJbnNl",
            "cnQSHy5CdXNpbmVzc0NsYXNzU3ZjLkluc2VydFJlcXVlc3QaJy5CdXNpbmVz",
            "c0NsYXNzU3ZjLkJ1c2luZXNzQ2xhc3NSZXNwb25zZRJWCgpJbnNlcnRKc29u",
            "Eh8uQnVzaW5lc3NDbGFzc1N2Yy5JbnNlcnRSZXF1ZXN0GicuQnVzaW5lc3ND",
            "bGFzc1N2Yy5CdXNpbmVzc0NsYXNzUmVzcG9uc2USSwoGVXBkYXRlEh8uQnVz",
            "aW5lc3NDbGFzc1N2Yy5VcGRhdGVSZXF1ZXN0GiAuQnVzaW5lc3NDbGFzc1N2",
            "Yy5VcGRhdGVSZXNwb25zZRJLCgZEZWxldGUSHy5CdXNpbmVzc0NsYXNzU3Zj",
            "LkRlbGV0ZVJlcXVlc3QaIC5CdXNpbmVzc0NsYXNzU3ZjLkRlbGV0ZVJlc3Bv",
            "bnNlQiOqAiBIYWNjcE1hbmFnZXIuQnVzaW5lc3NDbGFzc1Byb3Rvc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.GrpcDecimal), global::HaccpManager.BusinessClassProtos.GrpcDecimal.Parser, new[]{ "Units", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.BusinessClassResponse), global::HaccpManager.BusinessClassProtos.BusinessClassResponse.Parser, new[]{ "BusinessClass", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.BusinessClassSetResponse), global::HaccpManager.BusinessClassProtos.BusinessClassSetResponse.Parser, new[]{ "BusinessClassSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.DataSetResponse), global::HaccpManager.BusinessClassProtos.DataSetResponse.Parser, new[]{ "DataSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.GetForCompanyInformationRequest), global::HaccpManager.BusinessClassProtos.GetForCompanyInformationRequest.Parser, new[]{ "LCNSNO" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.GetByKeyRequest), global::HaccpManager.BusinessClassProtos.GetByKeyRequest.Parser, new[]{ "BusinessClassCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.InsertRequest), global::HaccpManager.BusinessClassProtos.InsertRequest.Parser, new[]{ "BusinessClassCode", "ZipCode", "AccountUnit", "Address", "FinancePeriod", "CompanyName", "CorporationNo", "BusinessCode", "President", "BusinessItem", "BusinessType", "Phone", "AccountPeriod", "SettlementYear", "SettlementFlag", "CompanyType", "SetupDate", "TaxOfficeCode", "OfficialSeal", "CompanyLogo", "LCNSNO" }, new[]{ "OneofSetupDate", "OneofOfficialSeal", "OneofCompanyLogo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.UpdateRequest), global::HaccpManager.BusinessClassProtos.UpdateRequest.Parser, new[]{ "BusinessClassCode", "ZipCode", "AccountUnit", "Address", "FinancePeriod", "CompanyName", "CorporationNo", "BusinessCode", "President", "BusinessItem", "BusinessType", "Phone", "AccountPeriod", "SettlementYear", "SettlementFlag", "CompanyType", "SetupDate", "TaxOfficeCode", "OfficialSeal", "CompanyLogo", "LCNSNO" }, new[]{ "OneofSetupDate", "OneofOfficialSeal", "OneofCompanyLogo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.UpdateResponse), global::HaccpManager.BusinessClassProtos.UpdateResponse.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.DeleteRequest), global::HaccpManager.BusinessClassProtos.DeleteRequest.Parser, new[]{ "BusinessClassCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.BusinessClassProtos.DeleteResponse), global::HaccpManager.BusinessClassProtos.DeleteResponse.Parser, new[]{ "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcDecimal : pb::IMessage<GrpcDecimal> {
    private static readonly pb::MessageParser<GrpcDecimal> _parser = new pb::MessageParser<GrpcDecimal>(() => new GrpcDecimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDecimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal(GrpcDecimal other) : this() {
      units_ = other.units_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal Clone() {
      return new GrpcDecimal(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private long units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDecimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDecimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0L) hash ^= Units.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Units);
      }
      if (Nanos != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Units);
      }
      if (Nanos != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDecimal other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0L) {
        Units = other.Units;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Units = input.ReadInt64();
            break;
          }
          case 21: {
            Nanos = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BusinessClassResponse : pb::IMessage<BusinessClassResponse> {
    private static readonly pb::MessageParser<BusinessClassResponse> _parser = new pb::MessageParser<BusinessClassResponse>(() => new BusinessClassResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BusinessClassResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BusinessClassResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BusinessClassResponse(BusinessClassResponse other) : this() {
      businessClass_ = other.businessClass_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BusinessClassResponse Clone() {
      return new BusinessClassResponse(this);
    }

    /// <summary>Field number for the "businessClass" field.</summary>
    public const int BusinessClassFieldNumber = 1;
    private pb::ByteString businessClass_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BusinessClass {
      get { return businessClass_; }
      set {
        businessClass_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BusinessClassResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BusinessClassResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClass != other.BusinessClass) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClass.Length != 0) hash ^= BusinessClass.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClass.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BusinessClass);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClass.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BusinessClass);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BusinessClassResponse other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClass.Length != 0) {
        BusinessClass = other.BusinessClass;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BusinessClass = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BusinessClassSetResponse : pb::IMessage<BusinessClassSetResponse> {
    private static readonly pb::MessageParser<BusinessClassSetResponse> _parser = new pb::MessageParser<BusinessClassSetResponse>(() => new BusinessClassSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BusinessClassSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BusinessClassSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BusinessClassSetResponse(BusinessClassSetResponse other) : this() {
      businessClassSet_ = other.businessClassSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BusinessClassSetResponse Clone() {
      return new BusinessClassSetResponse(this);
    }

    /// <summary>Field number for the "businessClassSet" field.</summary>
    public const int BusinessClassSetFieldNumber = 1;
    private pb::ByteString businessClassSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BusinessClassSet {
      get { return businessClassSet_; }
      set {
        businessClassSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BusinessClassSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BusinessClassSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClassSet != other.BusinessClassSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClassSet.Length != 0) hash ^= BusinessClassSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClassSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(BusinessClassSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClassSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BusinessClassSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BusinessClassSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClassSet.Length != 0) {
        BusinessClassSet = other.BusinessClassSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BusinessClassSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSetResponse : pb::IMessage<DataSetResponse> {
    private static readonly pb::MessageParser<DataSetResponse> _parser = new pb::MessageParser<DataSetResponse>(() => new DataSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse(DataSetResponse other) : this() {
      dataSet_ = other.dataSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse Clone() {
      return new DataSetResponse(this);
    }

    /// <summary>Field number for the "dataSet" field.</summary>
    public const int DataSetFieldNumber = 1;
    private pb::ByteString dataSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataSet {
      get { return dataSet_; }
      set {
        dataSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSet != other.DataSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSet.Length != 0) hash ^= DataSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DataSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DataSet.Length != 0) {
        DataSet = other.DataSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForCompanyInformationRequest : pb::IMessage<GetForCompanyInformationRequest> {
    private static readonly pb::MessageParser<GetForCompanyInformationRequest> _parser = new pb::MessageParser<GetForCompanyInformationRequest>(() => new GetForCompanyInformationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForCompanyInformationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCompanyInformationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCompanyInformationRequest(GetForCompanyInformationRequest other) : this() {
      lCNSNO_ = other.lCNSNO_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCompanyInformationRequest Clone() {
      return new GetForCompanyInformationRequest(this);
    }

    /// <summary>Field number for the "lCNS_NO" field.</summary>
    public const int LCNSNOFieldNumber = 1;
    private string lCNSNO_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LCNSNO {
      get { return lCNSNO_; }
      set {
        lCNSNO_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForCompanyInformationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForCompanyInformationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LCNSNO != other.LCNSNO) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LCNSNO.Length != 0) hash ^= LCNSNO.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LCNSNO.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LCNSNO);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LCNSNO.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LCNSNO);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForCompanyInformationRequest other) {
      if (other == null) {
        return;
      }
      if (other.LCNSNO.Length != 0) {
        LCNSNO = other.LCNSNO;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LCNSNO = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByKeyRequest : pb::IMessage<GetByKeyRequest> {
    private static readonly pb::MessageParser<GetByKeyRequest> _parser = new pb::MessageParser<GetByKeyRequest>(() => new GetByKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest(GetByKeyRequest other) : this() {
      businessClassCode_ = other.businessClassCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest Clone() {
      return new GetByKeyRequest(this);
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 1;
    private int businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClassCode != other.BusinessClassCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClassCode != 0) hash ^= BusinessClassCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClassCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(BusinessClassCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClassCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BusinessClassCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClassCode != 0) {
        BusinessClassCode = other.BusinessClassCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BusinessClassCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertRequest : pb::IMessage<InsertRequest> {
    private static readonly pb::MessageParser<InsertRequest> _parser = new pb::MessageParser<InsertRequest>(() => new InsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest(InsertRequest other) : this() {
      businessClassCode_ = other.businessClassCode_;
      ZipCode = other.ZipCode;
      accountUnit_ = other.accountUnit_;
      address_ = other.address_;
      financePeriod_ = other.financePeriod_;
      companyName_ = other.companyName_;
      CorporationNo = other.CorporationNo;
      businessCode_ = other.businessCode_;
      President = other.President;
      businessItem_ = other.businessItem_;
      businessType_ = other.businessType_;
      Phone = other.Phone;
      accountPeriod_ = other.accountPeriod_;
      settlementYear_ = other.settlementYear_;
      settlementFlag_ = other.settlementFlag_;
      CompanyType = other.CompanyType;
      taxOfficeCode_ = other.taxOfficeCode_;
      LCNSNO = other.LCNSNO;
      switch (other.OneofSetupDateCase) {
        case OneofSetupDateOneofCase.SetupDate:
          SetupDate = other.SetupDate.Clone();
          break;
      }

      switch (other.OneofOfficialSealCase) {
        case OneofOfficialSealOneofCase.OfficialSeal:
          OfficialSeal = other.OfficialSeal;
          break;
      }

      switch (other.OneofCompanyLogoCase) {
        case OneofCompanyLogoOneofCase.CompanyLogo:
          CompanyLogo = other.CompanyLogo;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest Clone() {
      return new InsertRequest(this);
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 1;
    private int businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }

    /// <summary>Field number for the "zipCode" field.</summary>
    public const int ZipCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_zipCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string zipCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = value;
      }
    }


    /// <summary>Field number for the "accountUnit" field.</summary>
    public const int AccountUnitFieldNumber = 3;
    private int accountUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountUnit {
      get { return accountUnit_; }
      set {
        accountUnit_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "financePeriod" field.</summary>
    public const int FinancePeriodFieldNumber = 5;
    private int financePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FinancePeriod {
      get { return financePeriod_; }
      set {
        financePeriod_ = value;
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 6;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "corporationNo" field.</summary>
    public const int CorporationNoFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_corporationNo_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string corporationNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorporationNo {
      get { return corporationNo_; }
      set {
        corporationNo_ = value;
      }
    }


    /// <summary>Field number for the "businessCode" field.</summary>
    public const int BusinessCodeFieldNumber = 8;
    private string businessCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessCode {
      get { return businessCode_; }
      set {
        businessCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "president" field.</summary>
    public const int PresidentFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_president_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string president_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string President {
      get { return president_; }
      set {
        president_ = value;
      }
    }


    /// <summary>Field number for the "businessItem" field.</summary>
    public const int BusinessItemFieldNumber = 10;
    private string businessItem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessItem {
      get { return businessItem_; }
      set {
        businessItem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "businessType" field.</summary>
    public const int BusinessTypeFieldNumber = 11;
    private string businessType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessType {
      get { return businessType_; }
      set {
        businessType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_phone_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string phone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = value;
      }
    }


    /// <summary>Field number for the "accountPeriod" field.</summary>
    public const int AccountPeriodFieldNumber = 13;
    private int accountPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountPeriod {
      get { return accountPeriod_; }
      set {
        accountPeriod_ = value;
      }
    }

    /// <summary>Field number for the "settlementYear" field.</summary>
    public const int SettlementYearFieldNumber = 14;
    private int settlementYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SettlementYear {
      get { return settlementYear_; }
      set {
        settlementYear_ = value;
      }
    }

    /// <summary>Field number for the "settlementFlag" field.</summary>
    public const int SettlementFlagFieldNumber = 15;
    private int settlementFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SettlementFlag {
      get { return settlementFlag_; }
      set {
        settlementFlag_ = value;
      }
    }

    /// <summary>Field number for the "companyType" field.</summary>
    public const int CompanyTypeFieldNumber = 16;
    private static readonly pb::FieldCodec<int?> _single_companyType_codec = pb::FieldCodec.ForStructWrapper<int>(130);
    private int? companyType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CompanyType {
      get { return companyType_; }
      set {
        companyType_ = value;
      }
    }


    /// <summary>Field number for the "setupDate" field.</summary>
    public const int SetupDateFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SetupDate {
      get { return oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofSetupDate_ : null; }
      set {
        oneofSetupDate_ = value;
        oneofSetupDateCase_ = value == null ? OneofSetupDateOneofCase.None : OneofSetupDateOneofCase.SetupDate;
      }
    }

    /// <summary>Field number for the "taxOfficeCode" field.</summary>
    public const int TaxOfficeCodeFieldNumber = 18;
    private string taxOfficeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxOfficeCode {
      get { return taxOfficeCode_; }
      set {
        taxOfficeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "officialSeal" field.</summary>
    public const int OfficialSealFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OfficialSeal {
      get { return oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal ? (pb::ByteString) oneofOfficialSeal_ : pb::ByteString.Empty; }
      set {
        oneofOfficialSeal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneofOfficialSealCase_ = OneofOfficialSealOneofCase.OfficialSeal;
      }
    }

    /// <summary>Field number for the "companyLogo" field.</summary>
    public const int CompanyLogoFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CompanyLogo {
      get { return oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo ? (pb::ByteString) oneofCompanyLogo_ : pb::ByteString.Empty; }
      set {
        oneofCompanyLogo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneofCompanyLogoCase_ = OneofCompanyLogoOneofCase.CompanyLogo;
      }
    }

    /// <summary>Field number for the "lCNSNO" field.</summary>
    public const int LCNSNOFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_lCNSNO_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string lCNSNO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LCNSNO {
      get { return lCNSNO_; }
      set {
        lCNSNO_ = value;
      }
    }


    private object oneofSetupDate_;
    /// <summary>Enum of possible cases for the "oneofSetupDate" oneof.</summary>
    public enum OneofSetupDateOneofCase {
      None = 0,
      SetupDate = 17,
    }
    private OneofSetupDateOneofCase oneofSetupDateCase_ = OneofSetupDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofSetupDateOneofCase OneofSetupDateCase {
      get { return oneofSetupDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofSetupDate() {
      oneofSetupDateCase_ = OneofSetupDateOneofCase.None;
      oneofSetupDate_ = null;
    }

    private object oneofOfficialSeal_;
    /// <summary>Enum of possible cases for the "oneofOfficialSeal" oneof.</summary>
    public enum OneofOfficialSealOneofCase {
      None = 0,
      OfficialSeal = 19,
    }
    private OneofOfficialSealOneofCase oneofOfficialSealCase_ = OneofOfficialSealOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofOfficialSealOneofCase OneofOfficialSealCase {
      get { return oneofOfficialSealCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofOfficialSeal() {
      oneofOfficialSealCase_ = OneofOfficialSealOneofCase.None;
      oneofOfficialSeal_ = null;
    }

    private object oneofCompanyLogo_;
    /// <summary>Enum of possible cases for the "oneofCompanyLogo" oneof.</summary>
    public enum OneofCompanyLogoOneofCase {
      None = 0,
      CompanyLogo = 20,
    }
    private OneofCompanyLogoOneofCase oneofCompanyLogoCase_ = OneofCompanyLogoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofCompanyLogoOneofCase OneofCompanyLogoCase {
      get { return oneofCompanyLogoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofCompanyLogo() {
      oneofCompanyLogoCase_ = OneofCompanyLogoOneofCase.None;
      oneofCompanyLogo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClassCode != other.BusinessClassCode) return false;
      if (ZipCode != other.ZipCode) return false;
      if (AccountUnit != other.AccountUnit) return false;
      if (Address != other.Address) return false;
      if (FinancePeriod != other.FinancePeriod) return false;
      if (CompanyName != other.CompanyName) return false;
      if (CorporationNo != other.CorporationNo) return false;
      if (BusinessCode != other.BusinessCode) return false;
      if (President != other.President) return false;
      if (BusinessItem != other.BusinessItem) return false;
      if (BusinessType != other.BusinessType) return false;
      if (Phone != other.Phone) return false;
      if (AccountPeriod != other.AccountPeriod) return false;
      if (SettlementYear != other.SettlementYear) return false;
      if (SettlementFlag != other.SettlementFlag) return false;
      if (CompanyType != other.CompanyType) return false;
      if (!object.Equals(SetupDate, other.SetupDate)) return false;
      if (TaxOfficeCode != other.TaxOfficeCode) return false;
      if (OfficialSeal != other.OfficialSeal) return false;
      if (CompanyLogo != other.CompanyLogo) return false;
      if (LCNSNO != other.LCNSNO) return false;
      if (OneofSetupDateCase != other.OneofSetupDateCase) return false;
      if (OneofOfficialSealCase != other.OneofOfficialSealCase) return false;
      if (OneofCompanyLogoCase != other.OneofCompanyLogoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClassCode != 0) hash ^= BusinessClassCode.GetHashCode();
      if (zipCode_ != null) hash ^= ZipCode.GetHashCode();
      if (AccountUnit != 0) hash ^= AccountUnit.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (FinancePeriod != 0) hash ^= FinancePeriod.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (corporationNo_ != null) hash ^= CorporationNo.GetHashCode();
      if (BusinessCode.Length != 0) hash ^= BusinessCode.GetHashCode();
      if (president_ != null) hash ^= President.GetHashCode();
      if (BusinessItem.Length != 0) hash ^= BusinessItem.GetHashCode();
      if (BusinessType.Length != 0) hash ^= BusinessType.GetHashCode();
      if (phone_ != null) hash ^= Phone.GetHashCode();
      if (AccountPeriod != 0) hash ^= AccountPeriod.GetHashCode();
      if (SettlementYear != 0) hash ^= SettlementYear.GetHashCode();
      if (SettlementFlag != 0) hash ^= SettlementFlag.GetHashCode();
      if (companyType_ != null) hash ^= CompanyType.GetHashCode();
      if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) hash ^= SetupDate.GetHashCode();
      if (TaxOfficeCode.Length != 0) hash ^= TaxOfficeCode.GetHashCode();
      if (oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal) hash ^= OfficialSeal.GetHashCode();
      if (oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo) hash ^= CompanyLogo.GetHashCode();
      if (lCNSNO_ != null) hash ^= LCNSNO.GetHashCode();
      hash ^= (int) oneofSetupDateCase_;
      hash ^= (int) oneofOfficialSealCase_;
      hash ^= (int) oneofCompanyLogoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClassCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(BusinessClassCode);
      }
      if (zipCode_ != null) {
        _single_zipCode_codec.WriteTagAndValue(output, ZipCode);
      }
      if (AccountUnit != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(AccountUnit);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (FinancePeriod != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(FinancePeriod);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CompanyName);
      }
      if (corporationNo_ != null) {
        _single_corporationNo_codec.WriteTagAndValue(output, CorporationNo);
      }
      if (BusinessCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BusinessCode);
      }
      if (president_ != null) {
        _single_president_codec.WriteTagAndValue(output, President);
      }
      if (BusinessItem.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BusinessItem);
      }
      if (BusinessType.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(BusinessType);
      }
      if (phone_ != null) {
        _single_phone_codec.WriteTagAndValue(output, Phone);
      }
      if (AccountPeriod != 0) {
        output.WriteRawTag(104);
        output.WriteSInt32(AccountPeriod);
      }
      if (SettlementYear != 0) {
        output.WriteRawTag(112);
        output.WriteSInt32(SettlementYear);
      }
      if (SettlementFlag != 0) {
        output.WriteRawTag(120);
        output.WriteSInt32(SettlementFlag);
      }
      if (companyType_ != null) {
        _single_companyType_codec.WriteTagAndValue(output, CompanyType);
      }
      if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SetupDate);
      }
      if (TaxOfficeCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(TaxOfficeCode);
      }
      if (oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal) {
        output.WriteRawTag(154, 1);
        output.WriteBytes(OfficialSeal);
      }
      if (oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(CompanyLogo);
      }
      if (lCNSNO_ != null) {
        _single_lCNSNO_codec.WriteTagAndValue(output, LCNSNO);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClassCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BusinessClassCode);
      }
      if (zipCode_ != null) {
        size += _single_zipCode_codec.CalculateSizeWithTag(ZipCode);
      }
      if (AccountUnit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountUnit);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (FinancePeriod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FinancePeriod);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (corporationNo_ != null) {
        size += _single_corporationNo_codec.CalculateSizeWithTag(CorporationNo);
      }
      if (BusinessCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessCode);
      }
      if (president_ != null) {
        size += _single_president_codec.CalculateSizeWithTag(President);
      }
      if (BusinessItem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessItem);
      }
      if (BusinessType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessType);
      }
      if (phone_ != null) {
        size += _single_phone_codec.CalculateSizeWithTag(Phone);
      }
      if (AccountPeriod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountPeriod);
      }
      if (SettlementYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SettlementYear);
      }
      if (SettlementFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SettlementFlag);
      }
      if (companyType_ != null) {
        size += _single_companyType_codec.CalculateSizeWithTag(CompanyType);
      }
      if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetupDate);
      }
      if (TaxOfficeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TaxOfficeCode);
      }
      if (oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(OfficialSeal);
      }
      if (oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(CompanyLogo);
      }
      if (lCNSNO_ != null) {
        size += _single_lCNSNO_codec.CalculateSizeWithTag(LCNSNO);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClassCode != 0) {
        BusinessClassCode = other.BusinessClassCode;
      }
      if (other.zipCode_ != null) {
        if (zipCode_ == null || other.ZipCode != "") {
          ZipCode = other.ZipCode;
        }
      }
      if (other.AccountUnit != 0) {
        AccountUnit = other.AccountUnit;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.FinancePeriod != 0) {
        FinancePeriod = other.FinancePeriod;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.corporationNo_ != null) {
        if (corporationNo_ == null || other.CorporationNo != "") {
          CorporationNo = other.CorporationNo;
        }
      }
      if (other.BusinessCode.Length != 0) {
        BusinessCode = other.BusinessCode;
      }
      if (other.president_ != null) {
        if (president_ == null || other.President != "") {
          President = other.President;
        }
      }
      if (other.BusinessItem.Length != 0) {
        BusinessItem = other.BusinessItem;
      }
      if (other.BusinessType.Length != 0) {
        BusinessType = other.BusinessType;
      }
      if (other.phone_ != null) {
        if (phone_ == null || other.Phone != "") {
          Phone = other.Phone;
        }
      }
      if (other.AccountPeriod != 0) {
        AccountPeriod = other.AccountPeriod;
      }
      if (other.SettlementYear != 0) {
        SettlementYear = other.SettlementYear;
      }
      if (other.SettlementFlag != 0) {
        SettlementFlag = other.SettlementFlag;
      }
      if (other.companyType_ != null) {
        if (companyType_ == null || other.CompanyType != 0) {
          CompanyType = other.CompanyType;
        }
      }
      if (other.TaxOfficeCode.Length != 0) {
        TaxOfficeCode = other.TaxOfficeCode;
      }
      if (other.lCNSNO_ != null) {
        if (lCNSNO_ == null || other.LCNSNO != "") {
          LCNSNO = other.LCNSNO;
        }
      }
      switch (other.OneofSetupDateCase) {
        case OneofSetupDateOneofCase.SetupDate:
          if (SetupDate == null) {
            SetupDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          SetupDate.MergeFrom(other.SetupDate);
          break;
      }

      switch (other.OneofOfficialSealCase) {
        case OneofOfficialSealOneofCase.OfficialSeal:
          OfficialSeal = other.OfficialSeal;
          break;
      }

      switch (other.OneofCompanyLogoCase) {
        case OneofCompanyLogoOneofCase.CompanyLogo:
          CompanyLogo = other.CompanyLogo;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BusinessClassCode = input.ReadSInt32();
            break;
          }
          case 18: {
            string value = _single_zipCode_codec.Read(input);
            if (zipCode_ == null || value != "") {
              ZipCode = value;
            }
            break;
          }
          case 24: {
            AccountUnit = input.ReadSInt32();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 40: {
            FinancePeriod = input.ReadSInt32();
            break;
          }
          case 50: {
            CompanyName = input.ReadString();
            break;
          }
          case 58: {
            string value = _single_corporationNo_codec.Read(input);
            if (corporationNo_ == null || value != "") {
              CorporationNo = value;
            }
            break;
          }
          case 66: {
            BusinessCode = input.ReadString();
            break;
          }
          case 74: {
            string value = _single_president_codec.Read(input);
            if (president_ == null || value != "") {
              President = value;
            }
            break;
          }
          case 82: {
            BusinessItem = input.ReadString();
            break;
          }
          case 90: {
            BusinessType = input.ReadString();
            break;
          }
          case 98: {
            string value = _single_phone_codec.Read(input);
            if (phone_ == null || value != "") {
              Phone = value;
            }
            break;
          }
          case 104: {
            AccountPeriod = input.ReadSInt32();
            break;
          }
          case 112: {
            SettlementYear = input.ReadSInt32();
            break;
          }
          case 120: {
            SettlementFlag = input.ReadSInt32();
            break;
          }
          case 130: {
            int? value = _single_companyType_codec.Read(input);
            if (companyType_ == null || value != 0) {
              CompanyType = value;
            }
            break;
          }
          case 138: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) {
              subBuilder.MergeFrom(SetupDate);
            }
            input.ReadMessage(subBuilder);
            SetupDate = subBuilder;
            break;
          }
          case 146: {
            TaxOfficeCode = input.ReadString();
            break;
          }
          case 154: {
            OfficialSeal = input.ReadBytes();
            break;
          }
          case 162: {
            CompanyLogo = input.ReadBytes();
            break;
          }
          case 170: {
            string value = _single_lCNSNO_codec.Read(input);
            if (lCNSNO_ == null || value != "") {
              LCNSNO = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      businessClassCode_ = other.businessClassCode_;
      ZipCode = other.ZipCode;
      accountUnit_ = other.accountUnit_;
      address_ = other.address_;
      financePeriod_ = other.financePeriod_;
      companyName_ = other.companyName_;
      CorporationNo = other.CorporationNo;
      businessCode_ = other.businessCode_;
      President = other.President;
      businessItem_ = other.businessItem_;
      businessType_ = other.businessType_;
      Phone = other.Phone;
      accountPeriod_ = other.accountPeriod_;
      settlementYear_ = other.settlementYear_;
      settlementFlag_ = other.settlementFlag_;
      CompanyType = other.CompanyType;
      taxOfficeCode_ = other.taxOfficeCode_;
      LCNSNO = other.LCNSNO;
      switch (other.OneofSetupDateCase) {
        case OneofSetupDateOneofCase.SetupDate:
          SetupDate = other.SetupDate.Clone();
          break;
      }

      switch (other.OneofOfficialSealCase) {
        case OneofOfficialSealOneofCase.OfficialSeal:
          OfficialSeal = other.OfficialSeal;
          break;
      }

      switch (other.OneofCompanyLogoCase) {
        case OneofCompanyLogoOneofCase.CompanyLogo:
          CompanyLogo = other.CompanyLogo;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 1;
    private int businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }

    /// <summary>Field number for the "zipCode" field.</summary>
    public const int ZipCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _single_zipCode_codec = pb::FieldCodec.ForClassWrapper<string>(18);
    private string zipCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = value;
      }
    }


    /// <summary>Field number for the "accountUnit" field.</summary>
    public const int AccountUnitFieldNumber = 3;
    private int accountUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountUnit {
      get { return accountUnit_; }
      set {
        accountUnit_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 4;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "financePeriod" field.</summary>
    public const int FinancePeriodFieldNumber = 5;
    private int financePeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FinancePeriod {
      get { return financePeriod_; }
      set {
        financePeriod_ = value;
      }
    }

    /// <summary>Field number for the "companyName" field.</summary>
    public const int CompanyNameFieldNumber = 6;
    private string companyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanyName {
      get { return companyName_; }
      set {
        companyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "corporationNo" field.</summary>
    public const int CorporationNoFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_corporationNo_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string corporationNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorporationNo {
      get { return corporationNo_; }
      set {
        corporationNo_ = value;
      }
    }


    /// <summary>Field number for the "businessCode" field.</summary>
    public const int BusinessCodeFieldNumber = 8;
    private string businessCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessCode {
      get { return businessCode_; }
      set {
        businessCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "president" field.</summary>
    public const int PresidentFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _single_president_codec = pb::FieldCodec.ForClassWrapper<string>(74);
    private string president_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string President {
      get { return president_; }
      set {
        president_ = value;
      }
    }


    /// <summary>Field number for the "businessItem" field.</summary>
    public const int BusinessItemFieldNumber = 10;
    private string businessItem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessItem {
      get { return businessItem_; }
      set {
        businessItem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "businessType" field.</summary>
    public const int BusinessTypeFieldNumber = 11;
    private string businessType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessType {
      get { return businessType_; }
      set {
        businessType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_phone_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string phone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = value;
      }
    }


    /// <summary>Field number for the "accountPeriod" field.</summary>
    public const int AccountPeriodFieldNumber = 13;
    private int accountPeriod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AccountPeriod {
      get { return accountPeriod_; }
      set {
        accountPeriod_ = value;
      }
    }

    /// <summary>Field number for the "settlementYear" field.</summary>
    public const int SettlementYearFieldNumber = 14;
    private int settlementYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SettlementYear {
      get { return settlementYear_; }
      set {
        settlementYear_ = value;
      }
    }

    /// <summary>Field number for the "settlementFlag" field.</summary>
    public const int SettlementFlagFieldNumber = 15;
    private int settlementFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SettlementFlag {
      get { return settlementFlag_; }
      set {
        settlementFlag_ = value;
      }
    }

    /// <summary>Field number for the "companyType" field.</summary>
    public const int CompanyTypeFieldNumber = 16;
    private static readonly pb::FieldCodec<int?> _single_companyType_codec = pb::FieldCodec.ForStructWrapper<int>(130);
    private int? companyType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CompanyType {
      get { return companyType_; }
      set {
        companyType_ = value;
      }
    }


    /// <summary>Field number for the "setupDate" field.</summary>
    public const int SetupDateFieldNumber = 17;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp SetupDate {
      get { return oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofSetupDate_ : null; }
      set {
        oneofSetupDate_ = value;
        oneofSetupDateCase_ = value == null ? OneofSetupDateOneofCase.None : OneofSetupDateOneofCase.SetupDate;
      }
    }

    /// <summary>Field number for the "taxOfficeCode" field.</summary>
    public const int TaxOfficeCodeFieldNumber = 18;
    private string taxOfficeCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaxOfficeCode {
      get { return taxOfficeCode_; }
      set {
        taxOfficeCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "officialSeal" field.</summary>
    public const int OfficialSealFieldNumber = 19;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OfficialSeal {
      get { return oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal ? (pb::ByteString) oneofOfficialSeal_ : pb::ByteString.Empty; }
      set {
        oneofOfficialSeal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneofOfficialSealCase_ = OneofOfficialSealOneofCase.OfficialSeal;
      }
    }

    /// <summary>Field number for the "companyLogo" field.</summary>
    public const int CompanyLogoFieldNumber = 20;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CompanyLogo {
      get { return oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo ? (pb::ByteString) oneofCompanyLogo_ : pb::ByteString.Empty; }
      set {
        oneofCompanyLogo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        oneofCompanyLogoCase_ = OneofCompanyLogoOneofCase.CompanyLogo;
      }
    }

    /// <summary>Field number for the "lCNSNO" field.</summary>
    public const int LCNSNOFieldNumber = 21;
    private static readonly pb::FieldCodec<string> _single_lCNSNO_codec = pb::FieldCodec.ForClassWrapper<string>(170);
    private string lCNSNO_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LCNSNO {
      get { return lCNSNO_; }
      set {
        lCNSNO_ = value;
      }
    }


    private object oneofSetupDate_;
    /// <summary>Enum of possible cases for the "oneofSetupDate" oneof.</summary>
    public enum OneofSetupDateOneofCase {
      None = 0,
      SetupDate = 17,
    }
    private OneofSetupDateOneofCase oneofSetupDateCase_ = OneofSetupDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofSetupDateOneofCase OneofSetupDateCase {
      get { return oneofSetupDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofSetupDate() {
      oneofSetupDateCase_ = OneofSetupDateOneofCase.None;
      oneofSetupDate_ = null;
    }

    private object oneofOfficialSeal_;
    /// <summary>Enum of possible cases for the "oneofOfficialSeal" oneof.</summary>
    public enum OneofOfficialSealOneofCase {
      None = 0,
      OfficialSeal = 19,
    }
    private OneofOfficialSealOneofCase oneofOfficialSealCase_ = OneofOfficialSealOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofOfficialSealOneofCase OneofOfficialSealCase {
      get { return oneofOfficialSealCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofOfficialSeal() {
      oneofOfficialSealCase_ = OneofOfficialSealOneofCase.None;
      oneofOfficialSeal_ = null;
    }

    private object oneofCompanyLogo_;
    /// <summary>Enum of possible cases for the "oneofCompanyLogo" oneof.</summary>
    public enum OneofCompanyLogoOneofCase {
      None = 0,
      CompanyLogo = 20,
    }
    private OneofCompanyLogoOneofCase oneofCompanyLogoCase_ = OneofCompanyLogoOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofCompanyLogoOneofCase OneofCompanyLogoCase {
      get { return oneofCompanyLogoCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofCompanyLogo() {
      oneofCompanyLogoCase_ = OneofCompanyLogoOneofCase.None;
      oneofCompanyLogo_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClassCode != other.BusinessClassCode) return false;
      if (ZipCode != other.ZipCode) return false;
      if (AccountUnit != other.AccountUnit) return false;
      if (Address != other.Address) return false;
      if (FinancePeriod != other.FinancePeriod) return false;
      if (CompanyName != other.CompanyName) return false;
      if (CorporationNo != other.CorporationNo) return false;
      if (BusinessCode != other.BusinessCode) return false;
      if (President != other.President) return false;
      if (BusinessItem != other.BusinessItem) return false;
      if (BusinessType != other.BusinessType) return false;
      if (Phone != other.Phone) return false;
      if (AccountPeriod != other.AccountPeriod) return false;
      if (SettlementYear != other.SettlementYear) return false;
      if (SettlementFlag != other.SettlementFlag) return false;
      if (CompanyType != other.CompanyType) return false;
      if (!object.Equals(SetupDate, other.SetupDate)) return false;
      if (TaxOfficeCode != other.TaxOfficeCode) return false;
      if (OfficialSeal != other.OfficialSeal) return false;
      if (CompanyLogo != other.CompanyLogo) return false;
      if (LCNSNO != other.LCNSNO) return false;
      if (OneofSetupDateCase != other.OneofSetupDateCase) return false;
      if (OneofOfficialSealCase != other.OneofOfficialSealCase) return false;
      if (OneofCompanyLogoCase != other.OneofCompanyLogoCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClassCode != 0) hash ^= BusinessClassCode.GetHashCode();
      if (zipCode_ != null) hash ^= ZipCode.GetHashCode();
      if (AccountUnit != 0) hash ^= AccountUnit.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (FinancePeriod != 0) hash ^= FinancePeriod.GetHashCode();
      if (CompanyName.Length != 0) hash ^= CompanyName.GetHashCode();
      if (corporationNo_ != null) hash ^= CorporationNo.GetHashCode();
      if (BusinessCode.Length != 0) hash ^= BusinessCode.GetHashCode();
      if (president_ != null) hash ^= President.GetHashCode();
      if (BusinessItem.Length != 0) hash ^= BusinessItem.GetHashCode();
      if (BusinessType.Length != 0) hash ^= BusinessType.GetHashCode();
      if (phone_ != null) hash ^= Phone.GetHashCode();
      if (AccountPeriod != 0) hash ^= AccountPeriod.GetHashCode();
      if (SettlementYear != 0) hash ^= SettlementYear.GetHashCode();
      if (SettlementFlag != 0) hash ^= SettlementFlag.GetHashCode();
      if (companyType_ != null) hash ^= CompanyType.GetHashCode();
      if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) hash ^= SetupDate.GetHashCode();
      if (TaxOfficeCode.Length != 0) hash ^= TaxOfficeCode.GetHashCode();
      if (oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal) hash ^= OfficialSeal.GetHashCode();
      if (oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo) hash ^= CompanyLogo.GetHashCode();
      if (lCNSNO_ != null) hash ^= LCNSNO.GetHashCode();
      hash ^= (int) oneofSetupDateCase_;
      hash ^= (int) oneofOfficialSealCase_;
      hash ^= (int) oneofCompanyLogoCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClassCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(BusinessClassCode);
      }
      if (zipCode_ != null) {
        _single_zipCode_codec.WriteTagAndValue(output, ZipCode);
      }
      if (AccountUnit != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(AccountUnit);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Address);
      }
      if (FinancePeriod != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(FinancePeriod);
      }
      if (CompanyName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(CompanyName);
      }
      if (corporationNo_ != null) {
        _single_corporationNo_codec.WriteTagAndValue(output, CorporationNo);
      }
      if (BusinessCode.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BusinessCode);
      }
      if (president_ != null) {
        _single_president_codec.WriteTagAndValue(output, President);
      }
      if (BusinessItem.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BusinessItem);
      }
      if (BusinessType.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(BusinessType);
      }
      if (phone_ != null) {
        _single_phone_codec.WriteTagAndValue(output, Phone);
      }
      if (AccountPeriod != 0) {
        output.WriteRawTag(104);
        output.WriteSInt32(AccountPeriod);
      }
      if (SettlementYear != 0) {
        output.WriteRawTag(112);
        output.WriteSInt32(SettlementYear);
      }
      if (SettlementFlag != 0) {
        output.WriteRawTag(120);
        output.WriteSInt32(SettlementFlag);
      }
      if (companyType_ != null) {
        _single_companyType_codec.WriteTagAndValue(output, CompanyType);
      }
      if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SetupDate);
      }
      if (TaxOfficeCode.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(TaxOfficeCode);
      }
      if (oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal) {
        output.WriteRawTag(154, 1);
        output.WriteBytes(OfficialSeal);
      }
      if (oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo) {
        output.WriteRawTag(162, 1);
        output.WriteBytes(CompanyLogo);
      }
      if (lCNSNO_ != null) {
        _single_lCNSNO_codec.WriteTagAndValue(output, LCNSNO);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClassCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BusinessClassCode);
      }
      if (zipCode_ != null) {
        size += _single_zipCode_codec.CalculateSizeWithTag(ZipCode);
      }
      if (AccountUnit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountUnit);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (FinancePeriod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(FinancePeriod);
      }
      if (CompanyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanyName);
      }
      if (corporationNo_ != null) {
        size += _single_corporationNo_codec.CalculateSizeWithTag(CorporationNo);
      }
      if (BusinessCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessCode);
      }
      if (president_ != null) {
        size += _single_president_codec.CalculateSizeWithTag(President);
      }
      if (BusinessItem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessItem);
      }
      if (BusinessType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessType);
      }
      if (phone_ != null) {
        size += _single_phone_codec.CalculateSizeWithTag(Phone);
      }
      if (AccountPeriod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(AccountPeriod);
      }
      if (SettlementYear != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SettlementYear);
      }
      if (SettlementFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SettlementFlag);
      }
      if (companyType_ != null) {
        size += _single_companyType_codec.CalculateSizeWithTag(CompanyType);
      }
      if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SetupDate);
      }
      if (TaxOfficeCode.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(TaxOfficeCode);
      }
      if (oneofOfficialSealCase_ == OneofOfficialSealOneofCase.OfficialSeal) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(OfficialSeal);
      }
      if (oneofCompanyLogoCase_ == OneofCompanyLogoOneofCase.CompanyLogo) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(CompanyLogo);
      }
      if (lCNSNO_ != null) {
        size += _single_lCNSNO_codec.CalculateSizeWithTag(LCNSNO);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClassCode != 0) {
        BusinessClassCode = other.BusinessClassCode;
      }
      if (other.zipCode_ != null) {
        if (zipCode_ == null || other.ZipCode != "") {
          ZipCode = other.ZipCode;
        }
      }
      if (other.AccountUnit != 0) {
        AccountUnit = other.AccountUnit;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.FinancePeriod != 0) {
        FinancePeriod = other.FinancePeriod;
      }
      if (other.CompanyName.Length != 0) {
        CompanyName = other.CompanyName;
      }
      if (other.corporationNo_ != null) {
        if (corporationNo_ == null || other.CorporationNo != "") {
          CorporationNo = other.CorporationNo;
        }
      }
      if (other.BusinessCode.Length != 0) {
        BusinessCode = other.BusinessCode;
      }
      if (other.president_ != null) {
        if (president_ == null || other.President != "") {
          President = other.President;
        }
      }
      if (other.BusinessItem.Length != 0) {
        BusinessItem = other.BusinessItem;
      }
      if (other.BusinessType.Length != 0) {
        BusinessType = other.BusinessType;
      }
      if (other.phone_ != null) {
        if (phone_ == null || other.Phone != "") {
          Phone = other.Phone;
        }
      }
      if (other.AccountPeriod != 0) {
        AccountPeriod = other.AccountPeriod;
      }
      if (other.SettlementYear != 0) {
        SettlementYear = other.SettlementYear;
      }
      if (other.SettlementFlag != 0) {
        SettlementFlag = other.SettlementFlag;
      }
      if (other.companyType_ != null) {
        if (companyType_ == null || other.CompanyType != 0) {
          CompanyType = other.CompanyType;
        }
      }
      if (other.TaxOfficeCode.Length != 0) {
        TaxOfficeCode = other.TaxOfficeCode;
      }
      if (other.lCNSNO_ != null) {
        if (lCNSNO_ == null || other.LCNSNO != "") {
          LCNSNO = other.LCNSNO;
        }
      }
      switch (other.OneofSetupDateCase) {
        case OneofSetupDateOneofCase.SetupDate:
          if (SetupDate == null) {
            SetupDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          SetupDate.MergeFrom(other.SetupDate);
          break;
      }

      switch (other.OneofOfficialSealCase) {
        case OneofOfficialSealOneofCase.OfficialSeal:
          OfficialSeal = other.OfficialSeal;
          break;
      }

      switch (other.OneofCompanyLogoCase) {
        case OneofCompanyLogoOneofCase.CompanyLogo:
          CompanyLogo = other.CompanyLogo;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BusinessClassCode = input.ReadSInt32();
            break;
          }
          case 18: {
            string value = _single_zipCode_codec.Read(input);
            if (zipCode_ == null || value != "") {
              ZipCode = value;
            }
            break;
          }
          case 24: {
            AccountUnit = input.ReadSInt32();
            break;
          }
          case 34: {
            Address = input.ReadString();
            break;
          }
          case 40: {
            FinancePeriod = input.ReadSInt32();
            break;
          }
          case 50: {
            CompanyName = input.ReadString();
            break;
          }
          case 58: {
            string value = _single_corporationNo_codec.Read(input);
            if (corporationNo_ == null || value != "") {
              CorporationNo = value;
            }
            break;
          }
          case 66: {
            BusinessCode = input.ReadString();
            break;
          }
          case 74: {
            string value = _single_president_codec.Read(input);
            if (president_ == null || value != "") {
              President = value;
            }
            break;
          }
          case 82: {
            BusinessItem = input.ReadString();
            break;
          }
          case 90: {
            BusinessType = input.ReadString();
            break;
          }
          case 98: {
            string value = _single_phone_codec.Read(input);
            if (phone_ == null || value != "") {
              Phone = value;
            }
            break;
          }
          case 104: {
            AccountPeriod = input.ReadSInt32();
            break;
          }
          case 112: {
            SettlementYear = input.ReadSInt32();
            break;
          }
          case 120: {
            SettlementFlag = input.ReadSInt32();
            break;
          }
          case 130: {
            int? value = _single_companyType_codec.Read(input);
            if (companyType_ == null || value != 0) {
              CompanyType = value;
            }
            break;
          }
          case 138: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofSetupDateCase_ == OneofSetupDateOneofCase.SetupDate) {
              subBuilder.MergeFrom(SetupDate);
            }
            input.ReadMessage(subBuilder);
            SetupDate = subBuilder;
            break;
          }
          case 146: {
            TaxOfficeCode = input.ReadString();
            break;
          }
          case 154: {
            OfficialSeal = input.ReadBytes();
            break;
          }
          case 162: {
            CompanyLogo = input.ReadBytes();
            break;
          }
          case 170: {
            string value = _single_lCNSNO_codec.Read(input);
            if (lCNSNO_ == null || value != "") {
              LCNSNO = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResponse : pb::IMessage<UpdateResponse> {
    private static readonly pb::MessageParser<UpdateResponse> _parser = new pb::MessageParser<UpdateResponse>(() => new UpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse(UpdateResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse Clone() {
      return new UpdateResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      businessClassCode_ = other.businessClassCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 1;
    private int businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClassCode != other.BusinessClassCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClassCode != 0) hash ^= BusinessClassCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClassCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(BusinessClassCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClassCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BusinessClassCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClassCode != 0) {
        BusinessClassCode = other.BusinessClassCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BusinessClassCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.BusinessClassProtos.BusinessClassReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
