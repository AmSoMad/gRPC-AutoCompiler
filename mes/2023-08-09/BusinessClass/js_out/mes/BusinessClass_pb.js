// source: mes/BusinessClass.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.BusinessClassSvc.BusinessClassResponse', null, global);
goog.exportSymbol('proto.BusinessClassSvc.BusinessClassSetResponse', null, global);
goog.exportSymbol('proto.BusinessClassSvc.DataSetResponse', null, global);
goog.exportSymbol('proto.BusinessClassSvc.DeleteRequest', null, global);
goog.exportSymbol('proto.BusinessClassSvc.DeleteResponse', null, global);
goog.exportSymbol('proto.BusinessClassSvc.GetByKeyRequest', null, global);
goog.exportSymbol('proto.BusinessClassSvc.GetForCompanyInformationRequest', null, global);
goog.exportSymbol('proto.BusinessClassSvc.GrpcDecimal', null, global);
goog.exportSymbol('proto.BusinessClassSvc.InsertRequest', null, global);
goog.exportSymbol('proto.BusinessClassSvc.InsertRequest.OneofcompanylogoCase', null, global);
goog.exportSymbol('proto.BusinessClassSvc.InsertRequest.OneofofficialsealCase', null, global);
goog.exportSymbol('proto.BusinessClassSvc.InsertRequest.OneofsetupdateCase', null, global);
goog.exportSymbol('proto.BusinessClassSvc.UpdateRequest', null, global);
goog.exportSymbol('proto.BusinessClassSvc.UpdateRequest.OneofcompanylogoCase', null, global);
goog.exportSymbol('proto.BusinessClassSvc.UpdateRequest.OneofofficialsealCase', null, global);
goog.exportSymbol('proto.BusinessClassSvc.UpdateRequest.OneofsetupdateCase', null, global);
goog.exportSymbol('proto.BusinessClassSvc.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.GrpcDecimal = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.GrpcDecimal, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.GrpcDecimal.displayName = 'proto.BusinessClassSvc.GrpcDecimal';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.BusinessClassResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.BusinessClassResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.BusinessClassResponse.displayName = 'proto.BusinessClassSvc.BusinessClassResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.BusinessClassSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.BusinessClassSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.BusinessClassSetResponse.displayName = 'proto.BusinessClassSvc.BusinessClassSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.DataSetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.DataSetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.DataSetResponse.displayName = 'proto.BusinessClassSvc.DataSetResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.GetForCompanyInformationRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.GetForCompanyInformationRequest.displayName = 'proto.BusinessClassSvc.GetForCompanyInformationRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.GetByKeyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.GetByKeyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.GetByKeyRequest.displayName = 'proto.BusinessClassSvc.GetByKeyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.InsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.BusinessClassSvc.InsertRequest.oneofGroups_);
};
goog.inherits(proto.BusinessClassSvc.InsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.InsertRequest.displayName = 'proto.BusinessClassSvc.InsertRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.BusinessClassSvc.UpdateRequest.oneofGroups_);
};
goog.inherits(proto.BusinessClassSvc.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.UpdateRequest.displayName = 'proto.BusinessClassSvc.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.UpdateResponse.displayName = 'proto.BusinessClassSvc.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.DeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.DeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.DeleteRequest.displayName = 'proto.BusinessClassSvc.DeleteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BusinessClassSvc.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BusinessClassSvc.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BusinessClassSvc.DeleteResponse.displayName = 'proto.BusinessClassSvc.DeleteResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.GrpcDecimal.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.GrpcDecimal.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.GrpcDecimal} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.GrpcDecimal.toObject = function(includeInstance, msg) {
  var f, obj = {
    units: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nanos: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.GrpcDecimal}
 */
proto.BusinessClassSvc.GrpcDecimal.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.GrpcDecimal;
  return proto.BusinessClassSvc.GrpcDecimal.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.GrpcDecimal} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.GrpcDecimal}
 */
proto.BusinessClassSvc.GrpcDecimal.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUnits(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSfixed32());
      msg.setNanos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.GrpcDecimal.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.GrpcDecimal.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.GrpcDecimal} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.GrpcDecimal.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnits();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getNanos();
  if (f !== 0) {
    writer.writeSfixed32(
      2,
      f
    );
  }
};


/**
 * optional int64 units = 1;
 * @return {number}
 */
proto.BusinessClassSvc.GrpcDecimal.prototype.getUnits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.GrpcDecimal} returns this
 */
proto.BusinessClassSvc.GrpcDecimal.prototype.setUnits = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sfixed32 nanos = 2;
 * @return {number}
 */
proto.BusinessClassSvc.GrpcDecimal.prototype.getNanos = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.GrpcDecimal} returns this
 */
proto.BusinessClassSvc.GrpcDecimal.prototype.setNanos = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.BusinessClassResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.BusinessClassResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.BusinessClassResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclass: msg.getBusinessclass_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.BusinessClassResponse}
 */
proto.BusinessClassSvc.BusinessClassResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.BusinessClassResponse;
  return proto.BusinessClassSvc.BusinessClassResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.BusinessClassResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.BusinessClassResponse}
 */
proto.BusinessClassSvc.BusinessClassResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBusinessclass(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.BusinessClassResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.BusinessClassResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.BusinessClassResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclass_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes businessClass = 1;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.getBusinessclass = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes businessClass = 1;
 * This is a type-conversion wrapper around `getBusinessclass()`
 * @return {string}
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.getBusinessclass_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBusinessclass()));
};


/**
 * optional bytes businessClass = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBusinessclass()`
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.getBusinessclass_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBusinessclass()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClassSvc.BusinessClassResponse} returns this
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.setBusinessclass = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.BusinessClassResponse} returns this
 */
proto.BusinessClassSvc.BusinessClassResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.BusinessClassSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.BusinessClassSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.BusinessClassSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclassset: msg.getBusinessclassset_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.BusinessClassSetResponse}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.BusinessClassSetResponse;
  return proto.BusinessClassSvc.BusinessClassSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.BusinessClassSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.BusinessClassSetResponse}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBusinessclassset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.BusinessClassSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.BusinessClassSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.BusinessClassSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclassset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes businessClassSet = 1;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.getBusinessclassset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes businessClassSet = 1;
 * This is a type-conversion wrapper around `getBusinessclassset()`
 * @return {string}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.getBusinessclassset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBusinessclassset()));
};


/**
 * optional bytes businessClassSet = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBusinessclassset()`
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.getBusinessclassset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBusinessclassset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClassSvc.BusinessClassSetResponse} returns this
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.setBusinessclassset = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.BusinessClassSetResponse} returns this
 */
proto.BusinessClassSvc.BusinessClassSetResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.DataSetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.DataSetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.DataSetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.DataSetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataset: msg.getDataset_asB64(),
    jsonstring: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.DataSetResponse}
 */
proto.BusinessClassSvc.DataSetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.DataSetResponse;
  return proto.BusinessClassSvc.DataSetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.DataSetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.DataSetResponse}
 */
proto.BusinessClassSvc.DataSetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDataset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setJsonstring(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.DataSetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.DataSetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.DataSetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.DataSetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataset_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getJsonstring();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes dataSet = 1;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClassSvc.DataSetResponse.prototype.getDataset = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes dataSet = 1;
 * This is a type-conversion wrapper around `getDataset()`
 * @return {string}
 */
proto.BusinessClassSvc.DataSetResponse.prototype.getDataset_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDataset()));
};


/**
 * optional bytes dataSet = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataset()`
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.DataSetResponse.prototype.getDataset_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDataset()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClassSvc.DataSetResponse} returns this
 */
proto.BusinessClassSvc.DataSetResponse.prototype.setDataset = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string jsonString = 2;
 * @return {string}
 */
proto.BusinessClassSvc.DataSetResponse.prototype.getJsonstring = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.DataSetResponse} returns this
 */
proto.BusinessClassSvc.DataSetResponse.prototype.setJsonstring = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.GetForCompanyInformationRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.GetForCompanyInformationRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    lcnsNo: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.GetForCompanyInformationRequest}
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.GetForCompanyInformationRequest;
  return proto.BusinessClassSvc.GetForCompanyInformationRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.GetForCompanyInformationRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.GetForCompanyInformationRequest}
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLcnsNo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.GetForCompanyInformationRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.GetForCompanyInformationRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLcnsNo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string lCNS_NO = 1;
 * @return {string}
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.prototype.getLcnsNo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.GetForCompanyInformationRequest} returns this
 */
proto.BusinessClassSvc.GetForCompanyInformationRequest.prototype.setLcnsNo = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.GetByKeyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.GetByKeyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.GetByKeyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.GetByKeyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.GetByKeyRequest}
 */
proto.BusinessClassSvc.GetByKeyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.GetByKeyRequest;
  return proto.BusinessClassSvc.GetByKeyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.GetByKeyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.GetByKeyRequest}
 */
proto.BusinessClassSvc.GetByKeyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.GetByKeyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.GetByKeyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.GetByKeyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.GetByKeyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClassSvc.GetByKeyRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.GetByKeyRequest} returns this
 */
proto.BusinessClassSvc.GetByKeyRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.BusinessClassSvc.InsertRequest.oneofGroups_ = [[17],[19],[20]];

/**
 * @enum {number}
 */
proto.BusinessClassSvc.InsertRequest.OneofsetupdateCase = {
  ONEOFSETUPDATE_NOT_SET: 0,
  SETUPDATE: 17
};

/**
 * @return {proto.BusinessClassSvc.InsertRequest.OneofsetupdateCase}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getOneofsetupdateCase = function() {
  return /** @type {proto.BusinessClassSvc.InsertRequest.OneofsetupdateCase} */(jspb.Message.computeOneofCase(this, proto.BusinessClassSvc.InsertRequest.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.BusinessClassSvc.InsertRequest.OneofofficialsealCase = {
  ONEOFOFFICIALSEAL_NOT_SET: 0,
  OFFICIALSEAL: 19
};

/**
 * @return {proto.BusinessClassSvc.InsertRequest.OneofofficialsealCase}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getOneofofficialsealCase = function() {
  return /** @type {proto.BusinessClassSvc.InsertRequest.OneofofficialsealCase} */(jspb.Message.computeOneofCase(this, proto.BusinessClassSvc.InsertRequest.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.BusinessClassSvc.InsertRequest.OneofcompanylogoCase = {
  ONEOFCOMPANYLOGO_NOT_SET: 0,
  COMPANYLOGO: 20
};

/**
 * @return {proto.BusinessClassSvc.InsertRequest.OneofcompanylogoCase}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getOneofcompanylogoCase = function() {
  return /** @type {proto.BusinessClassSvc.InsertRequest.OneofcompanylogoCase} */(jspb.Message.computeOneofCase(this, proto.BusinessClassSvc.InsertRequest.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.InsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.InsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.InsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.InsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    zipcode: (f = msg.getZipcode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    accountunit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    financeperiod: jspb.Message.getFieldWithDefault(msg, 5, 0),
    companyname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    corporationno: (f = msg.getCorporationno()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    businesscode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    president: (f = msg.getPresident()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    businessitem: jspb.Message.getFieldWithDefault(msg, 10, ""),
    businesstype: jspb.Message.getFieldWithDefault(msg, 11, ""),
    phone: (f = msg.getPhone()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    accountperiod: jspb.Message.getFieldWithDefault(msg, 13, 0),
    settlementyear: jspb.Message.getFieldWithDefault(msg, 14, 0),
    settlementflag: jspb.Message.getFieldWithDefault(msg, 15, 0),
    companytype: (f = msg.getCompanytype()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    setupdate: (f = msg.getSetupdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    taxofficecode: jspb.Message.getFieldWithDefault(msg, 18, ""),
    officialseal: msg.getOfficialseal_asB64(),
    companylogo: msg.getCompanylogo_asB64(),
    lcnsno: (f = msg.getLcnsno()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.InsertRequest}
 */
proto.BusinessClassSvc.InsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.InsertRequest;
  return proto.BusinessClassSvc.InsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.InsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.InsertRequest}
 */
proto.BusinessClassSvc.InsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setZipcode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setAccountunit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setFinanceperiod(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCorporationno(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesscode(value);
      break;
    case 9:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPresident(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessitem(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesstype(value);
      break;
    case 12:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPhone(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setAccountperiod(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSettlementyear(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSettlementflag(value);
      break;
    case 16:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setCompanytype(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSetupdate(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxofficecode(value);
      break;
    case 19:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfficialseal(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCompanylogo(value);
      break;
    case 21:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setLcnsno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.InsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.InsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.InsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.InsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getZipcode();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getAccountunit();
  if (f !== 0) {
    writer.writeSint32(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFinanceperiod();
  if (f !== 0) {
    writer.writeSint32(
      5,
      f
    );
  }
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCorporationno();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getBusinesscode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPresident();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getBusinessitem();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBusinesstype();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPhone();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getAccountperiod();
  if (f !== 0) {
    writer.writeSint32(
      13,
      f
    );
  }
  f = message.getSettlementyear();
  if (f !== 0) {
    writer.writeSint32(
      14,
      f
    );
  }
  f = message.getSettlementflag();
  if (f !== 0) {
    writer.writeSint32(
      15,
      f
    );
  }
  f = message.getCompanytype();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getSetupdate();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTaxofficecode();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBytes(
      19,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBytes(
      20,
      f
    );
  }
  f = message.getLcnsno();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue zipCode = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getZipcode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
*/
proto.BusinessClassSvc.InsertRequest.prototype.setZipcode = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearZipcode = function() {
  return this.setZipcode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasZipcode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sint32 accountUnit = 3;
 * @return {number}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getAccountunit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setAccountunit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional sint32 financePeriod = 5;
 * @return {number}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getFinanceperiod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setFinanceperiod = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string companyName = 6;
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.StringValue corporationNo = 7;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getCorporationno = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 7));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
*/
proto.BusinessClassSvc.InsertRequest.prototype.setCorporationno = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearCorporationno = function() {
  return this.setCorporationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasCorporationno = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string businessCode = 8;
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getBusinesscode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setBusinesscode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional google.protobuf.StringValue president = 9;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getPresident = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 9));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
*/
proto.BusinessClassSvc.InsertRequest.prototype.setPresident = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearPresident = function() {
  return this.setPresident(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasPresident = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string businessItem = 10;
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getBusinessitem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setBusinessitem = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string businessType = 11;
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getBusinesstype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setBusinesstype = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.StringValue phone = 12;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getPhone = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 12));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
*/
proto.BusinessClassSvc.InsertRequest.prototype.setPhone = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearPhone = function() {
  return this.setPhone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional sint32 accountPeriod = 13;
 * @return {number}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getAccountperiod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setAccountperiod = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional sint32 settlementYear = 14;
 * @return {number}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getSettlementyear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setSettlementyear = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional sint32 settlementFlag = 15;
 * @return {number}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getSettlementflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setSettlementflag = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional google.protobuf.Int32Value companyType = 16;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getCompanytype = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 16));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
*/
proto.BusinessClassSvc.InsertRequest.prototype.setCompanytype = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearCompanytype = function() {
  return this.setCompanytype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasCompanytype = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional google.protobuf.Timestamp setupDate = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getSetupdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
*/
proto.BusinessClassSvc.InsertRequest.prototype.setSetupdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.BusinessClassSvc.InsertRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearSetupdate = function() {
  return this.setSetupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasSetupdate = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string taxOfficeCode = 18;
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getTaxofficecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setTaxofficecode = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bytes officialSeal = 19;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getOfficialseal = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * optional bytes officialSeal = 19;
 * This is a type-conversion wrapper around `getOfficialseal()`
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getOfficialseal_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfficialseal()));
};


/**
 * optional bytes officialSeal = 19;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfficialseal()`
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getOfficialseal_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfficialseal()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setOfficialseal = function(value) {
  return jspb.Message.setOneofField(this, 19, proto.BusinessClassSvc.InsertRequest.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearOfficialseal = function() {
  return jspb.Message.setOneofField(this, 19, proto.BusinessClassSvc.InsertRequest.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasOfficialseal = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bytes companyLogo = 20;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getCompanylogo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * optional bytes companyLogo = 20;
 * This is a type-conversion wrapper around `getCompanylogo()`
 * @return {string}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getCompanylogo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCompanylogo()));
};


/**
 * optional bytes companyLogo = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCompanylogo()`
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getCompanylogo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCompanylogo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.setCompanylogo = function(value) {
  return jspb.Message.setOneofField(this, 20, proto.BusinessClassSvc.InsertRequest.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearCompanylogo = function() {
  return jspb.Message.setOneofField(this, 20, proto.BusinessClassSvc.InsertRequest.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasCompanylogo = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional google.protobuf.StringValue lCNSNO = 21;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.InsertRequest.prototype.getLcnsno = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 21));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
*/
proto.BusinessClassSvc.InsertRequest.prototype.setLcnsno = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.InsertRequest} returns this
 */
proto.BusinessClassSvc.InsertRequest.prototype.clearLcnsno = function() {
  return this.setLcnsno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.InsertRequest.prototype.hasLcnsno = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.BusinessClassSvc.UpdateRequest.oneofGroups_ = [[17],[19],[20]];

/**
 * @enum {number}
 */
proto.BusinessClassSvc.UpdateRequest.OneofsetupdateCase = {
  ONEOFSETUPDATE_NOT_SET: 0,
  SETUPDATE: 17
};

/**
 * @return {proto.BusinessClassSvc.UpdateRequest.OneofsetupdateCase}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getOneofsetupdateCase = function() {
  return /** @type {proto.BusinessClassSvc.UpdateRequest.OneofsetupdateCase} */(jspb.Message.computeOneofCase(this, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.BusinessClassSvc.UpdateRequest.OneofofficialsealCase = {
  ONEOFOFFICIALSEAL_NOT_SET: 0,
  OFFICIALSEAL: 19
};

/**
 * @return {proto.BusinessClassSvc.UpdateRequest.OneofofficialsealCase}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getOneofofficialsealCase = function() {
  return /** @type {proto.BusinessClassSvc.UpdateRequest.OneofofficialsealCase} */(jspb.Message.computeOneofCase(this, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[1]));
};

/**
 * @enum {number}
 */
proto.BusinessClassSvc.UpdateRequest.OneofcompanylogoCase = {
  ONEOFCOMPANYLOGO_NOT_SET: 0,
  COMPANYLOGO: 20
};

/**
 * @return {proto.BusinessClassSvc.UpdateRequest.OneofcompanylogoCase}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getOneofcompanylogoCase = function() {
  return /** @type {proto.BusinessClassSvc.UpdateRequest.OneofcompanylogoCase} */(jspb.Message.computeOneofCase(this, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[2]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0),
    zipcode: (f = msg.getZipcode()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    accountunit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    address: jspb.Message.getFieldWithDefault(msg, 4, ""),
    financeperiod: jspb.Message.getFieldWithDefault(msg, 5, 0),
    companyname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    corporationno: (f = msg.getCorporationno()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    businesscode: jspb.Message.getFieldWithDefault(msg, 8, ""),
    president: (f = msg.getPresident()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    businessitem: jspb.Message.getFieldWithDefault(msg, 10, ""),
    businesstype: jspb.Message.getFieldWithDefault(msg, 11, ""),
    phone: (f = msg.getPhone()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f),
    accountperiod: jspb.Message.getFieldWithDefault(msg, 13, 0),
    settlementyear: jspb.Message.getFieldWithDefault(msg, 14, 0),
    settlementflag: jspb.Message.getFieldWithDefault(msg, 15, 0),
    companytype: (f = msg.getCompanytype()) && google_protobuf_wrappers_pb.Int32Value.toObject(includeInstance, f),
    setupdate: (f = msg.getSetupdate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    taxofficecode: jspb.Message.getFieldWithDefault(msg, 18, ""),
    officialseal: msg.getOfficialseal_asB64(),
    companylogo: msg.getCompanylogo_asB64(),
    lcnsno: (f = msg.getLcnsno()) && google_protobuf_wrappers_pb.StringValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.UpdateRequest}
 */
proto.BusinessClassSvc.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.UpdateRequest;
  return proto.BusinessClassSvc.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.UpdateRequest}
 */
proto.BusinessClassSvc.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    case 2:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setZipcode(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setAccountunit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setFinanceperiod(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompanyname(value);
      break;
    case 7:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setCorporationno(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesscode(value);
      break;
    case 9:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPresident(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinessitem(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setBusinesstype(value);
      break;
    case 12:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setPhone(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setAccountperiod(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSettlementyear(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setSettlementflag(value);
      break;
    case 16:
      var value = new google_protobuf_wrappers_pb.Int32Value;
      reader.readMessage(value,google_protobuf_wrappers_pb.Int32Value.deserializeBinaryFromReader);
      msg.setCompanytype(value);
      break;
    case 17:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setSetupdate(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setTaxofficecode(value);
      break;
    case 19:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setOfficialseal(value);
      break;
    case 20:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCompanylogo(value);
      break;
    case 21:
      var value = new google_protobuf_wrappers_pb.StringValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.StringValue.deserializeBinaryFromReader);
      msg.setLcnsno(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getZipcode();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getAccountunit();
  if (f !== 0) {
    writer.writeSint32(
      3,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFinanceperiod();
  if (f !== 0) {
    writer.writeSint32(
      5,
      f
    );
  }
  f = message.getCompanyname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCorporationno();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getBusinesscode();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPresident();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getBusinessitem();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getBusinesstype();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getPhone();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
  f = message.getAccountperiod();
  if (f !== 0) {
    writer.writeSint32(
      13,
      f
    );
  }
  f = message.getSettlementyear();
  if (f !== 0) {
    writer.writeSint32(
      14,
      f
    );
  }
  f = message.getSettlementflag();
  if (f !== 0) {
    writer.writeSint32(
      15,
      f
    );
  }
  f = message.getCompanytype();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      google_protobuf_wrappers_pb.Int32Value.serializeBinaryToWriter
    );
  }
  f = message.getSetupdate();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getTaxofficecode();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeBytes(
      19,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeBytes(
      20,
      f
    );
  }
  f = message.getLcnsno();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_wrappers_pb.StringValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional google.protobuf.StringValue zipCode = 2;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getZipcode = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 2));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
*/
proto.BusinessClassSvc.UpdateRequest.prototype.setZipcode = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearZipcode = function() {
  return this.setZipcode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasZipcode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional sint32 accountUnit = 3;
 * @return {number}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getAccountunit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setAccountunit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string address = 4;
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional sint32 financePeriod = 5;
 * @return {number}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getFinanceperiod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setFinanceperiod = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string companyName = 6;
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getCompanyname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setCompanyname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional google.protobuf.StringValue corporationNo = 7;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getCorporationno = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 7));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
*/
proto.BusinessClassSvc.UpdateRequest.prototype.setCorporationno = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearCorporationno = function() {
  return this.setCorporationno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasCorporationno = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string businessCode = 8;
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getBusinesscode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setBusinesscode = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional google.protobuf.StringValue president = 9;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getPresident = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 9));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
*/
proto.BusinessClassSvc.UpdateRequest.prototype.setPresident = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearPresident = function() {
  return this.setPresident(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasPresident = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string businessItem = 10;
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getBusinessitem = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setBusinessitem = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string businessType = 11;
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getBusinesstype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setBusinesstype = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional google.protobuf.StringValue phone = 12;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getPhone = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 12));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
*/
proto.BusinessClassSvc.UpdateRequest.prototype.setPhone = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearPhone = function() {
  return this.setPhone(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasPhone = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional sint32 accountPeriod = 13;
 * @return {number}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getAccountperiod = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setAccountperiod = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional sint32 settlementYear = 14;
 * @return {number}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getSettlementyear = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setSettlementyear = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional sint32 settlementFlag = 15;
 * @return {number}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getSettlementflag = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setSettlementflag = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional google.protobuf.Int32Value companyType = 16;
 * @return {?proto.google.protobuf.Int32Value}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getCompanytype = function() {
  return /** @type{?proto.google.protobuf.Int32Value} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.Int32Value, 16));
};


/**
 * @param {?proto.google.protobuf.Int32Value|undefined} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
*/
proto.BusinessClassSvc.UpdateRequest.prototype.setCompanytype = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearCompanytype = function() {
  return this.setCompanytype(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasCompanytype = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional google.protobuf.Timestamp setupDate = 17;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getSetupdate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 17));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
*/
proto.BusinessClassSvc.UpdateRequest.prototype.setSetupdate = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearSetupdate = function() {
  return this.setSetupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasSetupdate = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string taxOfficeCode = 18;
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getTaxofficecode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setTaxofficecode = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional bytes officialSeal = 19;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getOfficialseal = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * optional bytes officialSeal = 19;
 * This is a type-conversion wrapper around `getOfficialseal()`
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getOfficialseal_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getOfficialseal()));
};


/**
 * optional bytes officialSeal = 19;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getOfficialseal()`
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getOfficialseal_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getOfficialseal()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setOfficialseal = function(value) {
  return jspb.Message.setOneofField(this, 19, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[1], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearOfficialseal = function() {
  return jspb.Message.setOneofField(this, 19, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[1], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasOfficialseal = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional bytes companyLogo = 20;
 * @return {!(string|Uint8Array)}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getCompanylogo = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * optional bytes companyLogo = 20;
 * This is a type-conversion wrapper around `getCompanylogo()`
 * @return {string}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getCompanylogo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCompanylogo()));
};


/**
 * optional bytes companyLogo = 20;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCompanylogo()`
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getCompanylogo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCompanylogo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.setCompanylogo = function(value) {
  return jspb.Message.setOneofField(this, 20, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[2], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearCompanylogo = function() {
  return jspb.Message.setOneofField(this, 20, proto.BusinessClassSvc.UpdateRequest.oneofGroups_[2], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasCompanylogo = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional google.protobuf.StringValue lCNSNO = 21;
 * @return {?proto.google.protobuf.StringValue}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.getLcnsno = function() {
  return /** @type{?proto.google.protobuf.StringValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.StringValue, 21));
};


/**
 * @param {?proto.google.protobuf.StringValue|undefined} value
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
*/
proto.BusinessClassSvc.UpdateRequest.prototype.setLcnsno = function(value) {
  return jspb.Message.setWrapperField(this, 21, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.BusinessClassSvc.UpdateRequest} returns this
 */
proto.BusinessClassSvc.UpdateRequest.prototype.clearLcnsno = function() {
  return this.setLcnsno(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.BusinessClassSvc.UpdateRequest.prototype.hasLcnsno = function() {
  return jspb.Message.getField(this, 21) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.UpdateResponse}
 */
proto.BusinessClassSvc.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.UpdateResponse;
  return proto.BusinessClassSvc.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.UpdateResponse}
 */
proto.BusinessClassSvc.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.BusinessClassSvc.UpdateResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.UpdateResponse} returns this
 */
proto.BusinessClassSvc.UpdateResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.DeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.DeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.DeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.DeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    businessclasscode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.DeleteRequest}
 */
proto.BusinessClassSvc.DeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.DeleteRequest;
  return proto.BusinessClassSvc.DeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.DeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.DeleteRequest}
 */
proto.BusinessClassSvc.DeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setBusinessclasscode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.DeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.DeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.DeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.DeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBusinessclasscode();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
};


/**
 * optional sint32 businessClassCode = 1;
 * @return {number}
 */
proto.BusinessClassSvc.DeleteRequest.prototype.getBusinessclasscode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.DeleteRequest} returns this
 */
proto.BusinessClassSvc.DeleteRequest.prototype.setBusinessclasscode = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BusinessClassSvc.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.BusinessClassSvc.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BusinessClassSvc.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BusinessClassSvc.DeleteResponse}
 */
proto.BusinessClassSvc.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BusinessClassSvc.DeleteResponse;
  return proto.BusinessClassSvc.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BusinessClassSvc.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BusinessClassSvc.DeleteResponse}
 */
proto.BusinessClassSvc.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BusinessClassSvc.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BusinessClassSvc.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BusinessClassSvc.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BusinessClassSvc.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 count = 1;
 * @return {number}
 */
proto.BusinessClassSvc.DeleteResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.BusinessClassSvc.DeleteResponse} returns this
 */
proto.BusinessClassSvc.DeleteResponse.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


goog.object.extend(exports, proto.BusinessClassSvc);
