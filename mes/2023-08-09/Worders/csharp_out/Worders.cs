// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mes/Worders.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HaccpManager.WordersProtos {

  /// <summary>Holder for reflection information generated from mes/Worders.proto</summary>
  public static partial class WordersReflection {

    #region Descriptor
    /// <summary>File descriptor for mes/Worders.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WordersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFtZXMvV29yZGVycy5wcm90bxIKV29yZGVyc1N2YxofZ29vZ2xlL3Byb3Rv",
            "YnVmL3RpbWVzdGFtcC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9u",
            "LnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aG2dvb2ds",
            "ZS9wcm90b2J1Zi9lbXB0eS5wcm90byIrCgtHcnBjRGVjaW1hbBINCgV1bml0",
            "cxgBIAEoAxINCgVuYW5vcxgCIAEoDyI2Cg9Xb3JkZXJzUmVzcG9uc2USDwoH",
            "d29yZGVycxgBIAEoDBISCgpqc29uU3RyaW5nGAIgASgJIjwKEldvcmRlcnNT",
            "ZXRSZXNwb25zZRISCgp3b3JkZXJzU2V0GAEgASgMEhIKCmpzb25TdHJpbmcY",
            "AiABKAkiNgoPRGF0YVNldFJlc3BvbnNlEg8KB2RhdGFTZXQYASABKAwSEgoK",
            "anNvblN0cmluZxgCIAEoCSI8Ch9HZXRGb3JCdXNpbmVzc0NsYXNzX1NhbGVS",
            "ZXF1ZXN0EhkKEWJ1c2luZXNzQ2xhc3NDb2RlGAEgASgRIi4KFkdldEZvckN1",
            "c3RvbWVyc1JlcXVlc3QSFAoMY3VzdG9tZXJDb2RlGAEgASgJIioKFEdldEZv",
            "cldvcmtlcnNSZXF1ZXN0EhIKCndvcmtlckNvZGUYASABKAkiJAoTR2V0Rm9y",
            "Um91dGVzUmVxdWVzdBINCgVyb3V0ZRgBIAEoCSInCg9HZXRCeUtleVJlcXVl",
            "c3QSFAoMd29ya3NPcmRlck5vGAEgASgJIqUJCg1JbnNlcnRSZXF1ZXN0EhQK",
            "DHdvcmtzT3JkZXJObxgBIAEoCRIQCghzZXJpYWxObxgCIAEoERIQCghwcmlv",
            "cml0eRgDIAEoERI1ChFvcmlnaW5hbFN0YXJ0RGF0ZRgEIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASMwoPb3JpZ2luYWxEdWVEYXRlGAUgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBI1Cg9hY3R1YWxTdGFydERh",
            "dGUYBiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wSAASMwoNYWN0",
            "dWFsRHVlRGF0ZRgHIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBI",
            "ARIwCg9zdGRNYXRlcmlhbENvc3QYCCABKAsyFy5Xb3JkZXJzU3ZjLkdycGNE",
            "ZWNpbWFsEjAKD2FjdE1hdGVyaWFsQ29zdBgJIAEoCzIXLldvcmRlcnNTdmMu",
            "R3JwY0RlY2ltYWwSKwoKc3RkTGFiQ29zdBgKIAEoCzIXLldvcmRlcnNTdmMu",
            "R3JwY0RlY2ltYWwSKwoKYWN0TGFiQ29zdBgLIAEoCzIXLldvcmRlcnNTdmMu",
            "R3JwY0RlY2ltYWwSLQoMc3RkU2V0dXBDb3N0GAwgASgLMhcuV29yZGVyc1N2",
            "Yy5HcnBjRGVjaW1hbBItCgxhY3RTZXR1cENvc3QYDSABKAsyFy5Xb3JkZXJz",
            "U3ZjLkdycGNEZWNpbWFsEjAKD3N0ZE92ZXJoZWFkQ29zdBgOIAEoCzIXLldv",
            "cmRlcnNTdmMuR3JwY0RlY2ltYWwSMAoPYWN0T3ZlcmhlYWRDb3N0GA8gASgL",
            "MhcuV29yZGVyc1N2Yy5HcnBjRGVjaW1hbBIVCg1jb21wbGV0ZWRGbGFnGBAg",
            "ASgJEhIKCmlzc3VlZEZsYWcYESABKBESGAoQZGlyZWN0Q2hhcmdlRmxhZxgS",
            "IAEoERIUCgxjdXJyZW50S2l0Tm8YEyABKBESFgoOcmVwcmludFJlcUZsYWcY",
            "FCABKBESFwoPb3JkZXJTdGF0dXNGbGFnGBUgASgREjYKEWJ1c2luZXNzQ2xh",
            "c3NDb2RlGBYgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMyVmFsdWUSOgoU",
            "b3JpZ2luYWxXb3Jrc09yZGVyTm8YFyABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSLQoHcmVtYXJrcxgYIAEoCzIcLmdvb2dsZS5wcm90b2J1",
            "Zi5TdHJpbmdWYWx1ZRIyCgxjdXN0b21lckNvZGUYGSABKAsyHC5nb29nbGUu",
            "cHJvdG9idWYuU3RyaW5nVmFsdWUSEgoKd09yZGVyVHlwZRgaIAEoERIwCgp3",
            "b3JrZXJDb2RlGBsgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "EisKBXJvdXRlGBwgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVl",
            "QhYKFG9uZW9mQWN0dWFsU3RhcnREYXRlQhQKEm9uZW9mQWN0dWFsRHVlRGF0",
            "ZSKlCQoNVXBkYXRlUmVxdWVzdBIUCgx3b3Jrc09yZGVyTm8YASABKAkSEAoI",
            "c2VyaWFsTm8YAiABKBESEAoIcHJpb3JpdHkYAyABKBESNQoRb3JpZ2luYWxT",
            "dGFydERhdGUYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEjMK",
            "D29yaWdpbmFsRHVlRGF0ZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASNQoPYWN0dWFsU3RhcnREYXRlGAYgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcEgAEjMKDWFjdHVhbER1ZURhdGUYByABKAsyGi5nb29n",
            "bGUucHJvdG9idWYuVGltZXN0YW1wSAESMAoPc3RkTWF0ZXJpYWxDb3N0GAgg",
            "ASgLMhcuV29yZGVyc1N2Yy5HcnBjRGVjaW1hbBIwCg9hY3RNYXRlcmlhbENv",
            "c3QYCSABKAsyFy5Xb3JkZXJzU3ZjLkdycGNEZWNpbWFsEisKCnN0ZExhYkNv",
            "c3QYCiABKAsyFy5Xb3JkZXJzU3ZjLkdycGNEZWNpbWFsEisKCmFjdExhYkNv",
            "c3QYCyABKAsyFy5Xb3JkZXJzU3ZjLkdycGNEZWNpbWFsEi0KDHN0ZFNldHVw",
            "Q29zdBgMIAEoCzIXLldvcmRlcnNTdmMuR3JwY0RlY2ltYWwSLQoMYWN0U2V0",
            "dXBDb3N0GA0gASgLMhcuV29yZGVyc1N2Yy5HcnBjRGVjaW1hbBIwCg9zdGRP",
            "dmVyaGVhZENvc3QYDiABKAsyFy5Xb3JkZXJzU3ZjLkdycGNEZWNpbWFsEjAK",
            "D2FjdE92ZXJoZWFkQ29zdBgPIAEoCzIXLldvcmRlcnNTdmMuR3JwY0RlY2lt",
            "YWwSFQoNY29tcGxldGVkRmxhZxgQIAEoCRISCgppc3N1ZWRGbGFnGBEgASgR",
            "EhgKEGRpcmVjdENoYXJnZUZsYWcYEiABKBESFAoMY3VycmVudEtpdE5vGBMg",
            "ASgREhYKDnJlcHJpbnRSZXFGbGFnGBQgASgREhcKD29yZGVyU3RhdHVzRmxh",
            "ZxgVIAEoERI2ChFidXNpbmVzc0NsYXNzQ29kZRgWIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQzMlZhbHVlEjoKFG9yaWdpbmFsV29ya3NPcmRlck5vGBcg",
            "ASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEi0KB3JlbWFya3MY",
            "GCABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSMgoMY3VzdG9t",
            "ZXJDb2RlGBkgASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEhIK",
            "CndPcmRlclR5cGUYGiABKBESMAoKd29ya2VyQ29kZRgbIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIrCgVyb3V0ZRgcIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZUIWChRvbmVvZkFjdHVhbFN0YXJ0RGF0",
            "ZUIUChJvbmVvZkFjdHVhbER1ZURhdGUiHwoOVXBkYXRlUmVzcG9uc2USDQoF",
            "Y291bnQYASABKAUiJQoNRGVsZXRlUmVxdWVzdBIUCgx3b3Jrc09yZGVyTm8Y",
            "ASABKAkiHwoORGVsZXRlUmVzcG9uc2USDQoFY291bnQYASABKAUygwoKB1dv",
            "cmRlcnMSZwoYR2V0Rm9yQnVzaW5lc3NDbGFzc19TYWxlEisuV29yZGVyc1N2",
            "Yy5HZXRGb3JCdXNpbmVzc0NsYXNzX1NhbGVSZXF1ZXN0Gh4uV29yZGVyc1N2",
            "Yy5Xb3JkZXJzU2V0UmVzcG9uc2USawocR2V0Rm9yQnVzaW5lc3NDbGFzc19T",
            "YWxlSnNvbhIrLldvcmRlcnNTdmMuR2V0Rm9yQnVzaW5lc3NDbGFzc19TYWxl",
            "UmVxdWVzdBoeLldvcmRlcnNTdmMuV29yZGVyc1NldFJlc3BvbnNlElUKD0dl",
            "dEZvckN1c3RvbWVycxIiLldvcmRlcnNTdmMuR2V0Rm9yQ3VzdG9tZXJzUmVx",
            "dWVzdBoeLldvcmRlcnNTdmMuV29yZGVyc1NldFJlc3BvbnNlElkKE0dldEZv",
            "ckN1c3RvbWVyc0pzb24SIi5Xb3JkZXJzU3ZjLkdldEZvckN1c3RvbWVyc1Jl",
            "cXVlc3QaHi5Xb3JkZXJzU3ZjLldvcmRlcnNTZXRSZXNwb25zZRJRCg1HZXRG",
            "b3JXb3JrZXJzEiAuV29yZGVyc1N2Yy5HZXRGb3JXb3JrZXJzUmVxdWVzdBoe",
            "LldvcmRlcnNTdmMuV29yZGVyc1NldFJlc3BvbnNlElUKEUdldEZvcldvcmtl",
            "cnNKc29uEiAuV29yZGVyc1N2Yy5HZXRGb3JXb3JrZXJzUmVxdWVzdBoeLldv",
            "cmRlcnNTdmMuV29yZGVyc1NldFJlc3BvbnNlEk8KDEdldEZvclJvdXRlcxIf",
            "LldvcmRlcnNTdmMuR2V0Rm9yUm91dGVzUmVxdWVzdBoeLldvcmRlcnNTdmMu",
            "V29yZGVyc1NldFJlc3BvbnNlElMKEEdldEZvclJvdXRlc0pzb24SHy5Xb3Jk",
            "ZXJzU3ZjLkdldEZvclJvdXRlc1JlcXVlc3QaHi5Xb3JkZXJzU3ZjLldvcmRl",
            "cnNTZXRSZXNwb25zZRJECghHZXRCeUtleRIbLldvcmRlcnNTdmMuR2V0QnlL",
            "ZXlSZXF1ZXN0GhsuV29yZGVyc1N2Yy5Xb3JkZXJzUmVzcG9uc2USSAoMR2V0",
            "QnlLZXlKc29uEhsuV29yZGVyc1N2Yy5HZXRCeUtleVJlcXVlc3QaGy5Xb3Jk",
            "ZXJzU3ZjLldvcmRlcnNSZXNwb25zZRJACgZHZXRBbGwSFi5nb29nbGUucHJv",
            "dG9idWYuRW1wdHkaHi5Xb3JkZXJzU3ZjLldvcmRlcnNTZXRSZXNwb25zZRJE",
            "CgpHZXRBbGxKc29uEhYuZ29vZ2xlLnByb3RvYnVmLkVtcHR5Gh4uV29yZGVy",
            "c1N2Yy5Xb3JkZXJzU2V0UmVzcG9uc2USQAoGSW5zZXJ0EhkuV29yZGVyc1N2",
            "Yy5JbnNlcnRSZXF1ZXN0GhsuV29yZGVyc1N2Yy5Xb3JkZXJzUmVzcG9uc2US",
            "RAoKSW5zZXJ0SnNvbhIZLldvcmRlcnNTdmMuSW5zZXJ0UmVxdWVzdBobLldv",
            "cmRlcnNTdmMuV29yZGVyc1Jlc3BvbnNlEj8KBlVwZGF0ZRIZLldvcmRlcnNT",
            "dmMuVXBkYXRlUmVxdWVzdBoaLldvcmRlcnNTdmMuVXBkYXRlUmVzcG9uc2US",
            "PwoGRGVsZXRlEhkuV29yZGVyc1N2Yy5EZWxldGVSZXF1ZXN0GhouV29yZGVy",
            "c1N2Yy5EZWxldGVSZXNwb25zZUIdqgIaSGFjY3BNYW5hZ2VyLldvcmRlcnNQ",
            "cm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.GrpcDecimal), global::HaccpManager.WordersProtos.GrpcDecimal.Parser, new[]{ "Units", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.WordersResponse), global::HaccpManager.WordersProtos.WordersResponse.Parser, new[]{ "Worders", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.WordersSetResponse), global::HaccpManager.WordersProtos.WordersSetResponse.Parser, new[]{ "WordersSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.DataSetResponse), global::HaccpManager.WordersProtos.DataSetResponse.Parser, new[]{ "DataSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.GetForBusinessClass_SaleRequest), global::HaccpManager.WordersProtos.GetForBusinessClass_SaleRequest.Parser, new[]{ "BusinessClassCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.GetForCustomersRequest), global::HaccpManager.WordersProtos.GetForCustomersRequest.Parser, new[]{ "CustomerCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.GetForWorkersRequest), global::HaccpManager.WordersProtos.GetForWorkersRequest.Parser, new[]{ "WorkerCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.GetForRoutesRequest), global::HaccpManager.WordersProtos.GetForRoutesRequest.Parser, new[]{ "Route" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.GetByKeyRequest), global::HaccpManager.WordersProtos.GetByKeyRequest.Parser, new[]{ "WorksOrderNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.InsertRequest), global::HaccpManager.WordersProtos.InsertRequest.Parser, new[]{ "WorksOrderNo", "SerialNo", "Priority", "OriginalStartDate", "OriginalDueDate", "ActualStartDate", "ActualDueDate", "StdMaterialCost", "ActMaterialCost", "StdLabCost", "ActLabCost", "StdSetupCost", "ActSetupCost", "StdOverheadCost", "ActOverheadCost", "CompletedFlag", "IssuedFlag", "DirectChargeFlag", "CurrentKitNo", "ReprintReqFlag", "OrderStatusFlag", "BusinessClassCode", "OriginalWorksOrderNo", "Remarks", "CustomerCode", "WOrderType", "WorkerCode", "Route" }, new[]{ "OneofActualStartDate", "OneofActualDueDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.UpdateRequest), global::HaccpManager.WordersProtos.UpdateRequest.Parser, new[]{ "WorksOrderNo", "SerialNo", "Priority", "OriginalStartDate", "OriginalDueDate", "ActualStartDate", "ActualDueDate", "StdMaterialCost", "ActMaterialCost", "StdLabCost", "ActLabCost", "StdSetupCost", "ActSetupCost", "StdOverheadCost", "ActOverheadCost", "CompletedFlag", "IssuedFlag", "DirectChargeFlag", "CurrentKitNo", "ReprintReqFlag", "OrderStatusFlag", "BusinessClassCode", "OriginalWorksOrderNo", "Remarks", "CustomerCode", "WOrderType", "WorkerCode", "Route" }, new[]{ "OneofActualStartDate", "OneofActualDueDate" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.UpdateResponse), global::HaccpManager.WordersProtos.UpdateResponse.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.DeleteRequest), global::HaccpManager.WordersProtos.DeleteRequest.Parser, new[]{ "WorksOrderNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.WordersProtos.DeleteResponse), global::HaccpManager.WordersProtos.DeleteResponse.Parser, new[]{ "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcDecimal : pb::IMessage<GrpcDecimal> {
    private static readonly pb::MessageParser<GrpcDecimal> _parser = new pb::MessageParser<GrpcDecimal>(() => new GrpcDecimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDecimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal(GrpcDecimal other) : this() {
      units_ = other.units_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal Clone() {
      return new GrpcDecimal(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private long units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDecimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDecimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0L) hash ^= Units.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Units);
      }
      if (Nanos != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Units);
      }
      if (Nanos != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDecimal other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0L) {
        Units = other.Units;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Units = input.ReadInt64();
            break;
          }
          case 21: {
            Nanos = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WordersResponse : pb::IMessage<WordersResponse> {
    private static readonly pb::MessageParser<WordersResponse> _parser = new pb::MessageParser<WordersResponse>(() => new WordersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WordersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WordersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WordersResponse(WordersResponse other) : this() {
      worders_ = other.worders_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WordersResponse Clone() {
      return new WordersResponse(this);
    }

    /// <summary>Field number for the "worders" field.</summary>
    public const int WordersFieldNumber = 1;
    private pb::ByteString worders_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Worders {
      get { return worders_; }
      set {
        worders_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WordersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WordersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Worders != other.Worders) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Worders.Length != 0) hash ^= Worders.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Worders.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Worders);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Worders.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Worders);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WordersResponse other) {
      if (other == null) {
        return;
      }
      if (other.Worders.Length != 0) {
        Worders = other.Worders;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Worders = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class WordersSetResponse : pb::IMessage<WordersSetResponse> {
    private static readonly pb::MessageParser<WordersSetResponse> _parser = new pb::MessageParser<WordersSetResponse>(() => new WordersSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WordersSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WordersSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WordersSetResponse(WordersSetResponse other) : this() {
      wordersSet_ = other.wordersSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WordersSetResponse Clone() {
      return new WordersSetResponse(this);
    }

    /// <summary>Field number for the "wordersSet" field.</summary>
    public const int WordersSetFieldNumber = 1;
    private pb::ByteString wordersSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WordersSet {
      get { return wordersSet_; }
      set {
        wordersSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WordersSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WordersSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WordersSet != other.WordersSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WordersSet.Length != 0) hash ^= WordersSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WordersSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(WordersSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WordersSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WordersSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WordersSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.WordersSet.Length != 0) {
        WordersSet = other.WordersSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WordersSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSetResponse : pb::IMessage<DataSetResponse> {
    private static readonly pb::MessageParser<DataSetResponse> _parser = new pb::MessageParser<DataSetResponse>(() => new DataSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse(DataSetResponse other) : this() {
      dataSet_ = other.dataSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse Clone() {
      return new DataSetResponse(this);
    }

    /// <summary>Field number for the "dataSet" field.</summary>
    public const int DataSetFieldNumber = 1;
    private pb::ByteString dataSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataSet {
      get { return dataSet_; }
      set {
        dataSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSet != other.DataSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSet.Length != 0) hash ^= DataSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DataSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DataSet.Length != 0) {
        DataSet = other.DataSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForBusinessClass_SaleRequest : pb::IMessage<GetForBusinessClass_SaleRequest> {
    private static readonly pb::MessageParser<GetForBusinessClass_SaleRequest> _parser = new pb::MessageParser<GetForBusinessClass_SaleRequest>(() => new GetForBusinessClass_SaleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForBusinessClass_SaleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForBusinessClass_SaleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForBusinessClass_SaleRequest(GetForBusinessClass_SaleRequest other) : this() {
      businessClassCode_ = other.businessClassCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForBusinessClass_SaleRequest Clone() {
      return new GetForBusinessClass_SaleRequest(this);
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 1;
    private int businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForBusinessClass_SaleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForBusinessClass_SaleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClassCode != other.BusinessClassCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClassCode != 0) hash ^= BusinessClassCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClassCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(BusinessClassCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClassCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BusinessClassCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForBusinessClass_SaleRequest other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClassCode != 0) {
        BusinessClassCode = other.BusinessClassCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BusinessClassCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForCustomersRequest : pb::IMessage<GetForCustomersRequest> {
    private static readonly pb::MessageParser<GetForCustomersRequest> _parser = new pb::MessageParser<GetForCustomersRequest>(() => new GetForCustomersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForCustomersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCustomersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCustomersRequest(GetForCustomersRequest other) : this() {
      customerCode_ = other.customerCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForCustomersRequest Clone() {
      return new GetForCustomersRequest(this);
    }

    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 1;
    private string customerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForCustomersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForCustomersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerCode != other.CustomerCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerCode.Length != 0) hash ^= CustomerCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CustomerCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForCustomersRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerCode.Length != 0) {
        CustomerCode = other.CustomerCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForWorkersRequest : pb::IMessage<GetForWorkersRequest> {
    private static readonly pb::MessageParser<GetForWorkersRequest> _parser = new pb::MessageParser<GetForWorkersRequest>(() => new GetForWorkersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForWorkersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForWorkersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForWorkersRequest(GetForWorkersRequest other) : this() {
      workerCode_ = other.workerCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForWorkersRequest Clone() {
      return new GetForWorkersRequest(this);
    }

    /// <summary>Field number for the "workerCode" field.</summary>
    public const int WorkerCodeFieldNumber = 1;
    private string workerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerCode {
      get { return workerCode_; }
      set {
        workerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForWorkersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForWorkersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorkerCode != other.WorkerCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorkerCode.Length != 0) hash ^= WorkerCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorkerCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorkerCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorkerCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkerCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForWorkersRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorkerCode.Length != 0) {
        WorkerCode = other.WorkerCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorkerCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForRoutesRequest : pb::IMessage<GetForRoutesRequest> {
    private static readonly pb::MessageParser<GetForRoutesRequest> _parser = new pb::MessageParser<GetForRoutesRequest>(() => new GetForRoutesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForRoutesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForRoutesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForRoutesRequest(GetForRoutesRequest other) : this() {
      route_ = other.route_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForRoutesRequest Clone() {
      return new GetForRoutesRequest(this);
    }

    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 1;
    private string route_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Route {
      get { return route_; }
      set {
        route_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForRoutesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForRoutesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Route != other.Route) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Route.Length != 0) hash ^= Route.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Route.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Route);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Route.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Route);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForRoutesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Route.Length != 0) {
        Route = other.Route;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Route = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByKeyRequest : pb::IMessage<GetByKeyRequest> {
    private static readonly pb::MessageParser<GetByKeyRequest> _parser = new pb::MessageParser<GetByKeyRequest>(() => new GetByKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest(GetByKeyRequest other) : this() {
      worksOrderNo_ = other.worksOrderNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest Clone() {
      return new GetByKeyRequest(this);
    }

    /// <summary>Field number for the "worksOrderNo" field.</summary>
    public const int WorksOrderNoFieldNumber = 1;
    private string worksOrderNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorksOrderNo {
      get { return worksOrderNo_; }
      set {
        worksOrderNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorksOrderNo != other.WorksOrderNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorksOrderNo.Length != 0) hash ^= WorksOrderNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorksOrderNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorksOrderNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorksOrderNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorksOrderNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorksOrderNo.Length != 0) {
        WorksOrderNo = other.WorksOrderNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorksOrderNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertRequest : pb::IMessage<InsertRequest> {
    private static readonly pb::MessageParser<InsertRequest> _parser = new pb::MessageParser<InsertRequest>(() => new InsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest(InsertRequest other) : this() {
      worksOrderNo_ = other.worksOrderNo_;
      serialNo_ = other.serialNo_;
      priority_ = other.priority_;
      originalStartDate_ = other.originalStartDate_ != null ? other.originalStartDate_.Clone() : null;
      originalDueDate_ = other.originalDueDate_ != null ? other.originalDueDate_.Clone() : null;
      stdMaterialCost_ = other.stdMaterialCost_ != null ? other.stdMaterialCost_.Clone() : null;
      actMaterialCost_ = other.actMaterialCost_ != null ? other.actMaterialCost_.Clone() : null;
      stdLabCost_ = other.stdLabCost_ != null ? other.stdLabCost_.Clone() : null;
      actLabCost_ = other.actLabCost_ != null ? other.actLabCost_.Clone() : null;
      stdSetupCost_ = other.stdSetupCost_ != null ? other.stdSetupCost_.Clone() : null;
      actSetupCost_ = other.actSetupCost_ != null ? other.actSetupCost_.Clone() : null;
      stdOverheadCost_ = other.stdOverheadCost_ != null ? other.stdOverheadCost_.Clone() : null;
      actOverheadCost_ = other.actOverheadCost_ != null ? other.actOverheadCost_.Clone() : null;
      completedFlag_ = other.completedFlag_;
      issuedFlag_ = other.issuedFlag_;
      directChargeFlag_ = other.directChargeFlag_;
      currentKitNo_ = other.currentKitNo_;
      reprintReqFlag_ = other.reprintReqFlag_;
      orderStatusFlag_ = other.orderStatusFlag_;
      BusinessClassCode = other.BusinessClassCode;
      OriginalWorksOrderNo = other.OriginalWorksOrderNo;
      Remarks = other.Remarks;
      CustomerCode = other.CustomerCode;
      wOrderType_ = other.wOrderType_;
      WorkerCode = other.WorkerCode;
      Route = other.Route;
      switch (other.OneofActualStartDateCase) {
        case OneofActualStartDateOneofCase.ActualStartDate:
          ActualStartDate = other.ActualStartDate.Clone();
          break;
      }

      switch (other.OneofActualDueDateCase) {
        case OneofActualDueDateOneofCase.ActualDueDate:
          ActualDueDate = other.ActualDueDate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest Clone() {
      return new InsertRequest(this);
    }

    /// <summary>Field number for the "worksOrderNo" field.</summary>
    public const int WorksOrderNoFieldNumber = 1;
    private string worksOrderNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorksOrderNo {
      get { return worksOrderNo_; }
      set {
        worksOrderNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serialNo" field.</summary>
    public const int SerialNoFieldNumber = 2;
    private int serialNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SerialNo {
      get { return serialNo_; }
      set {
        serialNo_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "originalStartDate" field.</summary>
    public const int OriginalStartDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalStartDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalStartDate {
      get { return originalStartDate_; }
      set {
        originalStartDate_ = value;
      }
    }

    /// <summary>Field number for the "originalDueDate" field.</summary>
    public const int OriginalDueDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalDueDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalDueDate {
      get { return originalDueDate_; }
      set {
        originalDueDate_ = value;
      }
    }

    /// <summary>Field number for the "actualStartDate" field.</summary>
    public const int ActualStartDateFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualStartDate {
      get { return oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofActualStartDate_ : null; }
      set {
        oneofActualStartDate_ = value;
        oneofActualStartDateCase_ = value == null ? OneofActualStartDateOneofCase.None : OneofActualStartDateOneofCase.ActualStartDate;
      }
    }

    /// <summary>Field number for the "actualDueDate" field.</summary>
    public const int ActualDueDateFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualDueDate {
      get { return oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofActualDueDate_ : null; }
      set {
        oneofActualDueDate_ = value;
        oneofActualDueDateCase_ = value == null ? OneofActualDueDateOneofCase.None : OneofActualDueDateOneofCase.ActualDueDate;
      }
    }

    /// <summary>Field number for the "stdMaterialCost" field.</summary>
    public const int StdMaterialCostFieldNumber = 8;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdMaterialCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdMaterialCost {
      get { return stdMaterialCost_; }
      set {
        stdMaterialCost_ = value;
      }
    }

    /// <summary>Field number for the "actMaterialCost" field.</summary>
    public const int ActMaterialCostFieldNumber = 9;
    private global::HaccpManager.WordersProtos.GrpcDecimal actMaterialCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActMaterialCost {
      get { return actMaterialCost_; }
      set {
        actMaterialCost_ = value;
      }
    }

    /// <summary>Field number for the "stdLabCost" field.</summary>
    public const int StdLabCostFieldNumber = 10;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdLabCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdLabCost {
      get { return stdLabCost_; }
      set {
        stdLabCost_ = value;
      }
    }

    /// <summary>Field number for the "actLabCost" field.</summary>
    public const int ActLabCostFieldNumber = 11;
    private global::HaccpManager.WordersProtos.GrpcDecimal actLabCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActLabCost {
      get { return actLabCost_; }
      set {
        actLabCost_ = value;
      }
    }

    /// <summary>Field number for the "stdSetupCost" field.</summary>
    public const int StdSetupCostFieldNumber = 12;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdSetupCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdSetupCost {
      get { return stdSetupCost_; }
      set {
        stdSetupCost_ = value;
      }
    }

    /// <summary>Field number for the "actSetupCost" field.</summary>
    public const int ActSetupCostFieldNumber = 13;
    private global::HaccpManager.WordersProtos.GrpcDecimal actSetupCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActSetupCost {
      get { return actSetupCost_; }
      set {
        actSetupCost_ = value;
      }
    }

    /// <summary>Field number for the "stdOverheadCost" field.</summary>
    public const int StdOverheadCostFieldNumber = 14;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdOverheadCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdOverheadCost {
      get { return stdOverheadCost_; }
      set {
        stdOverheadCost_ = value;
      }
    }

    /// <summary>Field number for the "actOverheadCost" field.</summary>
    public const int ActOverheadCostFieldNumber = 15;
    private global::HaccpManager.WordersProtos.GrpcDecimal actOverheadCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActOverheadCost {
      get { return actOverheadCost_; }
      set {
        actOverheadCost_ = value;
      }
    }

    /// <summary>Field number for the "completedFlag" field.</summary>
    public const int CompletedFlagFieldNumber = 16;
    private string completedFlag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompletedFlag {
      get { return completedFlag_; }
      set {
        completedFlag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issuedFlag" field.</summary>
    public const int IssuedFlagFieldNumber = 17;
    private int issuedFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IssuedFlag {
      get { return issuedFlag_; }
      set {
        issuedFlag_ = value;
      }
    }

    /// <summary>Field number for the "directChargeFlag" field.</summary>
    public const int DirectChargeFlagFieldNumber = 18;
    private int directChargeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DirectChargeFlag {
      get { return directChargeFlag_; }
      set {
        directChargeFlag_ = value;
      }
    }

    /// <summary>Field number for the "currentKitNo" field.</summary>
    public const int CurrentKitNoFieldNumber = 19;
    private int currentKitNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentKitNo {
      get { return currentKitNo_; }
      set {
        currentKitNo_ = value;
      }
    }

    /// <summary>Field number for the "reprintReqFlag" field.</summary>
    public const int ReprintReqFlagFieldNumber = 20;
    private int reprintReqFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReprintReqFlag {
      get { return reprintReqFlag_; }
      set {
        reprintReqFlag_ = value;
      }
    }

    /// <summary>Field number for the "orderStatusFlag" field.</summary>
    public const int OrderStatusFlagFieldNumber = 21;
    private int orderStatusFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderStatusFlag {
      get { return orderStatusFlag_; }
      set {
        orderStatusFlag_ = value;
      }
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 22;
    private static readonly pb::FieldCodec<int?> _single_businessClassCode_codec = pb::FieldCodec.ForStructWrapper<int>(178);
    private int? businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }


    /// <summary>Field number for the "originalWorksOrderNo" field.</summary>
    public const int OriginalWorksOrderNoFieldNumber = 23;
    private static readonly pb::FieldCodec<string> _single_originalWorksOrderNo_codec = pb::FieldCodec.ForClassWrapper<string>(186);
    private string originalWorksOrderNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalWorksOrderNo {
      get { return originalWorksOrderNo_; }
      set {
        originalWorksOrderNo_ = value;
      }
    }


    /// <summary>Field number for the "remarks" field.</summary>
    public const int RemarksFieldNumber = 24;
    private static readonly pb::FieldCodec<string> _single_remarks_codec = pb::FieldCodec.ForClassWrapper<string>(194);
    private string remarks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remarks {
      get { return remarks_; }
      set {
        remarks_ = value;
      }
    }


    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 25;
    private static readonly pb::FieldCodec<string> _single_customerCode_codec = pb::FieldCodec.ForClassWrapper<string>(202);
    private string customerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = value;
      }
    }


    /// <summary>Field number for the "wOrderType" field.</summary>
    public const int WOrderTypeFieldNumber = 26;
    private int wOrderType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WOrderType {
      get { return wOrderType_; }
      set {
        wOrderType_ = value;
      }
    }

    /// <summary>Field number for the "workerCode" field.</summary>
    public const int WorkerCodeFieldNumber = 27;
    private static readonly pb::FieldCodec<string> _single_workerCode_codec = pb::FieldCodec.ForClassWrapper<string>(218);
    private string workerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerCode {
      get { return workerCode_; }
      set {
        workerCode_ = value;
      }
    }


    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 28;
    private static readonly pb::FieldCodec<string> _single_route_codec = pb::FieldCodec.ForClassWrapper<string>(226);
    private string route_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Route {
      get { return route_; }
      set {
        route_ = value;
      }
    }


    private object oneofActualStartDate_;
    /// <summary>Enum of possible cases for the "oneofActualStartDate" oneof.</summary>
    public enum OneofActualStartDateOneofCase {
      None = 0,
      ActualStartDate = 6,
    }
    private OneofActualStartDateOneofCase oneofActualStartDateCase_ = OneofActualStartDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofActualStartDateOneofCase OneofActualStartDateCase {
      get { return oneofActualStartDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofActualStartDate() {
      oneofActualStartDateCase_ = OneofActualStartDateOneofCase.None;
      oneofActualStartDate_ = null;
    }

    private object oneofActualDueDate_;
    /// <summary>Enum of possible cases for the "oneofActualDueDate" oneof.</summary>
    public enum OneofActualDueDateOneofCase {
      None = 0,
      ActualDueDate = 7,
    }
    private OneofActualDueDateOneofCase oneofActualDueDateCase_ = OneofActualDueDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofActualDueDateOneofCase OneofActualDueDateCase {
      get { return oneofActualDueDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofActualDueDate() {
      oneofActualDueDateCase_ = OneofActualDueDateOneofCase.None;
      oneofActualDueDate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorksOrderNo != other.WorksOrderNo) return false;
      if (SerialNo != other.SerialNo) return false;
      if (Priority != other.Priority) return false;
      if (!object.Equals(OriginalStartDate, other.OriginalStartDate)) return false;
      if (!object.Equals(OriginalDueDate, other.OriginalDueDate)) return false;
      if (!object.Equals(ActualStartDate, other.ActualStartDate)) return false;
      if (!object.Equals(ActualDueDate, other.ActualDueDate)) return false;
      if (!object.Equals(StdMaterialCost, other.StdMaterialCost)) return false;
      if (!object.Equals(ActMaterialCost, other.ActMaterialCost)) return false;
      if (!object.Equals(StdLabCost, other.StdLabCost)) return false;
      if (!object.Equals(ActLabCost, other.ActLabCost)) return false;
      if (!object.Equals(StdSetupCost, other.StdSetupCost)) return false;
      if (!object.Equals(ActSetupCost, other.ActSetupCost)) return false;
      if (!object.Equals(StdOverheadCost, other.StdOverheadCost)) return false;
      if (!object.Equals(ActOverheadCost, other.ActOverheadCost)) return false;
      if (CompletedFlag != other.CompletedFlag) return false;
      if (IssuedFlag != other.IssuedFlag) return false;
      if (DirectChargeFlag != other.DirectChargeFlag) return false;
      if (CurrentKitNo != other.CurrentKitNo) return false;
      if (ReprintReqFlag != other.ReprintReqFlag) return false;
      if (OrderStatusFlag != other.OrderStatusFlag) return false;
      if (BusinessClassCode != other.BusinessClassCode) return false;
      if (OriginalWorksOrderNo != other.OriginalWorksOrderNo) return false;
      if (Remarks != other.Remarks) return false;
      if (CustomerCode != other.CustomerCode) return false;
      if (WOrderType != other.WOrderType) return false;
      if (WorkerCode != other.WorkerCode) return false;
      if (Route != other.Route) return false;
      if (OneofActualStartDateCase != other.OneofActualStartDateCase) return false;
      if (OneofActualDueDateCase != other.OneofActualDueDateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorksOrderNo.Length != 0) hash ^= WorksOrderNo.GetHashCode();
      if (SerialNo != 0) hash ^= SerialNo.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (originalStartDate_ != null) hash ^= OriginalStartDate.GetHashCode();
      if (originalDueDate_ != null) hash ^= OriginalDueDate.GetHashCode();
      if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) hash ^= ActualStartDate.GetHashCode();
      if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) hash ^= ActualDueDate.GetHashCode();
      if (stdMaterialCost_ != null) hash ^= StdMaterialCost.GetHashCode();
      if (actMaterialCost_ != null) hash ^= ActMaterialCost.GetHashCode();
      if (stdLabCost_ != null) hash ^= StdLabCost.GetHashCode();
      if (actLabCost_ != null) hash ^= ActLabCost.GetHashCode();
      if (stdSetupCost_ != null) hash ^= StdSetupCost.GetHashCode();
      if (actSetupCost_ != null) hash ^= ActSetupCost.GetHashCode();
      if (stdOverheadCost_ != null) hash ^= StdOverheadCost.GetHashCode();
      if (actOverheadCost_ != null) hash ^= ActOverheadCost.GetHashCode();
      if (CompletedFlag.Length != 0) hash ^= CompletedFlag.GetHashCode();
      if (IssuedFlag != 0) hash ^= IssuedFlag.GetHashCode();
      if (DirectChargeFlag != 0) hash ^= DirectChargeFlag.GetHashCode();
      if (CurrentKitNo != 0) hash ^= CurrentKitNo.GetHashCode();
      if (ReprintReqFlag != 0) hash ^= ReprintReqFlag.GetHashCode();
      if (OrderStatusFlag != 0) hash ^= OrderStatusFlag.GetHashCode();
      if (businessClassCode_ != null) hash ^= BusinessClassCode.GetHashCode();
      if (originalWorksOrderNo_ != null) hash ^= OriginalWorksOrderNo.GetHashCode();
      if (remarks_ != null) hash ^= Remarks.GetHashCode();
      if (customerCode_ != null) hash ^= CustomerCode.GetHashCode();
      if (WOrderType != 0) hash ^= WOrderType.GetHashCode();
      if (workerCode_ != null) hash ^= WorkerCode.GetHashCode();
      if (route_ != null) hash ^= Route.GetHashCode();
      hash ^= (int) oneofActualStartDateCase_;
      hash ^= (int) oneofActualDueDateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorksOrderNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorksOrderNo);
      }
      if (SerialNo != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(SerialNo);
      }
      if (Priority != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Priority);
      }
      if (originalStartDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OriginalStartDate);
      }
      if (originalDueDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OriginalDueDate);
      }
      if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) {
        output.WriteRawTag(50);
        output.WriteMessage(ActualStartDate);
      }
      if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) {
        output.WriteRawTag(58);
        output.WriteMessage(ActualDueDate);
      }
      if (stdMaterialCost_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StdMaterialCost);
      }
      if (actMaterialCost_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ActMaterialCost);
      }
      if (stdLabCost_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StdLabCost);
      }
      if (actLabCost_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ActLabCost);
      }
      if (stdSetupCost_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StdSetupCost);
      }
      if (actSetupCost_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ActSetupCost);
      }
      if (stdOverheadCost_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StdOverheadCost);
      }
      if (actOverheadCost_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ActOverheadCost);
      }
      if (CompletedFlag.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CompletedFlag);
      }
      if (IssuedFlag != 0) {
        output.WriteRawTag(136, 1);
        output.WriteSInt32(IssuedFlag);
      }
      if (DirectChargeFlag != 0) {
        output.WriteRawTag(144, 1);
        output.WriteSInt32(DirectChargeFlag);
      }
      if (CurrentKitNo != 0) {
        output.WriteRawTag(152, 1);
        output.WriteSInt32(CurrentKitNo);
      }
      if (ReprintReqFlag != 0) {
        output.WriteRawTag(160, 1);
        output.WriteSInt32(ReprintReqFlag);
      }
      if (OrderStatusFlag != 0) {
        output.WriteRawTag(168, 1);
        output.WriteSInt32(OrderStatusFlag);
      }
      if (businessClassCode_ != null) {
        _single_businessClassCode_codec.WriteTagAndValue(output, BusinessClassCode);
      }
      if (originalWorksOrderNo_ != null) {
        _single_originalWorksOrderNo_codec.WriteTagAndValue(output, OriginalWorksOrderNo);
      }
      if (remarks_ != null) {
        _single_remarks_codec.WriteTagAndValue(output, Remarks);
      }
      if (customerCode_ != null) {
        _single_customerCode_codec.WriteTagAndValue(output, CustomerCode);
      }
      if (WOrderType != 0) {
        output.WriteRawTag(208, 1);
        output.WriteSInt32(WOrderType);
      }
      if (workerCode_ != null) {
        _single_workerCode_codec.WriteTagAndValue(output, WorkerCode);
      }
      if (route_ != null) {
        _single_route_codec.WriteTagAndValue(output, Route);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorksOrderNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorksOrderNo);
      }
      if (SerialNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SerialNo);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Priority);
      }
      if (originalStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalStartDate);
      }
      if (originalDueDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalDueDate);
      }
      if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualStartDate);
      }
      if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualDueDate);
      }
      if (stdMaterialCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdMaterialCost);
      }
      if (actMaterialCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActMaterialCost);
      }
      if (stdLabCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdLabCost);
      }
      if (actLabCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActLabCost);
      }
      if (stdSetupCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdSetupCost);
      }
      if (actSetupCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActSetupCost);
      }
      if (stdOverheadCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdOverheadCost);
      }
      if (actOverheadCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActOverheadCost);
      }
      if (CompletedFlag.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompletedFlag);
      }
      if (IssuedFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(IssuedFlag);
      }
      if (DirectChargeFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(DirectChargeFlag);
      }
      if (CurrentKitNo != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(CurrentKitNo);
      }
      if (ReprintReqFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(ReprintReqFlag);
      }
      if (OrderStatusFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(OrderStatusFlag);
      }
      if (businessClassCode_ != null) {
        size += _single_businessClassCode_codec.CalculateSizeWithTag(BusinessClassCode);
      }
      if (originalWorksOrderNo_ != null) {
        size += _single_originalWorksOrderNo_codec.CalculateSizeWithTag(OriginalWorksOrderNo);
      }
      if (remarks_ != null) {
        size += _single_remarks_codec.CalculateSizeWithTag(Remarks);
      }
      if (customerCode_ != null) {
        size += _single_customerCode_codec.CalculateSizeWithTag(CustomerCode);
      }
      if (WOrderType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(WOrderType);
      }
      if (workerCode_ != null) {
        size += _single_workerCode_codec.CalculateSizeWithTag(WorkerCode);
      }
      if (route_ != null) {
        size += _single_route_codec.CalculateSizeWithTag(Route);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorksOrderNo.Length != 0) {
        WorksOrderNo = other.WorksOrderNo;
      }
      if (other.SerialNo != 0) {
        SerialNo = other.SerialNo;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.originalStartDate_ != null) {
        if (originalStartDate_ == null) {
          OriginalStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalStartDate.MergeFrom(other.OriginalStartDate);
      }
      if (other.originalDueDate_ != null) {
        if (originalDueDate_ == null) {
          OriginalDueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalDueDate.MergeFrom(other.OriginalDueDate);
      }
      if (other.stdMaterialCost_ != null) {
        if (stdMaterialCost_ == null) {
          StdMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdMaterialCost.MergeFrom(other.StdMaterialCost);
      }
      if (other.actMaterialCost_ != null) {
        if (actMaterialCost_ == null) {
          ActMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActMaterialCost.MergeFrom(other.ActMaterialCost);
      }
      if (other.stdLabCost_ != null) {
        if (stdLabCost_ == null) {
          StdLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdLabCost.MergeFrom(other.StdLabCost);
      }
      if (other.actLabCost_ != null) {
        if (actLabCost_ == null) {
          ActLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActLabCost.MergeFrom(other.ActLabCost);
      }
      if (other.stdSetupCost_ != null) {
        if (stdSetupCost_ == null) {
          StdSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdSetupCost.MergeFrom(other.StdSetupCost);
      }
      if (other.actSetupCost_ != null) {
        if (actSetupCost_ == null) {
          ActSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActSetupCost.MergeFrom(other.ActSetupCost);
      }
      if (other.stdOverheadCost_ != null) {
        if (stdOverheadCost_ == null) {
          StdOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdOverheadCost.MergeFrom(other.StdOverheadCost);
      }
      if (other.actOverheadCost_ != null) {
        if (actOverheadCost_ == null) {
          ActOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActOverheadCost.MergeFrom(other.ActOverheadCost);
      }
      if (other.CompletedFlag.Length != 0) {
        CompletedFlag = other.CompletedFlag;
      }
      if (other.IssuedFlag != 0) {
        IssuedFlag = other.IssuedFlag;
      }
      if (other.DirectChargeFlag != 0) {
        DirectChargeFlag = other.DirectChargeFlag;
      }
      if (other.CurrentKitNo != 0) {
        CurrentKitNo = other.CurrentKitNo;
      }
      if (other.ReprintReqFlag != 0) {
        ReprintReqFlag = other.ReprintReqFlag;
      }
      if (other.OrderStatusFlag != 0) {
        OrderStatusFlag = other.OrderStatusFlag;
      }
      if (other.businessClassCode_ != null) {
        if (businessClassCode_ == null || other.BusinessClassCode != 0) {
          BusinessClassCode = other.BusinessClassCode;
        }
      }
      if (other.originalWorksOrderNo_ != null) {
        if (originalWorksOrderNo_ == null || other.OriginalWorksOrderNo != "") {
          OriginalWorksOrderNo = other.OriginalWorksOrderNo;
        }
      }
      if (other.remarks_ != null) {
        if (remarks_ == null || other.Remarks != "") {
          Remarks = other.Remarks;
        }
      }
      if (other.customerCode_ != null) {
        if (customerCode_ == null || other.CustomerCode != "") {
          CustomerCode = other.CustomerCode;
        }
      }
      if (other.WOrderType != 0) {
        WOrderType = other.WOrderType;
      }
      if (other.workerCode_ != null) {
        if (workerCode_ == null || other.WorkerCode != "") {
          WorkerCode = other.WorkerCode;
        }
      }
      if (other.route_ != null) {
        if (route_ == null || other.Route != "") {
          Route = other.Route;
        }
      }
      switch (other.OneofActualStartDateCase) {
        case OneofActualStartDateOneofCase.ActualStartDate:
          if (ActualStartDate == null) {
            ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          ActualStartDate.MergeFrom(other.ActualStartDate);
          break;
      }

      switch (other.OneofActualDueDateCase) {
        case OneofActualDueDateOneofCase.ActualDueDate:
          if (ActualDueDate == null) {
            ActualDueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          ActualDueDate.MergeFrom(other.ActualDueDate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorksOrderNo = input.ReadString();
            break;
          }
          case 16: {
            SerialNo = input.ReadSInt32();
            break;
          }
          case 24: {
            Priority = input.ReadSInt32();
            break;
          }
          case 34: {
            if (originalStartDate_ == null) {
              OriginalStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalStartDate);
            break;
          }
          case 42: {
            if (originalDueDate_ == null) {
              OriginalDueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalDueDate);
            break;
          }
          case 50: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) {
              subBuilder.MergeFrom(ActualStartDate);
            }
            input.ReadMessage(subBuilder);
            ActualStartDate = subBuilder;
            break;
          }
          case 58: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) {
              subBuilder.MergeFrom(ActualDueDate);
            }
            input.ReadMessage(subBuilder);
            ActualDueDate = subBuilder;
            break;
          }
          case 66: {
            if (stdMaterialCost_ == null) {
              StdMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdMaterialCost);
            break;
          }
          case 74: {
            if (actMaterialCost_ == null) {
              ActMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActMaterialCost);
            break;
          }
          case 82: {
            if (stdLabCost_ == null) {
              StdLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdLabCost);
            break;
          }
          case 90: {
            if (actLabCost_ == null) {
              ActLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActLabCost);
            break;
          }
          case 98: {
            if (stdSetupCost_ == null) {
              StdSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdSetupCost);
            break;
          }
          case 106: {
            if (actSetupCost_ == null) {
              ActSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActSetupCost);
            break;
          }
          case 114: {
            if (stdOverheadCost_ == null) {
              StdOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdOverheadCost);
            break;
          }
          case 122: {
            if (actOverheadCost_ == null) {
              ActOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActOverheadCost);
            break;
          }
          case 130: {
            CompletedFlag = input.ReadString();
            break;
          }
          case 136: {
            IssuedFlag = input.ReadSInt32();
            break;
          }
          case 144: {
            DirectChargeFlag = input.ReadSInt32();
            break;
          }
          case 152: {
            CurrentKitNo = input.ReadSInt32();
            break;
          }
          case 160: {
            ReprintReqFlag = input.ReadSInt32();
            break;
          }
          case 168: {
            OrderStatusFlag = input.ReadSInt32();
            break;
          }
          case 178: {
            int? value = _single_businessClassCode_codec.Read(input);
            if (businessClassCode_ == null || value != 0) {
              BusinessClassCode = value;
            }
            break;
          }
          case 186: {
            string value = _single_originalWorksOrderNo_codec.Read(input);
            if (originalWorksOrderNo_ == null || value != "") {
              OriginalWorksOrderNo = value;
            }
            break;
          }
          case 194: {
            string value = _single_remarks_codec.Read(input);
            if (remarks_ == null || value != "") {
              Remarks = value;
            }
            break;
          }
          case 202: {
            string value = _single_customerCode_codec.Read(input);
            if (customerCode_ == null || value != "") {
              CustomerCode = value;
            }
            break;
          }
          case 208: {
            WOrderType = input.ReadSInt32();
            break;
          }
          case 218: {
            string value = _single_workerCode_codec.Read(input);
            if (workerCode_ == null || value != "") {
              WorkerCode = value;
            }
            break;
          }
          case 226: {
            string value = _single_route_codec.Read(input);
            if (route_ == null || value != "") {
              Route = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      worksOrderNo_ = other.worksOrderNo_;
      serialNo_ = other.serialNo_;
      priority_ = other.priority_;
      originalStartDate_ = other.originalStartDate_ != null ? other.originalStartDate_.Clone() : null;
      originalDueDate_ = other.originalDueDate_ != null ? other.originalDueDate_.Clone() : null;
      stdMaterialCost_ = other.stdMaterialCost_ != null ? other.stdMaterialCost_.Clone() : null;
      actMaterialCost_ = other.actMaterialCost_ != null ? other.actMaterialCost_.Clone() : null;
      stdLabCost_ = other.stdLabCost_ != null ? other.stdLabCost_.Clone() : null;
      actLabCost_ = other.actLabCost_ != null ? other.actLabCost_.Clone() : null;
      stdSetupCost_ = other.stdSetupCost_ != null ? other.stdSetupCost_.Clone() : null;
      actSetupCost_ = other.actSetupCost_ != null ? other.actSetupCost_.Clone() : null;
      stdOverheadCost_ = other.stdOverheadCost_ != null ? other.stdOverheadCost_.Clone() : null;
      actOverheadCost_ = other.actOverheadCost_ != null ? other.actOverheadCost_.Clone() : null;
      completedFlag_ = other.completedFlag_;
      issuedFlag_ = other.issuedFlag_;
      directChargeFlag_ = other.directChargeFlag_;
      currentKitNo_ = other.currentKitNo_;
      reprintReqFlag_ = other.reprintReqFlag_;
      orderStatusFlag_ = other.orderStatusFlag_;
      BusinessClassCode = other.BusinessClassCode;
      OriginalWorksOrderNo = other.OriginalWorksOrderNo;
      Remarks = other.Remarks;
      CustomerCode = other.CustomerCode;
      wOrderType_ = other.wOrderType_;
      WorkerCode = other.WorkerCode;
      Route = other.Route;
      switch (other.OneofActualStartDateCase) {
        case OneofActualStartDateOneofCase.ActualStartDate:
          ActualStartDate = other.ActualStartDate.Clone();
          break;
      }

      switch (other.OneofActualDueDateCase) {
        case OneofActualDueDateOneofCase.ActualDueDate:
          ActualDueDate = other.ActualDueDate.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "worksOrderNo" field.</summary>
    public const int WorksOrderNoFieldNumber = 1;
    private string worksOrderNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorksOrderNo {
      get { return worksOrderNo_; }
      set {
        worksOrderNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "serialNo" field.</summary>
    public const int SerialNoFieldNumber = 2;
    private int serialNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SerialNo {
      get { return serialNo_; }
      set {
        serialNo_ = value;
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private int priority_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }

    /// <summary>Field number for the "originalStartDate" field.</summary>
    public const int OriginalStartDateFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalStartDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalStartDate {
      get { return originalStartDate_; }
      set {
        originalStartDate_ = value;
      }
    }

    /// <summary>Field number for the "originalDueDate" field.</summary>
    public const int OriginalDueDateFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp originalDueDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OriginalDueDate {
      get { return originalDueDate_; }
      set {
        originalDueDate_ = value;
      }
    }

    /// <summary>Field number for the "actualStartDate" field.</summary>
    public const int ActualStartDateFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualStartDate {
      get { return oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofActualStartDate_ : null; }
      set {
        oneofActualStartDate_ = value;
        oneofActualStartDateCase_ = value == null ? OneofActualStartDateOneofCase.None : OneofActualStartDateOneofCase.ActualStartDate;
      }
    }

    /// <summary>Field number for the "actualDueDate" field.</summary>
    public const int ActualDueDateFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ActualDueDate {
      get { return oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate ? (global::Google.Protobuf.WellKnownTypes.Timestamp) oneofActualDueDate_ : null; }
      set {
        oneofActualDueDate_ = value;
        oneofActualDueDateCase_ = value == null ? OneofActualDueDateOneofCase.None : OneofActualDueDateOneofCase.ActualDueDate;
      }
    }

    /// <summary>Field number for the "stdMaterialCost" field.</summary>
    public const int StdMaterialCostFieldNumber = 8;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdMaterialCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdMaterialCost {
      get { return stdMaterialCost_; }
      set {
        stdMaterialCost_ = value;
      }
    }

    /// <summary>Field number for the "actMaterialCost" field.</summary>
    public const int ActMaterialCostFieldNumber = 9;
    private global::HaccpManager.WordersProtos.GrpcDecimal actMaterialCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActMaterialCost {
      get { return actMaterialCost_; }
      set {
        actMaterialCost_ = value;
      }
    }

    /// <summary>Field number for the "stdLabCost" field.</summary>
    public const int StdLabCostFieldNumber = 10;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdLabCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdLabCost {
      get { return stdLabCost_; }
      set {
        stdLabCost_ = value;
      }
    }

    /// <summary>Field number for the "actLabCost" field.</summary>
    public const int ActLabCostFieldNumber = 11;
    private global::HaccpManager.WordersProtos.GrpcDecimal actLabCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActLabCost {
      get { return actLabCost_; }
      set {
        actLabCost_ = value;
      }
    }

    /// <summary>Field number for the "stdSetupCost" field.</summary>
    public const int StdSetupCostFieldNumber = 12;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdSetupCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdSetupCost {
      get { return stdSetupCost_; }
      set {
        stdSetupCost_ = value;
      }
    }

    /// <summary>Field number for the "actSetupCost" field.</summary>
    public const int ActSetupCostFieldNumber = 13;
    private global::HaccpManager.WordersProtos.GrpcDecimal actSetupCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActSetupCost {
      get { return actSetupCost_; }
      set {
        actSetupCost_ = value;
      }
    }

    /// <summary>Field number for the "stdOverheadCost" field.</summary>
    public const int StdOverheadCostFieldNumber = 14;
    private global::HaccpManager.WordersProtos.GrpcDecimal stdOverheadCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal StdOverheadCost {
      get { return stdOverheadCost_; }
      set {
        stdOverheadCost_ = value;
      }
    }

    /// <summary>Field number for the "actOverheadCost" field.</summary>
    public const int ActOverheadCostFieldNumber = 15;
    private global::HaccpManager.WordersProtos.GrpcDecimal actOverheadCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::HaccpManager.WordersProtos.GrpcDecimal ActOverheadCost {
      get { return actOverheadCost_; }
      set {
        actOverheadCost_ = value;
      }
    }

    /// <summary>Field number for the "completedFlag" field.</summary>
    public const int CompletedFlagFieldNumber = 16;
    private string completedFlag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompletedFlag {
      get { return completedFlag_; }
      set {
        completedFlag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issuedFlag" field.</summary>
    public const int IssuedFlagFieldNumber = 17;
    private int issuedFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IssuedFlag {
      get { return issuedFlag_; }
      set {
        issuedFlag_ = value;
      }
    }

    /// <summary>Field number for the "directChargeFlag" field.</summary>
    public const int DirectChargeFlagFieldNumber = 18;
    private int directChargeFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DirectChargeFlag {
      get { return directChargeFlag_; }
      set {
        directChargeFlag_ = value;
      }
    }

    /// <summary>Field number for the "currentKitNo" field.</summary>
    public const int CurrentKitNoFieldNumber = 19;
    private int currentKitNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentKitNo {
      get { return currentKitNo_; }
      set {
        currentKitNo_ = value;
      }
    }

    /// <summary>Field number for the "reprintReqFlag" field.</summary>
    public const int ReprintReqFlagFieldNumber = 20;
    private int reprintReqFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ReprintReqFlag {
      get { return reprintReqFlag_; }
      set {
        reprintReqFlag_ = value;
      }
    }

    /// <summary>Field number for the "orderStatusFlag" field.</summary>
    public const int OrderStatusFlagFieldNumber = 21;
    private int orderStatusFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OrderStatusFlag {
      get { return orderStatusFlag_; }
      set {
        orderStatusFlag_ = value;
      }
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 22;
    private static readonly pb::FieldCodec<int?> _single_businessClassCode_codec = pb::FieldCodec.ForStructWrapper<int>(178);
    private int? businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }


    /// <summary>Field number for the "originalWorksOrderNo" field.</summary>
    public const int OriginalWorksOrderNoFieldNumber = 23;
    private static readonly pb::FieldCodec<string> _single_originalWorksOrderNo_codec = pb::FieldCodec.ForClassWrapper<string>(186);
    private string originalWorksOrderNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OriginalWorksOrderNo {
      get { return originalWorksOrderNo_; }
      set {
        originalWorksOrderNo_ = value;
      }
    }


    /// <summary>Field number for the "remarks" field.</summary>
    public const int RemarksFieldNumber = 24;
    private static readonly pb::FieldCodec<string> _single_remarks_codec = pb::FieldCodec.ForClassWrapper<string>(194);
    private string remarks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remarks {
      get { return remarks_; }
      set {
        remarks_ = value;
      }
    }


    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 25;
    private static readonly pb::FieldCodec<string> _single_customerCode_codec = pb::FieldCodec.ForClassWrapper<string>(202);
    private string customerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = value;
      }
    }


    /// <summary>Field number for the "wOrderType" field.</summary>
    public const int WOrderTypeFieldNumber = 26;
    private int wOrderType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WOrderType {
      get { return wOrderType_; }
      set {
        wOrderType_ = value;
      }
    }

    /// <summary>Field number for the "workerCode" field.</summary>
    public const int WorkerCodeFieldNumber = 27;
    private static readonly pb::FieldCodec<string> _single_workerCode_codec = pb::FieldCodec.ForClassWrapper<string>(218);
    private string workerCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkerCode {
      get { return workerCode_; }
      set {
        workerCode_ = value;
      }
    }


    /// <summary>Field number for the "route" field.</summary>
    public const int RouteFieldNumber = 28;
    private static readonly pb::FieldCodec<string> _single_route_codec = pb::FieldCodec.ForClassWrapper<string>(226);
    private string route_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Route {
      get { return route_; }
      set {
        route_ = value;
      }
    }


    private object oneofActualStartDate_;
    /// <summary>Enum of possible cases for the "oneofActualStartDate" oneof.</summary>
    public enum OneofActualStartDateOneofCase {
      None = 0,
      ActualStartDate = 6,
    }
    private OneofActualStartDateOneofCase oneofActualStartDateCase_ = OneofActualStartDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofActualStartDateOneofCase OneofActualStartDateCase {
      get { return oneofActualStartDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofActualStartDate() {
      oneofActualStartDateCase_ = OneofActualStartDateOneofCase.None;
      oneofActualStartDate_ = null;
    }

    private object oneofActualDueDate_;
    /// <summary>Enum of possible cases for the "oneofActualDueDate" oneof.</summary>
    public enum OneofActualDueDateOneofCase {
      None = 0,
      ActualDueDate = 7,
    }
    private OneofActualDueDateOneofCase oneofActualDueDateCase_ = OneofActualDueDateOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneofActualDueDateOneofCase OneofActualDueDateCase {
      get { return oneofActualDueDateCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearOneofActualDueDate() {
      oneofActualDueDateCase_ = OneofActualDueDateOneofCase.None;
      oneofActualDueDate_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorksOrderNo != other.WorksOrderNo) return false;
      if (SerialNo != other.SerialNo) return false;
      if (Priority != other.Priority) return false;
      if (!object.Equals(OriginalStartDate, other.OriginalStartDate)) return false;
      if (!object.Equals(OriginalDueDate, other.OriginalDueDate)) return false;
      if (!object.Equals(ActualStartDate, other.ActualStartDate)) return false;
      if (!object.Equals(ActualDueDate, other.ActualDueDate)) return false;
      if (!object.Equals(StdMaterialCost, other.StdMaterialCost)) return false;
      if (!object.Equals(ActMaterialCost, other.ActMaterialCost)) return false;
      if (!object.Equals(StdLabCost, other.StdLabCost)) return false;
      if (!object.Equals(ActLabCost, other.ActLabCost)) return false;
      if (!object.Equals(StdSetupCost, other.StdSetupCost)) return false;
      if (!object.Equals(ActSetupCost, other.ActSetupCost)) return false;
      if (!object.Equals(StdOverheadCost, other.StdOverheadCost)) return false;
      if (!object.Equals(ActOverheadCost, other.ActOverheadCost)) return false;
      if (CompletedFlag != other.CompletedFlag) return false;
      if (IssuedFlag != other.IssuedFlag) return false;
      if (DirectChargeFlag != other.DirectChargeFlag) return false;
      if (CurrentKitNo != other.CurrentKitNo) return false;
      if (ReprintReqFlag != other.ReprintReqFlag) return false;
      if (OrderStatusFlag != other.OrderStatusFlag) return false;
      if (BusinessClassCode != other.BusinessClassCode) return false;
      if (OriginalWorksOrderNo != other.OriginalWorksOrderNo) return false;
      if (Remarks != other.Remarks) return false;
      if (CustomerCode != other.CustomerCode) return false;
      if (WOrderType != other.WOrderType) return false;
      if (WorkerCode != other.WorkerCode) return false;
      if (Route != other.Route) return false;
      if (OneofActualStartDateCase != other.OneofActualStartDateCase) return false;
      if (OneofActualDueDateCase != other.OneofActualDueDateCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorksOrderNo.Length != 0) hash ^= WorksOrderNo.GetHashCode();
      if (SerialNo != 0) hash ^= SerialNo.GetHashCode();
      if (Priority != 0) hash ^= Priority.GetHashCode();
      if (originalStartDate_ != null) hash ^= OriginalStartDate.GetHashCode();
      if (originalDueDate_ != null) hash ^= OriginalDueDate.GetHashCode();
      if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) hash ^= ActualStartDate.GetHashCode();
      if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) hash ^= ActualDueDate.GetHashCode();
      if (stdMaterialCost_ != null) hash ^= StdMaterialCost.GetHashCode();
      if (actMaterialCost_ != null) hash ^= ActMaterialCost.GetHashCode();
      if (stdLabCost_ != null) hash ^= StdLabCost.GetHashCode();
      if (actLabCost_ != null) hash ^= ActLabCost.GetHashCode();
      if (stdSetupCost_ != null) hash ^= StdSetupCost.GetHashCode();
      if (actSetupCost_ != null) hash ^= ActSetupCost.GetHashCode();
      if (stdOverheadCost_ != null) hash ^= StdOverheadCost.GetHashCode();
      if (actOverheadCost_ != null) hash ^= ActOverheadCost.GetHashCode();
      if (CompletedFlag.Length != 0) hash ^= CompletedFlag.GetHashCode();
      if (IssuedFlag != 0) hash ^= IssuedFlag.GetHashCode();
      if (DirectChargeFlag != 0) hash ^= DirectChargeFlag.GetHashCode();
      if (CurrentKitNo != 0) hash ^= CurrentKitNo.GetHashCode();
      if (ReprintReqFlag != 0) hash ^= ReprintReqFlag.GetHashCode();
      if (OrderStatusFlag != 0) hash ^= OrderStatusFlag.GetHashCode();
      if (businessClassCode_ != null) hash ^= BusinessClassCode.GetHashCode();
      if (originalWorksOrderNo_ != null) hash ^= OriginalWorksOrderNo.GetHashCode();
      if (remarks_ != null) hash ^= Remarks.GetHashCode();
      if (customerCode_ != null) hash ^= CustomerCode.GetHashCode();
      if (WOrderType != 0) hash ^= WOrderType.GetHashCode();
      if (workerCode_ != null) hash ^= WorkerCode.GetHashCode();
      if (route_ != null) hash ^= Route.GetHashCode();
      hash ^= (int) oneofActualStartDateCase_;
      hash ^= (int) oneofActualDueDateCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorksOrderNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorksOrderNo);
      }
      if (SerialNo != 0) {
        output.WriteRawTag(16);
        output.WriteSInt32(SerialNo);
      }
      if (Priority != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(Priority);
      }
      if (originalStartDate_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OriginalStartDate);
      }
      if (originalDueDate_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(OriginalDueDate);
      }
      if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) {
        output.WriteRawTag(50);
        output.WriteMessage(ActualStartDate);
      }
      if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) {
        output.WriteRawTag(58);
        output.WriteMessage(ActualDueDate);
      }
      if (stdMaterialCost_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(StdMaterialCost);
      }
      if (actMaterialCost_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(ActMaterialCost);
      }
      if (stdLabCost_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StdLabCost);
      }
      if (actLabCost_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ActLabCost);
      }
      if (stdSetupCost_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(StdSetupCost);
      }
      if (actSetupCost_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(ActSetupCost);
      }
      if (stdOverheadCost_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(StdOverheadCost);
      }
      if (actOverheadCost_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ActOverheadCost);
      }
      if (CompletedFlag.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(CompletedFlag);
      }
      if (IssuedFlag != 0) {
        output.WriteRawTag(136, 1);
        output.WriteSInt32(IssuedFlag);
      }
      if (DirectChargeFlag != 0) {
        output.WriteRawTag(144, 1);
        output.WriteSInt32(DirectChargeFlag);
      }
      if (CurrentKitNo != 0) {
        output.WriteRawTag(152, 1);
        output.WriteSInt32(CurrentKitNo);
      }
      if (ReprintReqFlag != 0) {
        output.WriteRawTag(160, 1);
        output.WriteSInt32(ReprintReqFlag);
      }
      if (OrderStatusFlag != 0) {
        output.WriteRawTag(168, 1);
        output.WriteSInt32(OrderStatusFlag);
      }
      if (businessClassCode_ != null) {
        _single_businessClassCode_codec.WriteTagAndValue(output, BusinessClassCode);
      }
      if (originalWorksOrderNo_ != null) {
        _single_originalWorksOrderNo_codec.WriteTagAndValue(output, OriginalWorksOrderNo);
      }
      if (remarks_ != null) {
        _single_remarks_codec.WriteTagAndValue(output, Remarks);
      }
      if (customerCode_ != null) {
        _single_customerCode_codec.WriteTagAndValue(output, CustomerCode);
      }
      if (WOrderType != 0) {
        output.WriteRawTag(208, 1);
        output.WriteSInt32(WOrderType);
      }
      if (workerCode_ != null) {
        _single_workerCode_codec.WriteTagAndValue(output, WorkerCode);
      }
      if (route_ != null) {
        _single_route_codec.WriteTagAndValue(output, Route);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorksOrderNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorksOrderNo);
      }
      if (SerialNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(SerialNo);
      }
      if (Priority != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Priority);
      }
      if (originalStartDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalStartDate);
      }
      if (originalDueDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OriginalDueDate);
      }
      if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualStartDate);
      }
      if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActualDueDate);
      }
      if (stdMaterialCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdMaterialCost);
      }
      if (actMaterialCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActMaterialCost);
      }
      if (stdLabCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdLabCost);
      }
      if (actLabCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActLabCost);
      }
      if (stdSetupCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdSetupCost);
      }
      if (actSetupCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActSetupCost);
      }
      if (stdOverheadCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StdOverheadCost);
      }
      if (actOverheadCost_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ActOverheadCost);
      }
      if (CompletedFlag.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CompletedFlag);
      }
      if (IssuedFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(IssuedFlag);
      }
      if (DirectChargeFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(DirectChargeFlag);
      }
      if (CurrentKitNo != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(CurrentKitNo);
      }
      if (ReprintReqFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(ReprintReqFlag);
      }
      if (OrderStatusFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(OrderStatusFlag);
      }
      if (businessClassCode_ != null) {
        size += _single_businessClassCode_codec.CalculateSizeWithTag(BusinessClassCode);
      }
      if (originalWorksOrderNo_ != null) {
        size += _single_originalWorksOrderNo_codec.CalculateSizeWithTag(OriginalWorksOrderNo);
      }
      if (remarks_ != null) {
        size += _single_remarks_codec.CalculateSizeWithTag(Remarks);
      }
      if (customerCode_ != null) {
        size += _single_customerCode_codec.CalculateSizeWithTag(CustomerCode);
      }
      if (WOrderType != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(WOrderType);
      }
      if (workerCode_ != null) {
        size += _single_workerCode_codec.CalculateSizeWithTag(WorkerCode);
      }
      if (route_ != null) {
        size += _single_route_codec.CalculateSizeWithTag(Route);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorksOrderNo.Length != 0) {
        WorksOrderNo = other.WorksOrderNo;
      }
      if (other.SerialNo != 0) {
        SerialNo = other.SerialNo;
      }
      if (other.Priority != 0) {
        Priority = other.Priority;
      }
      if (other.originalStartDate_ != null) {
        if (originalStartDate_ == null) {
          OriginalStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalStartDate.MergeFrom(other.OriginalStartDate);
      }
      if (other.originalDueDate_ != null) {
        if (originalDueDate_ == null) {
          OriginalDueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OriginalDueDate.MergeFrom(other.OriginalDueDate);
      }
      if (other.stdMaterialCost_ != null) {
        if (stdMaterialCost_ == null) {
          StdMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdMaterialCost.MergeFrom(other.StdMaterialCost);
      }
      if (other.actMaterialCost_ != null) {
        if (actMaterialCost_ == null) {
          ActMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActMaterialCost.MergeFrom(other.ActMaterialCost);
      }
      if (other.stdLabCost_ != null) {
        if (stdLabCost_ == null) {
          StdLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdLabCost.MergeFrom(other.StdLabCost);
      }
      if (other.actLabCost_ != null) {
        if (actLabCost_ == null) {
          ActLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActLabCost.MergeFrom(other.ActLabCost);
      }
      if (other.stdSetupCost_ != null) {
        if (stdSetupCost_ == null) {
          StdSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdSetupCost.MergeFrom(other.StdSetupCost);
      }
      if (other.actSetupCost_ != null) {
        if (actSetupCost_ == null) {
          ActSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActSetupCost.MergeFrom(other.ActSetupCost);
      }
      if (other.stdOverheadCost_ != null) {
        if (stdOverheadCost_ == null) {
          StdOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        StdOverheadCost.MergeFrom(other.StdOverheadCost);
      }
      if (other.actOverheadCost_ != null) {
        if (actOverheadCost_ == null) {
          ActOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
        }
        ActOverheadCost.MergeFrom(other.ActOverheadCost);
      }
      if (other.CompletedFlag.Length != 0) {
        CompletedFlag = other.CompletedFlag;
      }
      if (other.IssuedFlag != 0) {
        IssuedFlag = other.IssuedFlag;
      }
      if (other.DirectChargeFlag != 0) {
        DirectChargeFlag = other.DirectChargeFlag;
      }
      if (other.CurrentKitNo != 0) {
        CurrentKitNo = other.CurrentKitNo;
      }
      if (other.ReprintReqFlag != 0) {
        ReprintReqFlag = other.ReprintReqFlag;
      }
      if (other.OrderStatusFlag != 0) {
        OrderStatusFlag = other.OrderStatusFlag;
      }
      if (other.businessClassCode_ != null) {
        if (businessClassCode_ == null || other.BusinessClassCode != 0) {
          BusinessClassCode = other.BusinessClassCode;
        }
      }
      if (other.originalWorksOrderNo_ != null) {
        if (originalWorksOrderNo_ == null || other.OriginalWorksOrderNo != "") {
          OriginalWorksOrderNo = other.OriginalWorksOrderNo;
        }
      }
      if (other.remarks_ != null) {
        if (remarks_ == null || other.Remarks != "") {
          Remarks = other.Remarks;
        }
      }
      if (other.customerCode_ != null) {
        if (customerCode_ == null || other.CustomerCode != "") {
          CustomerCode = other.CustomerCode;
        }
      }
      if (other.WOrderType != 0) {
        WOrderType = other.WOrderType;
      }
      if (other.workerCode_ != null) {
        if (workerCode_ == null || other.WorkerCode != "") {
          WorkerCode = other.WorkerCode;
        }
      }
      if (other.route_ != null) {
        if (route_ == null || other.Route != "") {
          Route = other.Route;
        }
      }
      switch (other.OneofActualStartDateCase) {
        case OneofActualStartDateOneofCase.ActualStartDate:
          if (ActualStartDate == null) {
            ActualStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          ActualStartDate.MergeFrom(other.ActualStartDate);
          break;
      }

      switch (other.OneofActualDueDateCase) {
        case OneofActualDueDateOneofCase.ActualDueDate:
          if (ActualDueDate == null) {
            ActualDueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
          }
          ActualDueDate.MergeFrom(other.ActualDueDate);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorksOrderNo = input.ReadString();
            break;
          }
          case 16: {
            SerialNo = input.ReadSInt32();
            break;
          }
          case 24: {
            Priority = input.ReadSInt32();
            break;
          }
          case 34: {
            if (originalStartDate_ == null) {
              OriginalStartDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalStartDate);
            break;
          }
          case 42: {
            if (originalDueDate_ == null) {
              OriginalDueDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OriginalDueDate);
            break;
          }
          case 50: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofActualStartDateCase_ == OneofActualStartDateOneofCase.ActualStartDate) {
              subBuilder.MergeFrom(ActualStartDate);
            }
            input.ReadMessage(subBuilder);
            ActualStartDate = subBuilder;
            break;
          }
          case 58: {
            global::Google.Protobuf.WellKnownTypes.Timestamp subBuilder = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            if (oneofActualDueDateCase_ == OneofActualDueDateOneofCase.ActualDueDate) {
              subBuilder.MergeFrom(ActualDueDate);
            }
            input.ReadMessage(subBuilder);
            ActualDueDate = subBuilder;
            break;
          }
          case 66: {
            if (stdMaterialCost_ == null) {
              StdMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdMaterialCost);
            break;
          }
          case 74: {
            if (actMaterialCost_ == null) {
              ActMaterialCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActMaterialCost);
            break;
          }
          case 82: {
            if (stdLabCost_ == null) {
              StdLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdLabCost);
            break;
          }
          case 90: {
            if (actLabCost_ == null) {
              ActLabCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActLabCost);
            break;
          }
          case 98: {
            if (stdSetupCost_ == null) {
              StdSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdSetupCost);
            break;
          }
          case 106: {
            if (actSetupCost_ == null) {
              ActSetupCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActSetupCost);
            break;
          }
          case 114: {
            if (stdOverheadCost_ == null) {
              StdOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(StdOverheadCost);
            break;
          }
          case 122: {
            if (actOverheadCost_ == null) {
              ActOverheadCost = new global::HaccpManager.WordersProtos.GrpcDecimal();
            }
            input.ReadMessage(ActOverheadCost);
            break;
          }
          case 130: {
            CompletedFlag = input.ReadString();
            break;
          }
          case 136: {
            IssuedFlag = input.ReadSInt32();
            break;
          }
          case 144: {
            DirectChargeFlag = input.ReadSInt32();
            break;
          }
          case 152: {
            CurrentKitNo = input.ReadSInt32();
            break;
          }
          case 160: {
            ReprintReqFlag = input.ReadSInt32();
            break;
          }
          case 168: {
            OrderStatusFlag = input.ReadSInt32();
            break;
          }
          case 178: {
            int? value = _single_businessClassCode_codec.Read(input);
            if (businessClassCode_ == null || value != 0) {
              BusinessClassCode = value;
            }
            break;
          }
          case 186: {
            string value = _single_originalWorksOrderNo_codec.Read(input);
            if (originalWorksOrderNo_ == null || value != "") {
              OriginalWorksOrderNo = value;
            }
            break;
          }
          case 194: {
            string value = _single_remarks_codec.Read(input);
            if (remarks_ == null || value != "") {
              Remarks = value;
            }
            break;
          }
          case 202: {
            string value = _single_customerCode_codec.Read(input);
            if (customerCode_ == null || value != "") {
              CustomerCode = value;
            }
            break;
          }
          case 208: {
            WOrderType = input.ReadSInt32();
            break;
          }
          case 218: {
            string value = _single_workerCode_codec.Read(input);
            if (workerCode_ == null || value != "") {
              WorkerCode = value;
            }
            break;
          }
          case 226: {
            string value = _single_route_codec.Read(input);
            if (route_ == null || value != "") {
              Route = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResponse : pb::IMessage<UpdateResponse> {
    private static readonly pb::MessageParser<UpdateResponse> _parser = new pb::MessageParser<UpdateResponse>(() => new UpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse(UpdateResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse Clone() {
      return new UpdateResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      worksOrderNo_ = other.worksOrderNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "worksOrderNo" field.</summary>
    public const int WorksOrderNoFieldNumber = 1;
    private string worksOrderNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorksOrderNo {
      get { return worksOrderNo_; }
      set {
        worksOrderNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorksOrderNo != other.WorksOrderNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorksOrderNo.Length != 0) hash ^= WorksOrderNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorksOrderNo.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorksOrderNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorksOrderNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorksOrderNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorksOrderNo.Length != 0) {
        WorksOrderNo = other.WorksOrderNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorksOrderNo = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.WordersProtos.WordersReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
