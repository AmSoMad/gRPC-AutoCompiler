// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mes/Dept.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HaccpManager.DeptProtos {

  /// <summary>Holder for reflection information generated from mes/Dept.proto</summary>
  public static partial class DeptReflection {

    #region Descriptor
    /// <summary>File descriptor for mes/Dept.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DeptReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5tZXMvRGVwdC5wcm90bxIHRGVwdFN2YxofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL2R1cmF0aW9uLnByb3Rv",
            "Gh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aG2dvb2dsZS9wcm90",
            "b2J1Zi9lbXB0eS5wcm90byIrCgtHcnBjRGVjaW1hbBINCgV1bml0cxgBIAEo",
            "AxINCgVuYW5vcxgCIAEoDyIwCgxEZXB0UmVzcG9uc2USDAoEZGVwdBgBIAEo",
            "DBISCgpqc29uU3RyaW5nGAIgASgJIjYKD0RlcHRTZXRSZXNwb25zZRIPCgdk",
            "ZXB0U2V0GAEgASgMEhIKCmpzb25TdHJpbmcYAiABKAkiNgoPRGF0YVNldFJl",
            "c3BvbnNlEg8KB2RhdGFTZXQYASABKAwSEgoKanNvblN0cmluZxgCIAEoCSIy",
            "ChtHZXRGb3JFeHBlbnNlQWNjb3VudFJlcXVlc3QSEwoLZXhwZW5zZUNvZGUY",
            "ASABKBEiNwoaR2V0Rm9yQnVzaW5lc3NDbGFzc1JlcXVlc3QSGQoRYnVzaW5l",
            "c3NDbGFzc0NvZGUYASABKBEiIwoPR2V0QnlLZXlSZXF1ZXN0EhAKCGRlcHRD",
            "b2RlGAEgASgRIuoCCg1JbnNlcnRSZXF1ZXN0EhAKCGRlcHRDb2RlGAEgASgR",
            "EjAKC2V4cGVuc2VDb2RlGAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDMy",
            "VmFsdWUSEAoIY29kZU5hbWUYAyABKAkSDgoGcGFyZW50GAQgASgREg0KBWNo",
            "aWxkGAUgASgREg8KB2xldmVsTm8YBiABKBESNgoRYnVzaW5lc3NDbGFzc0Nv",
            "ZGUYByABKAsyGy5nb29nbGUucHJvdG9idWYuSW50MzJWYWx1ZRIRCglkZXB0",
            "TGV2ZWwYCCABKBESDwoHdXNlRmxhZxgJIAEoERINCgVpdGVtcxgKIAEoERIT",
            "Cgtjb21wYW55Q29kZRgLIAEoERISCgpidWRnZXRGbGFnGAwgASgREi4KCGxp",
            "bmtDb2RlGA0gASgLMhwuZ29vZ2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEg8K",
            "B3RheEZsYWcYDiABKBEi6gIKDVVwZGF0ZVJlcXVlc3QSEAoIZGVwdENvZGUY",
            "ASABKBESMAoLZXhwZW5zZUNvZGUYAiABKAsyGy5nb29nbGUucHJvdG9idWYu",
            "SW50MzJWYWx1ZRIQCghjb2RlTmFtZRgDIAEoCRIOCgZwYXJlbnQYBCABKBES",
            "DQoFY2hpbGQYBSABKBESDwoHbGV2ZWxObxgGIAEoERI2ChFidXNpbmVzc0Ns",
            "YXNzQ29kZRgHIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQzMlZhbHVlEhEK",
            "CWRlcHRMZXZlbBgIIAEoERIPCgd1c2VGbGFnGAkgASgREg0KBWl0ZW1zGAog",
            "ASgREhMKC2NvbXBhbnlDb2RlGAsgASgREhIKCmJ1ZGdldEZsYWcYDCABKBES",
            "LgoIbGlua0NvZGUYDSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSDwoHdGF4RmxhZxgOIAEoESIfCg5VcGRhdGVSZXNwb25zZRINCgVjb3Vu",
            "dBgBIAEoBSIhCg1EZWxldGVSZXF1ZXN0EhAKCGRlcHRDb2RlGAEgASgRIh8K",
            "DkRlbGV0ZVJlc3BvbnNlEg0KBWNvdW50GAEgASgFMtAGCgREZXB0ElYKFEdl",
            "dEZvckV4cGVuc2VBY2NvdW50EiQuRGVwdFN2Yy5HZXRGb3JFeHBlbnNlQWNj",
            "b3VudFJlcXVlc3QaGC5EZXB0U3ZjLkRlcHRTZXRSZXNwb25zZRJaChhHZXRG",
            "b3JFeHBlbnNlQWNjb3VudEpzb24SJC5EZXB0U3ZjLkdldEZvckV4cGVuc2VB",
            "Y2NvdW50UmVxdWVzdBoYLkRlcHRTdmMuRGVwdFNldFJlc3BvbnNlElQKE0dl",
            "dEZvckJ1c2luZXNzQ2xhc3MSIy5EZXB0U3ZjLkdldEZvckJ1c2luZXNzQ2xh",
            "c3NSZXF1ZXN0GhguRGVwdFN2Yy5EZXB0U2V0UmVzcG9uc2USWAoXR2V0Rm9y",
            "QnVzaW5lc3NDbGFzc0pzb24SIy5EZXB0U3ZjLkdldEZvckJ1c2luZXNzQ2xh",
            "c3NSZXF1ZXN0GhguRGVwdFN2Yy5EZXB0U2V0UmVzcG9uc2USOwoIR2V0QnlL",
            "ZXkSGC5EZXB0U3ZjLkdldEJ5S2V5UmVxdWVzdBoVLkRlcHRTdmMuRGVwdFJl",
            "c3BvbnNlEj8KDEdldEJ5S2V5SnNvbhIYLkRlcHRTdmMuR2V0QnlLZXlSZXF1",
            "ZXN0GhUuRGVwdFN2Yy5EZXB0UmVzcG9uc2USOgoGR2V0QWxsEhYuZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5GhguRGVwdFN2Yy5EZXB0U2V0UmVzcG9uc2USPgoK",
            "R2V0QWxsSnNvbhIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoYLkRlcHRTdmMu",
            "RGVwdFNldFJlc3BvbnNlEjcKBkluc2VydBIWLkRlcHRTdmMuSW5zZXJ0UmVx",
            "dWVzdBoVLkRlcHRTdmMuRGVwdFJlc3BvbnNlEjsKCkluc2VydEpzb24SFi5E",
            "ZXB0U3ZjLkluc2VydFJlcXVlc3QaFS5EZXB0U3ZjLkRlcHRSZXNwb25zZRI5",
            "CgZVcGRhdGUSFi5EZXB0U3ZjLlVwZGF0ZVJlcXVlc3QaFy5EZXB0U3ZjLlVw",
            "ZGF0ZVJlc3BvbnNlEjkKBkRlbGV0ZRIWLkRlcHRTdmMuRGVsZXRlUmVxdWVz",
            "dBoXLkRlcHRTdmMuRGVsZXRlUmVzcG9uc2VCGqoCF0hhY2NwTWFuYWdlci5E",
            "ZXB0UHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.GrpcDecimal), global::HaccpManager.DeptProtos.GrpcDecimal.Parser, new[]{ "Units", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.DeptResponse), global::HaccpManager.DeptProtos.DeptResponse.Parser, new[]{ "Dept", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.DeptSetResponse), global::HaccpManager.DeptProtos.DeptSetResponse.Parser, new[]{ "DeptSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.DataSetResponse), global::HaccpManager.DeptProtos.DataSetResponse.Parser, new[]{ "DataSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.GetForExpenseAccountRequest), global::HaccpManager.DeptProtos.GetForExpenseAccountRequest.Parser, new[]{ "ExpenseCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.GetForBusinessClassRequest), global::HaccpManager.DeptProtos.GetForBusinessClassRequest.Parser, new[]{ "BusinessClassCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.GetByKeyRequest), global::HaccpManager.DeptProtos.GetByKeyRequest.Parser, new[]{ "DeptCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.InsertRequest), global::HaccpManager.DeptProtos.InsertRequest.Parser, new[]{ "DeptCode", "ExpenseCode", "CodeName", "Parent", "Child", "LevelNo", "BusinessClassCode", "DeptLevel", "UseFlag", "Items", "CompanyCode", "BudgetFlag", "LinkCode", "TaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.UpdateRequest), global::HaccpManager.DeptProtos.UpdateRequest.Parser, new[]{ "DeptCode", "ExpenseCode", "CodeName", "Parent", "Child", "LevelNo", "BusinessClassCode", "DeptLevel", "UseFlag", "Items", "CompanyCode", "BudgetFlag", "LinkCode", "TaxFlag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.UpdateResponse), global::HaccpManager.DeptProtos.UpdateResponse.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.DeleteRequest), global::HaccpManager.DeptProtos.DeleteRequest.Parser, new[]{ "DeptCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.DeptProtos.DeleteResponse), global::HaccpManager.DeptProtos.DeleteResponse.Parser, new[]{ "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcDecimal : pb::IMessage<GrpcDecimal> {
    private static readonly pb::MessageParser<GrpcDecimal> _parser = new pb::MessageParser<GrpcDecimal>(() => new GrpcDecimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDecimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal(GrpcDecimal other) : this() {
      units_ = other.units_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal Clone() {
      return new GrpcDecimal(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private long units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDecimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDecimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0L) hash ^= Units.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Units);
      }
      if (Nanos != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Units);
      }
      if (Nanos != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDecimal other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0L) {
        Units = other.Units;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Units = input.ReadInt64();
            break;
          }
          case 21: {
            Nanos = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeptResponse : pb::IMessage<DeptResponse> {
    private static readonly pb::MessageParser<DeptResponse> _parser = new pb::MessageParser<DeptResponse>(() => new DeptResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeptResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeptResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeptResponse(DeptResponse other) : this() {
      dept_ = other.dept_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeptResponse Clone() {
      return new DeptResponse(this);
    }

    /// <summary>Field number for the "dept" field.</summary>
    public const int DeptFieldNumber = 1;
    private pb::ByteString dept_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Dept {
      get { return dept_; }
      set {
        dept_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeptResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeptResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Dept != other.Dept) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Dept.Length != 0) hash ^= Dept.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Dept.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Dept);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Dept.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Dept);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeptResponse other) {
      if (other == null) {
        return;
      }
      if (other.Dept.Length != 0) {
        Dept = other.Dept;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Dept = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeptSetResponse : pb::IMessage<DeptSetResponse> {
    private static readonly pb::MessageParser<DeptSetResponse> _parser = new pb::MessageParser<DeptSetResponse>(() => new DeptSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeptSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeptSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeptSetResponse(DeptSetResponse other) : this() {
      deptSet_ = other.deptSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeptSetResponse Clone() {
      return new DeptSetResponse(this);
    }

    /// <summary>Field number for the "deptSet" field.</summary>
    public const int DeptSetFieldNumber = 1;
    private pb::ByteString deptSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DeptSet {
      get { return deptSet_; }
      set {
        deptSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeptSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeptSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeptSet != other.DeptSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeptSet.Length != 0) hash ^= DeptSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeptSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DeptSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeptSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DeptSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeptSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DeptSet.Length != 0) {
        DeptSet = other.DeptSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DeptSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSetResponse : pb::IMessage<DataSetResponse> {
    private static readonly pb::MessageParser<DataSetResponse> _parser = new pb::MessageParser<DataSetResponse>(() => new DataSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse(DataSetResponse other) : this() {
      dataSet_ = other.dataSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse Clone() {
      return new DataSetResponse(this);
    }

    /// <summary>Field number for the "dataSet" field.</summary>
    public const int DataSetFieldNumber = 1;
    private pb::ByteString dataSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataSet {
      get { return dataSet_; }
      set {
        dataSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSet != other.DataSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSet.Length != 0) hash ^= DataSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DataSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DataSet.Length != 0) {
        DataSet = other.DataSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForExpenseAccountRequest : pb::IMessage<GetForExpenseAccountRequest> {
    private static readonly pb::MessageParser<GetForExpenseAccountRequest> _parser = new pb::MessageParser<GetForExpenseAccountRequest>(() => new GetForExpenseAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForExpenseAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForExpenseAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForExpenseAccountRequest(GetForExpenseAccountRequest other) : this() {
      expenseCode_ = other.expenseCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForExpenseAccountRequest Clone() {
      return new GetForExpenseAccountRequest(this);
    }

    /// <summary>Field number for the "expenseCode" field.</summary>
    public const int ExpenseCodeFieldNumber = 1;
    private int expenseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExpenseCode {
      get { return expenseCode_; }
      set {
        expenseCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForExpenseAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForExpenseAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ExpenseCode != other.ExpenseCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ExpenseCode != 0) hash ^= ExpenseCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ExpenseCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(ExpenseCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ExpenseCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(ExpenseCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForExpenseAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.ExpenseCode != 0) {
        ExpenseCode = other.ExpenseCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ExpenseCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetForBusinessClassRequest : pb::IMessage<GetForBusinessClassRequest> {
    private static readonly pb::MessageParser<GetForBusinessClassRequest> _parser = new pb::MessageParser<GetForBusinessClassRequest>(() => new GetForBusinessClassRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetForBusinessClassRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForBusinessClassRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForBusinessClassRequest(GetForBusinessClassRequest other) : this() {
      businessClassCode_ = other.businessClassCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetForBusinessClassRequest Clone() {
      return new GetForBusinessClassRequest(this);
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 1;
    private int businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetForBusinessClassRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetForBusinessClassRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BusinessClassCode != other.BusinessClassCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BusinessClassCode != 0) hash ^= BusinessClassCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BusinessClassCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(BusinessClassCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BusinessClassCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BusinessClassCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetForBusinessClassRequest other) {
      if (other == null) {
        return;
      }
      if (other.BusinessClassCode != 0) {
        BusinessClassCode = other.BusinessClassCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BusinessClassCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByKeyRequest : pb::IMessage<GetByKeyRequest> {
    private static readonly pb::MessageParser<GetByKeyRequest> _parser = new pb::MessageParser<GetByKeyRequest>(() => new GetByKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest(GetByKeyRequest other) : this() {
      deptCode_ = other.deptCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest Clone() {
      return new GetByKeyRequest(this);
    }

    /// <summary>Field number for the "deptCode" field.</summary>
    public const int DeptCodeFieldNumber = 1;
    private int deptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeptCode {
      get { return deptCode_; }
      set {
        deptCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeptCode != other.DeptCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeptCode != 0) hash ^= DeptCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeptCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(DeptCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeptCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DeptCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeptCode != 0) {
        DeptCode = other.DeptCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeptCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertRequest : pb::IMessage<InsertRequest> {
    private static readonly pb::MessageParser<InsertRequest> _parser = new pb::MessageParser<InsertRequest>(() => new InsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest(InsertRequest other) : this() {
      deptCode_ = other.deptCode_;
      ExpenseCode = other.ExpenseCode;
      codeName_ = other.codeName_;
      parent_ = other.parent_;
      child_ = other.child_;
      levelNo_ = other.levelNo_;
      BusinessClassCode = other.BusinessClassCode;
      deptLevel_ = other.deptLevel_;
      useFlag_ = other.useFlag_;
      items_ = other.items_;
      companyCode_ = other.companyCode_;
      budgetFlag_ = other.budgetFlag_;
      LinkCode = other.LinkCode;
      taxFlag_ = other.taxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest Clone() {
      return new InsertRequest(this);
    }

    /// <summary>Field number for the "deptCode" field.</summary>
    public const int DeptCodeFieldNumber = 1;
    private int deptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeptCode {
      get { return deptCode_; }
      set {
        deptCode_ = value;
      }
    }

    /// <summary>Field number for the "expenseCode" field.</summary>
    public const int ExpenseCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_expenseCode_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? expenseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ExpenseCode {
      get { return expenseCode_; }
      set {
        expenseCode_ = value;
      }
    }


    /// <summary>Field number for the "codeName" field.</summary>
    public const int CodeNameFieldNumber = 3;
    private string codeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodeName {
      get { return codeName_; }
      set {
        codeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private int parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 5;
    private int child_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Child {
      get { return child_; }
      set {
        child_ = value;
      }
    }

    /// <summary>Field number for the "levelNo" field.</summary>
    public const int LevelNoFieldNumber = 6;
    private int levelNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelNo {
      get { return levelNo_; }
      set {
        levelNo_ = value;
      }
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 7;
    private static readonly pb::FieldCodec<int?> _single_businessClassCode_codec = pb::FieldCodec.ForStructWrapper<int>(58);
    private int? businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }


    /// <summary>Field number for the "deptLevel" field.</summary>
    public const int DeptLevelFieldNumber = 8;
    private int deptLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeptLevel {
      get { return deptLevel_; }
      set {
        deptLevel_ = value;
      }
    }

    /// <summary>Field number for the "useFlag" field.</summary>
    public const int UseFlagFieldNumber = 9;
    private int useFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UseFlag {
      get { return useFlag_; }
      set {
        useFlag_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 10;
    private int items_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Items {
      get { return items_; }
      set {
        items_ = value;
      }
    }

    /// <summary>Field number for the "companyCode" field.</summary>
    public const int CompanyCodeFieldNumber = 11;
    private int companyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompanyCode {
      get { return companyCode_; }
      set {
        companyCode_ = value;
      }
    }

    /// <summary>Field number for the "budgetFlag" field.</summary>
    public const int BudgetFlagFieldNumber = 12;
    private int budgetFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BudgetFlag {
      get { return budgetFlag_; }
      set {
        budgetFlag_ = value;
      }
    }

    /// <summary>Field number for the "linkCode" field.</summary>
    public const int LinkCodeFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_linkCode_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string linkCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkCode {
      get { return linkCode_; }
      set {
        linkCode_ = value;
      }
    }


    /// <summary>Field number for the "taxFlag" field.</summary>
    public const int TaxFlagFieldNumber = 14;
    private int taxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaxFlag {
      get { return taxFlag_; }
      set {
        taxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeptCode != other.DeptCode) return false;
      if (ExpenseCode != other.ExpenseCode) return false;
      if (CodeName != other.CodeName) return false;
      if (Parent != other.Parent) return false;
      if (Child != other.Child) return false;
      if (LevelNo != other.LevelNo) return false;
      if (BusinessClassCode != other.BusinessClassCode) return false;
      if (DeptLevel != other.DeptLevel) return false;
      if (UseFlag != other.UseFlag) return false;
      if (Items != other.Items) return false;
      if (CompanyCode != other.CompanyCode) return false;
      if (BudgetFlag != other.BudgetFlag) return false;
      if (LinkCode != other.LinkCode) return false;
      if (TaxFlag != other.TaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeptCode != 0) hash ^= DeptCode.GetHashCode();
      if (expenseCode_ != null) hash ^= ExpenseCode.GetHashCode();
      if (CodeName.Length != 0) hash ^= CodeName.GetHashCode();
      if (Parent != 0) hash ^= Parent.GetHashCode();
      if (Child != 0) hash ^= Child.GetHashCode();
      if (LevelNo != 0) hash ^= LevelNo.GetHashCode();
      if (businessClassCode_ != null) hash ^= BusinessClassCode.GetHashCode();
      if (DeptLevel != 0) hash ^= DeptLevel.GetHashCode();
      if (UseFlag != 0) hash ^= UseFlag.GetHashCode();
      if (Items != 0) hash ^= Items.GetHashCode();
      if (CompanyCode != 0) hash ^= CompanyCode.GetHashCode();
      if (BudgetFlag != 0) hash ^= BudgetFlag.GetHashCode();
      if (linkCode_ != null) hash ^= LinkCode.GetHashCode();
      if (TaxFlag != 0) hash ^= TaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeptCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(DeptCode);
      }
      if (expenseCode_ != null) {
        _single_expenseCode_codec.WriteTagAndValue(output, ExpenseCode);
      }
      if (CodeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CodeName);
      }
      if (Parent != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Parent);
      }
      if (Child != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Child);
      }
      if (LevelNo != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(LevelNo);
      }
      if (businessClassCode_ != null) {
        _single_businessClassCode_codec.WriteTagAndValue(output, BusinessClassCode);
      }
      if (DeptLevel != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(DeptLevel);
      }
      if (UseFlag != 0) {
        output.WriteRawTag(72);
        output.WriteSInt32(UseFlag);
      }
      if (Items != 0) {
        output.WriteRawTag(80);
        output.WriteSInt32(Items);
      }
      if (CompanyCode != 0) {
        output.WriteRawTag(88);
        output.WriteSInt32(CompanyCode);
      }
      if (BudgetFlag != 0) {
        output.WriteRawTag(96);
        output.WriteSInt32(BudgetFlag);
      }
      if (linkCode_ != null) {
        _single_linkCode_codec.WriteTagAndValue(output, LinkCode);
      }
      if (TaxFlag != 0) {
        output.WriteRawTag(112);
        output.WriteSInt32(TaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeptCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DeptCode);
      }
      if (expenseCode_ != null) {
        size += _single_expenseCode_codec.CalculateSizeWithTag(ExpenseCode);
      }
      if (CodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeName);
      }
      if (Parent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Parent);
      }
      if (Child != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Child);
      }
      if (LevelNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LevelNo);
      }
      if (businessClassCode_ != null) {
        size += _single_businessClassCode_codec.CalculateSizeWithTag(BusinessClassCode);
      }
      if (DeptLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DeptLevel);
      }
      if (UseFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UseFlag);
      }
      if (Items != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Items);
      }
      if (CompanyCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CompanyCode);
      }
      if (BudgetFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BudgetFlag);
      }
      if (linkCode_ != null) {
        size += _single_linkCode_codec.CalculateSizeWithTag(LinkCode);
      }
      if (TaxFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TaxFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeptCode != 0) {
        DeptCode = other.DeptCode;
      }
      if (other.expenseCode_ != null) {
        if (expenseCode_ == null || other.ExpenseCode != 0) {
          ExpenseCode = other.ExpenseCode;
        }
      }
      if (other.CodeName.Length != 0) {
        CodeName = other.CodeName;
      }
      if (other.Parent != 0) {
        Parent = other.Parent;
      }
      if (other.Child != 0) {
        Child = other.Child;
      }
      if (other.LevelNo != 0) {
        LevelNo = other.LevelNo;
      }
      if (other.businessClassCode_ != null) {
        if (businessClassCode_ == null || other.BusinessClassCode != 0) {
          BusinessClassCode = other.BusinessClassCode;
        }
      }
      if (other.DeptLevel != 0) {
        DeptLevel = other.DeptLevel;
      }
      if (other.UseFlag != 0) {
        UseFlag = other.UseFlag;
      }
      if (other.Items != 0) {
        Items = other.Items;
      }
      if (other.CompanyCode != 0) {
        CompanyCode = other.CompanyCode;
      }
      if (other.BudgetFlag != 0) {
        BudgetFlag = other.BudgetFlag;
      }
      if (other.linkCode_ != null) {
        if (linkCode_ == null || other.LinkCode != "") {
          LinkCode = other.LinkCode;
        }
      }
      if (other.TaxFlag != 0) {
        TaxFlag = other.TaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeptCode = input.ReadSInt32();
            break;
          }
          case 18: {
            int? value = _single_expenseCode_codec.Read(input);
            if (expenseCode_ == null || value != 0) {
              ExpenseCode = value;
            }
            break;
          }
          case 26: {
            CodeName = input.ReadString();
            break;
          }
          case 32: {
            Parent = input.ReadSInt32();
            break;
          }
          case 40: {
            Child = input.ReadSInt32();
            break;
          }
          case 48: {
            LevelNo = input.ReadSInt32();
            break;
          }
          case 58: {
            int? value = _single_businessClassCode_codec.Read(input);
            if (businessClassCode_ == null || value != 0) {
              BusinessClassCode = value;
            }
            break;
          }
          case 64: {
            DeptLevel = input.ReadSInt32();
            break;
          }
          case 72: {
            UseFlag = input.ReadSInt32();
            break;
          }
          case 80: {
            Items = input.ReadSInt32();
            break;
          }
          case 88: {
            CompanyCode = input.ReadSInt32();
            break;
          }
          case 96: {
            BudgetFlag = input.ReadSInt32();
            break;
          }
          case 106: {
            string value = _single_linkCode_codec.Read(input);
            if (linkCode_ == null || value != "") {
              LinkCode = value;
            }
            break;
          }
          case 112: {
            TaxFlag = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      deptCode_ = other.deptCode_;
      ExpenseCode = other.ExpenseCode;
      codeName_ = other.codeName_;
      parent_ = other.parent_;
      child_ = other.child_;
      levelNo_ = other.levelNo_;
      BusinessClassCode = other.BusinessClassCode;
      deptLevel_ = other.deptLevel_;
      useFlag_ = other.useFlag_;
      items_ = other.items_;
      companyCode_ = other.companyCode_;
      budgetFlag_ = other.budgetFlag_;
      LinkCode = other.LinkCode;
      taxFlag_ = other.taxFlag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "deptCode" field.</summary>
    public const int DeptCodeFieldNumber = 1;
    private int deptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeptCode {
      get { return deptCode_; }
      set {
        deptCode_ = value;
      }
    }

    /// <summary>Field number for the "expenseCode" field.</summary>
    public const int ExpenseCodeFieldNumber = 2;
    private static readonly pb::FieldCodec<int?> _single_expenseCode_codec = pb::FieldCodec.ForStructWrapper<int>(18);
    private int? expenseCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? ExpenseCode {
      get { return expenseCode_; }
      set {
        expenseCode_ = value;
      }
    }


    /// <summary>Field number for the "codeName" field.</summary>
    public const int CodeNameFieldNumber = 3;
    private string codeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CodeName {
      get { return codeName_; }
      set {
        codeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent" field.</summary>
    public const int ParentFieldNumber = 4;
    private int parent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Parent {
      get { return parent_; }
      set {
        parent_ = value;
      }
    }

    /// <summary>Field number for the "child" field.</summary>
    public const int ChildFieldNumber = 5;
    private int child_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Child {
      get { return child_; }
      set {
        child_ = value;
      }
    }

    /// <summary>Field number for the "levelNo" field.</summary>
    public const int LevelNoFieldNumber = 6;
    private int levelNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelNo {
      get { return levelNo_; }
      set {
        levelNo_ = value;
      }
    }

    /// <summary>Field number for the "businessClassCode" field.</summary>
    public const int BusinessClassCodeFieldNumber = 7;
    private static readonly pb::FieldCodec<int?> _single_businessClassCode_codec = pb::FieldCodec.ForStructWrapper<int>(58);
    private int? businessClassCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? BusinessClassCode {
      get { return businessClassCode_; }
      set {
        businessClassCode_ = value;
      }
    }


    /// <summary>Field number for the "deptLevel" field.</summary>
    public const int DeptLevelFieldNumber = 8;
    private int deptLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeptLevel {
      get { return deptLevel_; }
      set {
        deptLevel_ = value;
      }
    }

    /// <summary>Field number for the "useFlag" field.</summary>
    public const int UseFlagFieldNumber = 9;
    private int useFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UseFlag {
      get { return useFlag_; }
      set {
        useFlag_ = value;
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 10;
    private int items_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Items {
      get { return items_; }
      set {
        items_ = value;
      }
    }

    /// <summary>Field number for the "companyCode" field.</summary>
    public const int CompanyCodeFieldNumber = 11;
    private int companyCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompanyCode {
      get { return companyCode_; }
      set {
        companyCode_ = value;
      }
    }

    /// <summary>Field number for the "budgetFlag" field.</summary>
    public const int BudgetFlagFieldNumber = 12;
    private int budgetFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BudgetFlag {
      get { return budgetFlag_; }
      set {
        budgetFlag_ = value;
      }
    }

    /// <summary>Field number for the "linkCode" field.</summary>
    public const int LinkCodeFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_linkCode_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string linkCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LinkCode {
      get { return linkCode_; }
      set {
        linkCode_ = value;
      }
    }


    /// <summary>Field number for the "taxFlag" field.</summary>
    public const int TaxFlagFieldNumber = 14;
    private int taxFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TaxFlag {
      get { return taxFlag_; }
      set {
        taxFlag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeptCode != other.DeptCode) return false;
      if (ExpenseCode != other.ExpenseCode) return false;
      if (CodeName != other.CodeName) return false;
      if (Parent != other.Parent) return false;
      if (Child != other.Child) return false;
      if (LevelNo != other.LevelNo) return false;
      if (BusinessClassCode != other.BusinessClassCode) return false;
      if (DeptLevel != other.DeptLevel) return false;
      if (UseFlag != other.UseFlag) return false;
      if (Items != other.Items) return false;
      if (CompanyCode != other.CompanyCode) return false;
      if (BudgetFlag != other.BudgetFlag) return false;
      if (LinkCode != other.LinkCode) return false;
      if (TaxFlag != other.TaxFlag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeptCode != 0) hash ^= DeptCode.GetHashCode();
      if (expenseCode_ != null) hash ^= ExpenseCode.GetHashCode();
      if (CodeName.Length != 0) hash ^= CodeName.GetHashCode();
      if (Parent != 0) hash ^= Parent.GetHashCode();
      if (Child != 0) hash ^= Child.GetHashCode();
      if (LevelNo != 0) hash ^= LevelNo.GetHashCode();
      if (businessClassCode_ != null) hash ^= BusinessClassCode.GetHashCode();
      if (DeptLevel != 0) hash ^= DeptLevel.GetHashCode();
      if (UseFlag != 0) hash ^= UseFlag.GetHashCode();
      if (Items != 0) hash ^= Items.GetHashCode();
      if (CompanyCode != 0) hash ^= CompanyCode.GetHashCode();
      if (BudgetFlag != 0) hash ^= BudgetFlag.GetHashCode();
      if (linkCode_ != null) hash ^= LinkCode.GetHashCode();
      if (TaxFlag != 0) hash ^= TaxFlag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeptCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(DeptCode);
      }
      if (expenseCode_ != null) {
        _single_expenseCode_codec.WriteTagAndValue(output, ExpenseCode);
      }
      if (CodeName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CodeName);
      }
      if (Parent != 0) {
        output.WriteRawTag(32);
        output.WriteSInt32(Parent);
      }
      if (Child != 0) {
        output.WriteRawTag(40);
        output.WriteSInt32(Child);
      }
      if (LevelNo != 0) {
        output.WriteRawTag(48);
        output.WriteSInt32(LevelNo);
      }
      if (businessClassCode_ != null) {
        _single_businessClassCode_codec.WriteTagAndValue(output, BusinessClassCode);
      }
      if (DeptLevel != 0) {
        output.WriteRawTag(64);
        output.WriteSInt32(DeptLevel);
      }
      if (UseFlag != 0) {
        output.WriteRawTag(72);
        output.WriteSInt32(UseFlag);
      }
      if (Items != 0) {
        output.WriteRawTag(80);
        output.WriteSInt32(Items);
      }
      if (CompanyCode != 0) {
        output.WriteRawTag(88);
        output.WriteSInt32(CompanyCode);
      }
      if (BudgetFlag != 0) {
        output.WriteRawTag(96);
        output.WriteSInt32(BudgetFlag);
      }
      if (linkCode_ != null) {
        _single_linkCode_codec.WriteTagAndValue(output, LinkCode);
      }
      if (TaxFlag != 0) {
        output.WriteRawTag(112);
        output.WriteSInt32(TaxFlag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeptCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DeptCode);
      }
      if (expenseCode_ != null) {
        size += _single_expenseCode_codec.CalculateSizeWithTag(ExpenseCode);
      }
      if (CodeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CodeName);
      }
      if (Parent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Parent);
      }
      if (Child != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Child);
      }
      if (LevelNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(LevelNo);
      }
      if (businessClassCode_ != null) {
        size += _single_businessClassCode_codec.CalculateSizeWithTag(BusinessClassCode);
      }
      if (DeptLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DeptLevel);
      }
      if (UseFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(UseFlag);
      }
      if (Items != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Items);
      }
      if (CompanyCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(CompanyCode);
      }
      if (BudgetFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(BudgetFlag);
      }
      if (linkCode_ != null) {
        size += _single_linkCode_codec.CalculateSizeWithTag(LinkCode);
      }
      if (TaxFlag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TaxFlag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeptCode != 0) {
        DeptCode = other.DeptCode;
      }
      if (other.expenseCode_ != null) {
        if (expenseCode_ == null || other.ExpenseCode != 0) {
          ExpenseCode = other.ExpenseCode;
        }
      }
      if (other.CodeName.Length != 0) {
        CodeName = other.CodeName;
      }
      if (other.Parent != 0) {
        Parent = other.Parent;
      }
      if (other.Child != 0) {
        Child = other.Child;
      }
      if (other.LevelNo != 0) {
        LevelNo = other.LevelNo;
      }
      if (other.businessClassCode_ != null) {
        if (businessClassCode_ == null || other.BusinessClassCode != 0) {
          BusinessClassCode = other.BusinessClassCode;
        }
      }
      if (other.DeptLevel != 0) {
        DeptLevel = other.DeptLevel;
      }
      if (other.UseFlag != 0) {
        UseFlag = other.UseFlag;
      }
      if (other.Items != 0) {
        Items = other.Items;
      }
      if (other.CompanyCode != 0) {
        CompanyCode = other.CompanyCode;
      }
      if (other.BudgetFlag != 0) {
        BudgetFlag = other.BudgetFlag;
      }
      if (other.linkCode_ != null) {
        if (linkCode_ == null || other.LinkCode != "") {
          LinkCode = other.LinkCode;
        }
      }
      if (other.TaxFlag != 0) {
        TaxFlag = other.TaxFlag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeptCode = input.ReadSInt32();
            break;
          }
          case 18: {
            int? value = _single_expenseCode_codec.Read(input);
            if (expenseCode_ == null || value != 0) {
              ExpenseCode = value;
            }
            break;
          }
          case 26: {
            CodeName = input.ReadString();
            break;
          }
          case 32: {
            Parent = input.ReadSInt32();
            break;
          }
          case 40: {
            Child = input.ReadSInt32();
            break;
          }
          case 48: {
            LevelNo = input.ReadSInt32();
            break;
          }
          case 58: {
            int? value = _single_businessClassCode_codec.Read(input);
            if (businessClassCode_ == null || value != 0) {
              BusinessClassCode = value;
            }
            break;
          }
          case 64: {
            DeptLevel = input.ReadSInt32();
            break;
          }
          case 72: {
            UseFlag = input.ReadSInt32();
            break;
          }
          case 80: {
            Items = input.ReadSInt32();
            break;
          }
          case 88: {
            CompanyCode = input.ReadSInt32();
            break;
          }
          case 96: {
            BudgetFlag = input.ReadSInt32();
            break;
          }
          case 106: {
            string value = _single_linkCode_codec.Read(input);
            if (linkCode_ == null || value != "") {
              LinkCode = value;
            }
            break;
          }
          case 112: {
            TaxFlag = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResponse : pb::IMessage<UpdateResponse> {
    private static readonly pb::MessageParser<UpdateResponse> _parser = new pb::MessageParser<UpdateResponse>(() => new UpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse(UpdateResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse Clone() {
      return new UpdateResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      deptCode_ = other.deptCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "deptCode" field.</summary>
    public const int DeptCodeFieldNumber = 1;
    private int deptCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeptCode {
      get { return deptCode_; }
      set {
        deptCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeptCode != other.DeptCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeptCode != 0) hash ^= DeptCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DeptCode != 0) {
        output.WriteRawTag(8);
        output.WriteSInt32(DeptCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeptCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(DeptCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.DeptCode != 0) {
        DeptCode = other.DeptCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeptCode = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.DeptProtos.DeptReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
