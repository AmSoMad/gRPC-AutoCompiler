// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mes/CostCenterTypes.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HaccpManager.CostCenterTypesProtos {

  /// <summary>Holder for reflection information generated from mes/CostCenterTypes.proto</summary>
  public static partial class CostCenterTypesReflection {

    #region Descriptor
    /// <summary>File descriptor for mes/CostCenterTypes.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CostCenterTypesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChltZXMvQ29zdENlbnRlclR5cGVzLnByb3RvEhJDb3N0Q2VudGVyVHlwZXNT",
            "dmMaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHmdvb2dsZS9w",
            "cm90b2J1Zi9kdXJhdGlvbi5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBw",
            "ZXJzLnByb3RvGhtnb29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8iKwoLR3Jw",
            "Y0RlY2ltYWwSDQoFdW5pdHMYASABKAMSDQoFbmFub3MYAiABKA8iRgoXQ29z",
            "dENlbnRlclR5cGVzUmVzcG9uc2USFwoPY29zdENlbnRlclR5cGVzGAEgASgM",
            "EhIKCmpzb25TdHJpbmcYAiABKAkiTAoaQ29zdENlbnRlclR5cGVzU2V0UmVz",
            "cG9uc2USGgoSY29zdENlbnRlclR5cGVzU2V0GAEgASgMEhIKCmpzb25TdHJp",
            "bmcYAiABKAkiNgoPRGF0YVNldFJlc3BvbnNlEg8KB2RhdGFTZXQYASABKAwS",
            "EgoKanNvblN0cmluZxgCIAEoCSIpCg9HZXRCeUtleVJlcXVlc3QSFgoOY29z",
            "dENlbnRlclR5cGUYASABKAkiVgoNSW5zZXJ0UmVxdWVzdBIWCg5jb3N0Q2Vu",
            "dGVyVHlwZRgBIAEoCRIaChJjb3N0Q2VudGVyVHlwZU5hbWUYAiABKAkSEQoJ",
            "dHlwZVNlcU5vGAMgASgRIlYKDVVwZGF0ZVJlcXVlc3QSFgoOY29zdENlbnRl",
            "clR5cGUYASABKAkSGgoSY29zdENlbnRlclR5cGVOYW1lGAIgASgJEhEKCXR5",
            "cGVTZXFObxgDIAEoESIfCg5VcGRhdGVSZXNwb25zZRINCgVjb3VudBgBIAEo",
            "BSInCg1EZWxldGVSZXF1ZXN0EhYKDmNvc3RDZW50ZXJUeXBlGAEgASgJIh8K",
            "DkRlbGV0ZVJlc3BvbnNlEg0KBWNvdW50GAEgASgFMtMFCg9Db3N0Q2VudGVy",
            "VHlwZXMSXAoIR2V0QnlLZXkSIy5Db3N0Q2VudGVyVHlwZXNTdmMuR2V0QnlL",
            "ZXlSZXF1ZXN0GisuQ29zdENlbnRlclR5cGVzU3ZjLkNvc3RDZW50ZXJUeXBl",
            "c1Jlc3BvbnNlEmAKDEdldEJ5S2V5SnNvbhIjLkNvc3RDZW50ZXJUeXBlc1N2",
            "Yy5HZXRCeUtleVJlcXVlc3QaKy5Db3N0Q2VudGVyVHlwZXNTdmMuQ29zdENl",
            "bnRlclR5cGVzUmVzcG9uc2USUAoGR2V0QWxsEhYuZ29vZ2xlLnByb3RvYnVm",
            "LkVtcHR5Gi4uQ29zdENlbnRlclR5cGVzU3ZjLkNvc3RDZW50ZXJUeXBlc1Nl",
            "dFJlc3BvbnNlElQKCkdldEFsbEpzb24SFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkaLi5Db3N0Q2VudGVyVHlwZXNTdmMuQ29zdENlbnRlclR5cGVzU2V0UmVz",
            "cG9uc2USWAoGSW5zZXJ0EiEuQ29zdENlbnRlclR5cGVzU3ZjLkluc2VydFJl",
            "cXVlc3QaKy5Db3N0Q2VudGVyVHlwZXNTdmMuQ29zdENlbnRlclR5cGVzUmVz",
            "cG9uc2USXAoKSW5zZXJ0SnNvbhIhLkNvc3RDZW50ZXJUeXBlc1N2Yy5JbnNl",
            "cnRSZXF1ZXN0GisuQ29zdENlbnRlclR5cGVzU3ZjLkNvc3RDZW50ZXJUeXBl",
            "c1Jlc3BvbnNlEk8KBlVwZGF0ZRIhLkNvc3RDZW50ZXJUeXBlc1N2Yy5VcGRh",
            "dGVSZXF1ZXN0GiIuQ29zdENlbnRlclR5cGVzU3ZjLlVwZGF0ZVJlc3BvbnNl",
            "Ek8KBkRlbGV0ZRIhLkNvc3RDZW50ZXJUeXBlc1N2Yy5EZWxldGVSZXF1ZXN0",
            "GiIuQ29zdENlbnRlclR5cGVzU3ZjLkRlbGV0ZVJlc3BvbnNlQiWqAiJIYWNj",
            "cE1hbmFnZXIuQ29zdENlbnRlclR5cGVzUHJvdG9zYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.GrpcDecimal), global::HaccpManager.CostCenterTypesProtos.GrpcDecimal.Parser, new[]{ "Units", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.CostCenterTypesResponse), global::HaccpManager.CostCenterTypesProtos.CostCenterTypesResponse.Parser, new[]{ "CostCenterTypes", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.CostCenterTypesSetResponse), global::HaccpManager.CostCenterTypesProtos.CostCenterTypesSetResponse.Parser, new[]{ "CostCenterTypesSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.DataSetResponse), global::HaccpManager.CostCenterTypesProtos.DataSetResponse.Parser, new[]{ "DataSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.GetByKeyRequest), global::HaccpManager.CostCenterTypesProtos.GetByKeyRequest.Parser, new[]{ "CostCenterType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.InsertRequest), global::HaccpManager.CostCenterTypesProtos.InsertRequest.Parser, new[]{ "CostCenterType", "CostCenterTypeName", "TypeSeqNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.UpdateRequest), global::HaccpManager.CostCenterTypesProtos.UpdateRequest.Parser, new[]{ "CostCenterType", "CostCenterTypeName", "TypeSeqNo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.UpdateResponse), global::HaccpManager.CostCenterTypesProtos.UpdateResponse.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.DeleteRequest), global::HaccpManager.CostCenterTypesProtos.DeleteRequest.Parser, new[]{ "CostCenterType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CostCenterTypesProtos.DeleteResponse), global::HaccpManager.CostCenterTypesProtos.DeleteResponse.Parser, new[]{ "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcDecimal : pb::IMessage<GrpcDecimal> {
    private static readonly pb::MessageParser<GrpcDecimal> _parser = new pb::MessageParser<GrpcDecimal>(() => new GrpcDecimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDecimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal(GrpcDecimal other) : this() {
      units_ = other.units_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal Clone() {
      return new GrpcDecimal(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private long units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDecimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDecimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0L) hash ^= Units.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Units);
      }
      if (Nanos != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Units);
      }
      if (Nanos != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDecimal other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0L) {
        Units = other.Units;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Units = input.ReadInt64();
            break;
          }
          case 21: {
            Nanos = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CostCenterTypesResponse : pb::IMessage<CostCenterTypesResponse> {
    private static readonly pb::MessageParser<CostCenterTypesResponse> _parser = new pb::MessageParser<CostCenterTypesResponse>(() => new CostCenterTypesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CostCenterTypesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostCenterTypesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostCenterTypesResponse(CostCenterTypesResponse other) : this() {
      costCenterTypes_ = other.costCenterTypes_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostCenterTypesResponse Clone() {
      return new CostCenterTypesResponse(this);
    }

    /// <summary>Field number for the "costCenterTypes" field.</summary>
    public const int CostCenterTypesFieldNumber = 1;
    private pb::ByteString costCenterTypes_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CostCenterTypes {
      get { return costCenterTypes_; }
      set {
        costCenterTypes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CostCenterTypesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CostCenterTypesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostCenterTypes != other.CostCenterTypes) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostCenterTypes.Length != 0) hash ^= CostCenterTypes.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CostCenterTypes.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(CostCenterTypes);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostCenterTypes.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CostCenterTypes);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CostCenterTypesResponse other) {
      if (other == null) {
        return;
      }
      if (other.CostCenterTypes.Length != 0) {
        CostCenterTypes = other.CostCenterTypes;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CostCenterTypes = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CostCenterTypesSetResponse : pb::IMessage<CostCenterTypesSetResponse> {
    private static readonly pb::MessageParser<CostCenterTypesSetResponse> _parser = new pb::MessageParser<CostCenterTypesSetResponse>(() => new CostCenterTypesSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CostCenterTypesSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostCenterTypesSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostCenterTypesSetResponse(CostCenterTypesSetResponse other) : this() {
      costCenterTypesSet_ = other.costCenterTypesSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CostCenterTypesSetResponse Clone() {
      return new CostCenterTypesSetResponse(this);
    }

    /// <summary>Field number for the "costCenterTypesSet" field.</summary>
    public const int CostCenterTypesSetFieldNumber = 1;
    private pb::ByteString costCenterTypesSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CostCenterTypesSet {
      get { return costCenterTypesSet_; }
      set {
        costCenterTypesSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CostCenterTypesSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CostCenterTypesSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostCenterTypesSet != other.CostCenterTypesSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostCenterTypesSet.Length != 0) hash ^= CostCenterTypesSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CostCenterTypesSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(CostCenterTypesSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostCenterTypesSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CostCenterTypesSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CostCenterTypesSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.CostCenterTypesSet.Length != 0) {
        CostCenterTypesSet = other.CostCenterTypesSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CostCenterTypesSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSetResponse : pb::IMessage<DataSetResponse> {
    private static readonly pb::MessageParser<DataSetResponse> _parser = new pb::MessageParser<DataSetResponse>(() => new DataSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse(DataSetResponse other) : this() {
      dataSet_ = other.dataSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse Clone() {
      return new DataSetResponse(this);
    }

    /// <summary>Field number for the "dataSet" field.</summary>
    public const int DataSetFieldNumber = 1;
    private pb::ByteString dataSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataSet {
      get { return dataSet_; }
      set {
        dataSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSet != other.DataSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSet.Length != 0) hash ^= DataSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DataSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DataSet.Length != 0) {
        DataSet = other.DataSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByKeyRequest : pb::IMessage<GetByKeyRequest> {
    private static readonly pb::MessageParser<GetByKeyRequest> _parser = new pb::MessageParser<GetByKeyRequest>(() => new GetByKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest(GetByKeyRequest other) : this() {
      costCenterType_ = other.costCenterType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest Clone() {
      return new GetByKeyRequest(this);
    }

    /// <summary>Field number for the "costCenterType" field.</summary>
    public const int CostCenterTypeFieldNumber = 1;
    private string costCenterType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CostCenterType {
      get { return costCenterType_; }
      set {
        costCenterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostCenterType != other.CostCenterType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostCenterType.Length != 0) hash ^= CostCenterType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CostCenterType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CostCenterType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostCenterType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CostCenterType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.CostCenterType.Length != 0) {
        CostCenterType = other.CostCenterType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CostCenterType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertRequest : pb::IMessage<InsertRequest> {
    private static readonly pb::MessageParser<InsertRequest> _parser = new pb::MessageParser<InsertRequest>(() => new InsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest(InsertRequest other) : this() {
      costCenterType_ = other.costCenterType_;
      costCenterTypeName_ = other.costCenterTypeName_;
      typeSeqNo_ = other.typeSeqNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest Clone() {
      return new InsertRequest(this);
    }

    /// <summary>Field number for the "costCenterType" field.</summary>
    public const int CostCenterTypeFieldNumber = 1;
    private string costCenterType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CostCenterType {
      get { return costCenterType_; }
      set {
        costCenterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "costCenterTypeName" field.</summary>
    public const int CostCenterTypeNameFieldNumber = 2;
    private string costCenterTypeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CostCenterTypeName {
      get { return costCenterTypeName_; }
      set {
        costCenterTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "typeSeqNo" field.</summary>
    public const int TypeSeqNoFieldNumber = 3;
    private int typeSeqNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeSeqNo {
      get { return typeSeqNo_; }
      set {
        typeSeqNo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostCenterType != other.CostCenterType) return false;
      if (CostCenterTypeName != other.CostCenterTypeName) return false;
      if (TypeSeqNo != other.TypeSeqNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostCenterType.Length != 0) hash ^= CostCenterType.GetHashCode();
      if (CostCenterTypeName.Length != 0) hash ^= CostCenterTypeName.GetHashCode();
      if (TypeSeqNo != 0) hash ^= TypeSeqNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CostCenterType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CostCenterType);
      }
      if (CostCenterTypeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CostCenterTypeName);
      }
      if (TypeSeqNo != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(TypeSeqNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostCenterType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CostCenterType);
      }
      if (CostCenterTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CostCenterTypeName);
      }
      if (TypeSeqNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TypeSeqNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.CostCenterType.Length != 0) {
        CostCenterType = other.CostCenterType;
      }
      if (other.CostCenterTypeName.Length != 0) {
        CostCenterTypeName = other.CostCenterTypeName;
      }
      if (other.TypeSeqNo != 0) {
        TypeSeqNo = other.TypeSeqNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CostCenterType = input.ReadString();
            break;
          }
          case 18: {
            CostCenterTypeName = input.ReadString();
            break;
          }
          case 24: {
            TypeSeqNo = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      costCenterType_ = other.costCenterType_;
      costCenterTypeName_ = other.costCenterTypeName_;
      typeSeqNo_ = other.typeSeqNo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "costCenterType" field.</summary>
    public const int CostCenterTypeFieldNumber = 1;
    private string costCenterType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CostCenterType {
      get { return costCenterType_; }
      set {
        costCenterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "costCenterTypeName" field.</summary>
    public const int CostCenterTypeNameFieldNumber = 2;
    private string costCenterTypeName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CostCenterTypeName {
      get { return costCenterTypeName_; }
      set {
        costCenterTypeName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "typeSeqNo" field.</summary>
    public const int TypeSeqNoFieldNumber = 3;
    private int typeSeqNo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TypeSeqNo {
      get { return typeSeqNo_; }
      set {
        typeSeqNo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostCenterType != other.CostCenterType) return false;
      if (CostCenterTypeName != other.CostCenterTypeName) return false;
      if (TypeSeqNo != other.TypeSeqNo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostCenterType.Length != 0) hash ^= CostCenterType.GetHashCode();
      if (CostCenterTypeName.Length != 0) hash ^= CostCenterTypeName.GetHashCode();
      if (TypeSeqNo != 0) hash ^= TypeSeqNo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CostCenterType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CostCenterType);
      }
      if (CostCenterTypeName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CostCenterTypeName);
      }
      if (TypeSeqNo != 0) {
        output.WriteRawTag(24);
        output.WriteSInt32(TypeSeqNo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostCenterType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CostCenterType);
      }
      if (CostCenterTypeName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CostCenterTypeName);
      }
      if (TypeSeqNo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(TypeSeqNo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.CostCenterType.Length != 0) {
        CostCenterType = other.CostCenterType;
      }
      if (other.CostCenterTypeName.Length != 0) {
        CostCenterTypeName = other.CostCenterTypeName;
      }
      if (other.TypeSeqNo != 0) {
        TypeSeqNo = other.TypeSeqNo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CostCenterType = input.ReadString();
            break;
          }
          case 18: {
            CostCenterTypeName = input.ReadString();
            break;
          }
          case 24: {
            TypeSeqNo = input.ReadSInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResponse : pb::IMessage<UpdateResponse> {
    private static readonly pb::MessageParser<UpdateResponse> _parser = new pb::MessageParser<UpdateResponse>(() => new UpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse(UpdateResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse Clone() {
      return new UpdateResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      costCenterType_ = other.costCenterType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "costCenterType" field.</summary>
    public const int CostCenterTypeFieldNumber = 1;
    private string costCenterType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CostCenterType {
      get { return costCenterType_; }
      set {
        costCenterType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CostCenterType != other.CostCenterType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CostCenterType.Length != 0) hash ^= CostCenterType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CostCenterType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CostCenterType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CostCenterType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CostCenterType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.CostCenterType.Length != 0) {
        CostCenterType = other.CostCenterType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CostCenterType = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CostCenterTypesProtos.CostCenterTypesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
