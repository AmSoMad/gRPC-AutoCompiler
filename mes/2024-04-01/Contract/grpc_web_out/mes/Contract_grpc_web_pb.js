/**
 * @fileoverview gRPC-Web generated client stub for ContractSvc
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.12.4
// source: mes/Contract.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js')

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js')

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js')

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js')
const proto = {};
proto.ContractSvc = require('./Contract_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ContractSvc.ContractClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.ContractSvc.ContractPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.GetForDept_SaleRequest,
 *   !proto.ContractSvc.ContractSetResponse>}
 */
const methodDescriptor_Contract_GetForDept_Sale = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetForDept_Sale',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.GetForDept_SaleRequest,
  proto.ContractSvc.ContractSetResponse,
  /**
   * @param {!proto.ContractSvc.GetForDept_SaleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractSetResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.GetForDept_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getForDept_Sale =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetForDept_Sale',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForDept_Sale,
      callback);
};


/**
 * @param {!proto.ContractSvc.GetForDept_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractSetResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getForDept_Sale =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetForDept_Sale',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForDept_Sale);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.GetForDept_SaleRequest,
 *   !proto.ContractSvc.ContractSetResponse>}
 */
const methodDescriptor_Contract_GetForDept_SaleJson = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetForDept_SaleJson',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.GetForDept_SaleRequest,
  proto.ContractSvc.ContractSetResponse,
  /**
   * @param {!proto.ContractSvc.GetForDept_SaleRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractSetResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.GetForDept_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getForDept_SaleJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetForDept_SaleJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForDept_SaleJson,
      callback);
};


/**
 * @param {!proto.ContractSvc.GetForDept_SaleRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractSetResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getForDept_SaleJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetForDept_SaleJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForDept_SaleJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.GetForEmployeesRequest,
 *   !proto.ContractSvc.ContractSetResponse>}
 */
const methodDescriptor_Contract_GetForEmployees = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetForEmployees',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.GetForEmployeesRequest,
  proto.ContractSvc.ContractSetResponse,
  /**
   * @param {!proto.ContractSvc.GetForEmployeesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractSetResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.GetForEmployeesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getForEmployees =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetForEmployees',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForEmployees,
      callback);
};


/**
 * @param {!proto.ContractSvc.GetForEmployeesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractSetResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getForEmployees =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetForEmployees',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForEmployees);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.GetForEmployeesRequest,
 *   !proto.ContractSvc.ContractSetResponse>}
 */
const methodDescriptor_Contract_GetForEmployeesJson = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetForEmployeesJson',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.GetForEmployeesRequest,
  proto.ContractSvc.ContractSetResponse,
  /**
   * @param {!proto.ContractSvc.GetForEmployeesRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractSetResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.GetForEmployeesRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getForEmployeesJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetForEmployeesJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForEmployeesJson,
      callback);
};


/**
 * @param {!proto.ContractSvc.GetForEmployeesRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractSetResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getForEmployeesJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetForEmployeesJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetForEmployeesJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.GetByKeyRequest,
 *   !proto.ContractSvc.ContractResponse>}
 */
const methodDescriptor_Contract_GetByKey = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetByKey',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.GetByKeyRequest,
  proto.ContractSvc.ContractResponse,
  /**
   * @param {!proto.ContractSvc.GetByKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getByKey =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetByKey',
      request,
      metadata || {},
      methodDescriptor_Contract_GetByKey,
      callback);
};


/**
 * @param {!proto.ContractSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getByKey =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetByKey',
      request,
      metadata || {},
      methodDescriptor_Contract_GetByKey);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.GetByKeyRequest,
 *   !proto.ContractSvc.ContractResponse>}
 */
const methodDescriptor_Contract_GetByKeyJson = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetByKeyJson',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.GetByKeyRequest,
  proto.ContractSvc.ContractResponse,
  /**
   * @param {!proto.ContractSvc.GetByKeyRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getByKeyJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetByKeyJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetByKeyJson,
      callback);
};


/**
 * @param {!proto.ContractSvc.GetByKeyRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getByKeyJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetByKeyJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetByKeyJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.ContractSvc.ContractSetResponse>}
 */
const methodDescriptor_Contract_GetAll = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetAll',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.ContractSvc.ContractSetResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractSetResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getAll =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetAll',
      request,
      metadata || {},
      methodDescriptor_Contract_GetAll,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractSetResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getAll =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetAll',
      request,
      metadata || {},
      methodDescriptor_Contract_GetAll);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.google.protobuf.Empty,
 *   !proto.ContractSvc.ContractSetResponse>}
 */
const methodDescriptor_Contract_GetAllJson = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/GetAllJson',
  grpc.web.MethodType.UNARY,
  google_protobuf_empty_pb.Empty,
  proto.ContractSvc.ContractSetResponse,
  /**
   * @param {!proto.google.protobuf.Empty} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractSetResponse.deserializeBinary
);


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractSetResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractSetResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.getAllJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/GetAllJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetAllJson,
      callback);
};


/**
 * @param {!proto.google.protobuf.Empty} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractSetResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.getAllJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/GetAllJson',
      request,
      metadata || {},
      methodDescriptor_Contract_GetAllJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.InsertRequest,
 *   !proto.ContractSvc.ContractResponse>}
 */
const methodDescriptor_Contract_Insert = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/Insert',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.InsertRequest,
  proto.ContractSvc.ContractResponse,
  /**
   * @param {!proto.ContractSvc.InsertRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.insert =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/Insert',
      request,
      metadata || {},
      methodDescriptor_Contract_Insert,
      callback);
};


/**
 * @param {!proto.ContractSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.insert =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/Insert',
      request,
      metadata || {},
      methodDescriptor_Contract_Insert);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.InsertRequest,
 *   !proto.ContractSvc.ContractResponse>}
 */
const methodDescriptor_Contract_InsertJson = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/InsertJson',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.InsertRequest,
  proto.ContractSvc.ContractResponse,
  /**
   * @param {!proto.ContractSvc.InsertRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.ContractResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.ContractResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.ContractResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.insertJson =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/InsertJson',
      request,
      metadata || {},
      methodDescriptor_Contract_InsertJson,
      callback);
};


/**
 * @param {!proto.ContractSvc.InsertRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.ContractResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.insertJson =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/InsertJson',
      request,
      metadata || {},
      methodDescriptor_Contract_InsertJson);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.UpdateRequest,
 *   !proto.ContractSvc.UpdateResponse>}
 */
const methodDescriptor_Contract_Update = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/Update',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.UpdateRequest,
  proto.ContractSvc.UpdateResponse,
  /**
   * @param {!proto.ContractSvc.UpdateRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.UpdateResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.UpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.UpdateResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.UpdateResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.update =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/Update',
      request,
      metadata || {},
      methodDescriptor_Contract_Update,
      callback);
};


/**
 * @param {!proto.ContractSvc.UpdateRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.UpdateResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.update =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/Update',
      request,
      metadata || {},
      methodDescriptor_Contract_Update);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.ContractSvc.DeleteRequest,
 *   !proto.ContractSvc.DeleteResponse>}
 */
const methodDescriptor_Contract_Delete = new grpc.web.MethodDescriptor(
  '/ContractSvc.Contract/Delete',
  grpc.web.MethodType.UNARY,
  proto.ContractSvc.DeleteRequest,
  proto.ContractSvc.DeleteResponse,
  /**
   * @param {!proto.ContractSvc.DeleteRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.ContractSvc.DeleteResponse.deserializeBinary
);


/**
 * @param {!proto.ContractSvc.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.ContractSvc.DeleteResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.ContractSvc.DeleteResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.ContractSvc.ContractClient.prototype.delete =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/ContractSvc.Contract/Delete',
      request,
      metadata || {},
      methodDescriptor_Contract_Delete,
      callback);
};


/**
 * @param {!proto.ContractSvc.DeleteRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.ContractSvc.DeleteResponse>}
 *     Promise that resolves to the response
 */
proto.ContractSvc.ContractPromiseClient.prototype.delete =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/ContractSvc.Contract/Delete',
      request,
      metadata || {},
      methodDescriptor_Contract_Delete);
};


module.exports = proto.ContractSvc;

