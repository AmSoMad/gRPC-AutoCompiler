// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mes/Customers.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace HaccpManager.CustomersProtos {

  /// <summary>Holder for reflection information generated from mes/Customers.proto</summary>
  public static partial class CustomersReflection {

    #region Descriptor
    /// <summary>File descriptor for mes/Customers.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CustomersReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNtZXMvQ3VzdG9tZXJzLnByb3RvEgxDdXN0b21lcnNTdmMaH2dvb2dsZS9w",
            "cm90b2J1Zi90aW1lc3RhbXAucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJh",
            "dGlvbi5wcm90bxoeZ29vZ2xlL3Byb3RvYnVmL3dyYXBwZXJzLnByb3RvGhtn",
            "b29nbGUvcHJvdG9idWYvZW1wdHkucHJvdG8iKwoLR3JwY0RlY2ltYWwSDQoF",
            "dW5pdHMYASABKAMSDQoFbmFub3MYAiABKA8iOgoRQ3VzdG9tZXJzUmVzcG9u",
            "c2USEQoJY3VzdG9tZXJzGAEgASgMEhIKCmpzb25TdHJpbmcYAiABKAkiQAoU",
            "Q3VzdG9tZXJzU2V0UmVzcG9uc2USFAoMY3VzdG9tZXJzU2V0GAEgASgMEhIK",
            "Cmpzb25TdHJpbmcYAiABKAkiNgoPRGF0YVNldFJlc3BvbnNlEg8KB2RhdGFT",
            "ZXQYASABKAwSEgoKanNvblN0cmluZxgCIAEoCSInCg9HZXRCeUtleVJlcXVl",
            "c3QSFAoMY3VzdG9tZXJDb2RlGAEgASgJIvIFCg1JbnNlcnRSZXF1ZXN0EhQK",
            "DGN1c3RvbWVyQ29kZRgBIAEoCRIUCgxjdXN0b21lck5hbWUYAiABKAkSEQoJ",
            "cHJlc2lkZW50GAMgASgJEhAKCHBlcnNvbk5vGAQgASgJEg8KB3ppcENvZGUY",
            "BSABKAkSDwoHYWRkcmVzcxgGIAEoCRIuCghhZGRyZXNzMhgHIAEoCzIcLmdv",
            "b2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRIUCgxidXNpbmVzc1R5cGUYCCAB",
            "KAkSFAoMYnVzaW5lc3NJdGVtGAkgASgJEisKBXBob25lGAogASgLMhwuZ29v",
            "Z2xlLnByb3RvYnVmLlN0cmluZ1ZhbHVlEikKA2ZheBgLIAEoCzIcLmdvb2ds",
            "ZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI3ChFwcmltYXJ5UGVyc29uTmFtZRgM",
            "IAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1ZRI3ChFwcmltYXJ5",
            "RGVwYXJ0bWVudBgNIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdWYWx1",
            "ZRI2ChBwcmltYXJ5VGVsZXBob25lGA4gASgLMhwuZ29vZ2xlLnByb3RvYnVm",
            "LlN0cmluZ1ZhbHVlEjIKDHByaW1hcnlFbWFpbBgPIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRIrCgVlbWFpbBgQIAEoCzIcLmdvb2dsZS5w",
            "cm90b2J1Zi5TdHJpbmdWYWx1ZRIyCgxidXNpbmVzc0NvZGUYESABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSEgoKdW5Vc2VkRmxhZxgSIAEo",
            "ERI0Cg5yZXByZXNlbnRFbWFpbBgTIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5T",
            "dHJpbmdWYWx1ZRIxCgxjdXN0b21lclR5cGUYFCABKAsyGy5nb29nbGUucHJv",
            "dG9idWYuSW50MzJWYWx1ZSLyBQoNVXBkYXRlUmVxdWVzdBIUCgxjdXN0b21l",
            "ckNvZGUYASABKAkSFAoMY3VzdG9tZXJOYW1lGAIgASgJEhEKCXByZXNpZGVu",
            "dBgDIAEoCRIQCghwZXJzb25ObxgEIAEoCRIPCgd6aXBDb2RlGAUgASgJEg8K",
            "B2FkZHJlc3MYBiABKAkSLgoIYWRkcmVzczIYByABKAsyHC5nb29nbGUucHJv",
            "dG9idWYuU3RyaW5nVmFsdWUSFAoMYnVzaW5lc3NUeXBlGAggASgJEhQKDGJ1",
            "c2luZXNzSXRlbRgJIAEoCRIrCgVwaG9uZRgKIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5TdHJpbmdWYWx1ZRIpCgNmYXgYCyABKAsyHC5nb29nbGUucHJvdG9i",
            "dWYuU3RyaW5nVmFsdWUSNwoRcHJpbWFyeVBlcnNvbk5hbWUYDCABKAsyHC5n",
            "b29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNwoRcHJpbWFyeURlcGFydG1l",
            "bnQYDSABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFsdWUSNgoQcHJp",
            "bWFyeVRlbGVwaG9uZRgOIAEoCzIcLmdvb2dsZS5wcm90b2J1Zi5TdHJpbmdW",
            "YWx1ZRIyCgxwcmltYXJ5RW1haWwYDyABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSKwoFZW1haWwYECABKAsyHC5nb29nbGUucHJvdG9idWYu",
            "U3RyaW5nVmFsdWUSMgoMYnVzaW5lc3NDb2RlGBEgASgLMhwuZ29vZ2xlLnBy",
            "b3RvYnVmLlN0cmluZ1ZhbHVlEhIKCnVuVXNlZEZsYWcYEiABKBESNAoOcmVw",
            "cmVzZW50RW1haWwYEyABKAsyHC5nb29nbGUucHJvdG9idWYuU3RyaW5nVmFs",
            "dWUSMQoMY3VzdG9tZXJUeXBlGBQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDMyVmFsdWUiHwoOVXBkYXRlUmVzcG9uc2USDQoFY291bnQYASABKAUiJQoN",
            "RGVsZXRlUmVxdWVzdBIUCgxjdXN0b21lckNvZGUYASABKAkiHwoORGVsZXRl",
            "UmVzcG9uc2USDQoFY291bnQYASABKAUy1QQKCUN1c3RvbWVycxJKCghHZXRC",
            "eUtleRIdLkN1c3RvbWVyc1N2Yy5HZXRCeUtleVJlcXVlc3QaHy5DdXN0b21l",
            "cnNTdmMuQ3VzdG9tZXJzUmVzcG9uc2USTgoMR2V0QnlLZXlKc29uEh0uQ3Vz",
            "dG9tZXJzU3ZjLkdldEJ5S2V5UmVxdWVzdBofLkN1c3RvbWVyc1N2Yy5DdXN0",
            "b21lcnNSZXNwb25zZRJECgZHZXRBbGwSFi5nb29nbGUucHJvdG9idWYuRW1w",
            "dHkaIi5DdXN0b21lcnNTdmMuQ3VzdG9tZXJzU2V0UmVzcG9uc2USSAoKR2V0",
            "QWxsSnNvbhIWLmdvb2dsZS5wcm90b2J1Zi5FbXB0eRoiLkN1c3RvbWVyc1N2",
            "Yy5DdXN0b21lcnNTZXRSZXNwb25zZRJGCgZJbnNlcnQSGy5DdXN0b21lcnNT",
            "dmMuSW5zZXJ0UmVxdWVzdBofLkN1c3RvbWVyc1N2Yy5DdXN0b21lcnNSZXNw",
            "b25zZRJKCgpJbnNlcnRKc29uEhsuQ3VzdG9tZXJzU3ZjLkluc2VydFJlcXVl",
            "c3QaHy5DdXN0b21lcnNTdmMuQ3VzdG9tZXJzUmVzcG9uc2USQwoGVXBkYXRl",
            "EhsuQ3VzdG9tZXJzU3ZjLlVwZGF0ZVJlcXVlc3QaHC5DdXN0b21lcnNTdmMu",
            "VXBkYXRlUmVzcG9uc2USQwoGRGVsZXRlEhsuQ3VzdG9tZXJzU3ZjLkRlbGV0",
            "ZVJlcXVlc3QaHC5DdXN0b21lcnNTdmMuRGVsZXRlUmVzcG9uc2VCH6oCHEhh",
            "Y2NwTWFuYWdlci5DdXN0b21lcnNQcm90b3NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.GrpcDecimal), global::HaccpManager.CustomersProtos.GrpcDecimal.Parser, new[]{ "Units", "Nanos" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.CustomersResponse), global::HaccpManager.CustomersProtos.CustomersResponse.Parser, new[]{ "Customers", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.CustomersSetResponse), global::HaccpManager.CustomersProtos.CustomersSetResponse.Parser, new[]{ "CustomersSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.DataSetResponse), global::HaccpManager.CustomersProtos.DataSetResponse.Parser, new[]{ "DataSet", "JsonString" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.GetByKeyRequest), global::HaccpManager.CustomersProtos.GetByKeyRequest.Parser, new[]{ "CustomerCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.InsertRequest), global::HaccpManager.CustomersProtos.InsertRequest.Parser, new[]{ "CustomerCode", "CustomerName", "President", "PersonNo", "ZipCode", "Address", "Address2", "BusinessType", "BusinessItem", "Phone", "Fax", "PrimaryPersonName", "PrimaryDepartment", "PrimaryTelephone", "PrimaryEmail", "Email", "BusinessCode", "UnUsedFlag", "RepresentEmail", "CustomerType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.UpdateRequest), global::HaccpManager.CustomersProtos.UpdateRequest.Parser, new[]{ "CustomerCode", "CustomerName", "President", "PersonNo", "ZipCode", "Address", "Address2", "BusinessType", "BusinessItem", "Phone", "Fax", "PrimaryPersonName", "PrimaryDepartment", "PrimaryTelephone", "PrimaryEmail", "Email", "BusinessCode", "UnUsedFlag", "RepresentEmail", "CustomerType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.UpdateResponse), global::HaccpManager.CustomersProtos.UpdateResponse.Parser, new[]{ "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.DeleteRequest), global::HaccpManager.CustomersProtos.DeleteRequest.Parser, new[]{ "CustomerCode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::HaccpManager.CustomersProtos.DeleteResponse), global::HaccpManager.CustomersProtos.DeleteResponse.Parser, new[]{ "Count" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GrpcDecimal : pb::IMessage<GrpcDecimal> {
    private static readonly pb::MessageParser<GrpcDecimal> _parser = new pb::MessageParser<GrpcDecimal>(() => new GrpcDecimal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GrpcDecimal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal(GrpcDecimal other) : this() {
      units_ = other.units_;
      nanos_ = other.nanos_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GrpcDecimal Clone() {
      return new GrpcDecimal(this);
    }

    /// <summary>Field number for the "units" field.</summary>
    public const int UnitsFieldNumber = 1;
    private long units_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Units {
      get { return units_; }
      set {
        units_ = value;
      }
    }

    /// <summary>Field number for the "nanos" field.</summary>
    public const int NanosFieldNumber = 2;
    private int nanos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Nanos {
      get { return nanos_; }
      set {
        nanos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GrpcDecimal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GrpcDecimal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Units != other.Units) return false;
      if (Nanos != other.Nanos) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Units != 0L) hash ^= Units.GetHashCode();
      if (Nanos != 0) hash ^= Nanos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Units != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Units);
      }
      if (Nanos != 0) {
        output.WriteRawTag(21);
        output.WriteSFixed32(Nanos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Units != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Units);
      }
      if (Nanos != 0) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GrpcDecimal other) {
      if (other == null) {
        return;
      }
      if (other.Units != 0L) {
        Units = other.Units;
      }
      if (other.Nanos != 0) {
        Nanos = other.Nanos;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Units = input.ReadInt64();
            break;
          }
          case 21: {
            Nanos = input.ReadSFixed32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomersResponse : pb::IMessage<CustomersResponse> {
    private static readonly pb::MessageParser<CustomersResponse> _parser = new pb::MessageParser<CustomersResponse>(() => new CustomersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersResponse(CustomersResponse other) : this() {
      customers_ = other.customers_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersResponse Clone() {
      return new CustomersResponse(this);
    }

    /// <summary>Field number for the "customers" field.</summary>
    public const int CustomersFieldNumber = 1;
    private pb::ByteString customers_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Customers {
      get { return customers_; }
      set {
        customers_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Customers != other.Customers) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Customers.Length != 0) hash ^= Customers.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Customers.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Customers);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Customers.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Customers);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomersResponse other) {
      if (other == null) {
        return;
      }
      if (other.Customers.Length != 0) {
        Customers = other.Customers;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Customers = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomersSetResponse : pb::IMessage<CustomersSetResponse> {
    private static readonly pb::MessageParser<CustomersSetResponse> _parser = new pb::MessageParser<CustomersSetResponse>(() => new CustomersSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomersSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersSetResponse(CustomersSetResponse other) : this() {
      customersSet_ = other.customersSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersSetResponse Clone() {
      return new CustomersSetResponse(this);
    }

    /// <summary>Field number for the "customersSet" field.</summary>
    public const int CustomersSetFieldNumber = 1;
    private pb::ByteString customersSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CustomersSet {
      get { return customersSet_; }
      set {
        customersSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomersSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomersSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomersSet != other.CustomersSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomersSet.Length != 0) hash ^= CustomersSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CustomersSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(CustomersSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomersSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(CustomersSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomersSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.CustomersSet.Length != 0) {
        CustomersSet = other.CustomersSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomersSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DataSetResponse : pb::IMessage<DataSetResponse> {
    private static readonly pb::MessageParser<DataSetResponse> _parser = new pb::MessageParser<DataSetResponse>(() => new DataSetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DataSetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse(DataSetResponse other) : this() {
      dataSet_ = other.dataSet_;
      jsonString_ = other.jsonString_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataSetResponse Clone() {
      return new DataSetResponse(this);
    }

    /// <summary>Field number for the "dataSet" field.</summary>
    public const int DataSetFieldNumber = 1;
    private pb::ByteString dataSet_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString DataSet {
      get { return dataSet_; }
      set {
        dataSet_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jsonString" field.</summary>
    public const int JsonStringFieldNumber = 2;
    private string jsonString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JsonString {
      get { return jsonString_; }
      set {
        jsonString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DataSetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DataSetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataSet != other.DataSet) return false;
      if (JsonString != other.JsonString) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataSet.Length != 0) hash ^= DataSet.GetHashCode();
      if (JsonString.Length != 0) hash ^= JsonString.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataSet.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(DataSet);
      }
      if (JsonString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JsonString);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataSet.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(DataSet);
      }
      if (JsonString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JsonString);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DataSetResponse other) {
      if (other == null) {
        return;
      }
      if (other.DataSet.Length != 0) {
        DataSet = other.DataSet;
      }
      if (other.JsonString.Length != 0) {
        JsonString = other.JsonString;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DataSet = input.ReadBytes();
            break;
          }
          case 18: {
            JsonString = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetByKeyRequest : pb::IMessage<GetByKeyRequest> {
    private static readonly pb::MessageParser<GetByKeyRequest> _parser = new pb::MessageParser<GetByKeyRequest>(() => new GetByKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest(GetByKeyRequest other) : this() {
      customerCode_ = other.customerCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByKeyRequest Clone() {
      return new GetByKeyRequest(this);
    }

    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 1;
    private string customerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerCode != other.CustomerCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerCode.Length != 0) hash ^= CustomerCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CustomerCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerCode.Length != 0) {
        CustomerCode = other.CustomerCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class InsertRequest : pb::IMessage<InsertRequest> {
    private static readonly pb::MessageParser<InsertRequest> _parser = new pb::MessageParser<InsertRequest>(() => new InsertRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InsertRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest(InsertRequest other) : this() {
      customerCode_ = other.customerCode_;
      customerName_ = other.customerName_;
      president_ = other.president_;
      personNo_ = other.personNo_;
      zipCode_ = other.zipCode_;
      address_ = other.address_;
      Address2 = other.Address2;
      businessType_ = other.businessType_;
      businessItem_ = other.businessItem_;
      Phone = other.Phone;
      Fax = other.Fax;
      PrimaryPersonName = other.PrimaryPersonName;
      PrimaryDepartment = other.PrimaryDepartment;
      PrimaryTelephone = other.PrimaryTelephone;
      PrimaryEmail = other.PrimaryEmail;
      Email = other.Email;
      BusinessCode = other.BusinessCode;
      unUsedFlag_ = other.unUsedFlag_;
      RepresentEmail = other.RepresentEmail;
      CustomerType = other.CustomerType;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InsertRequest Clone() {
      return new InsertRequest(this);
    }

    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 1;
    private string customerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customerName" field.</summary>
    public const int CustomerNameFieldNumber = 2;
    private string customerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerName {
      get { return customerName_; }
      set {
        customerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "president" field.</summary>
    public const int PresidentFieldNumber = 3;
    private string president_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string President {
      get { return president_; }
      set {
        president_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "personNo" field.</summary>
    public const int PersonNoFieldNumber = 4;
    private string personNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonNo {
      get { return personNo_; }
      set {
        personNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zipCode" field.</summary>
    public const int ZipCodeFieldNumber = 5;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 6;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address2" field.</summary>
    public const int Address2FieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_address2_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string address2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address2 {
      get { return address2_; }
      set {
        address2_ = value;
      }
    }


    /// <summary>Field number for the "businessType" field.</summary>
    public const int BusinessTypeFieldNumber = 8;
    private string businessType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessType {
      get { return businessType_; }
      set {
        businessType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "businessItem" field.</summary>
    public const int BusinessItemFieldNumber = 9;
    private string businessItem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessItem {
      get { return businessItem_; }
      set {
        businessItem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_phone_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string phone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = value;
      }
    }


    /// <summary>Field number for the "fax" field.</summary>
    public const int FaxFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_fax_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string fax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fax {
      get { return fax_; }
      set {
        fax_ = value;
      }
    }


    /// <summary>Field number for the "primaryPersonName" field.</summary>
    public const int PrimaryPersonNameFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_primaryPersonName_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string primaryPersonName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryPersonName {
      get { return primaryPersonName_; }
      set {
        primaryPersonName_ = value;
      }
    }


    /// <summary>Field number for the "primaryDepartment" field.</summary>
    public const int PrimaryDepartmentFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_primaryDepartment_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string primaryDepartment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryDepartment {
      get { return primaryDepartment_; }
      set {
        primaryDepartment_ = value;
      }
    }


    /// <summary>Field number for the "primaryTelephone" field.</summary>
    public const int PrimaryTelephoneFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_primaryTelephone_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string primaryTelephone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryTelephone {
      get { return primaryTelephone_; }
      set {
        primaryTelephone_ = value;
      }
    }


    /// <summary>Field number for the "primaryEmail" field.</summary>
    public const int PrimaryEmailFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_primaryEmail_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string primaryEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryEmail {
      get { return primaryEmail_; }
      set {
        primaryEmail_ = value;
      }
    }


    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }


    /// <summary>Field number for the "businessCode" field.</summary>
    public const int BusinessCodeFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_businessCode_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string businessCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessCode {
      get { return businessCode_; }
      set {
        businessCode_ = value;
      }
    }


    /// <summary>Field number for the "unUsedFlag" field.</summary>
    public const int UnUsedFlagFieldNumber = 18;
    private int unUsedFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnUsedFlag {
      get { return unUsedFlag_; }
      set {
        unUsedFlag_ = value;
      }
    }

    /// <summary>Field number for the "representEmail" field.</summary>
    public const int RepresentEmailFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_representEmail_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string representEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepresentEmail {
      get { return representEmail_; }
      set {
        representEmail_ = value;
      }
    }


    /// <summary>Field number for the "customerType" field.</summary>
    public const int CustomerTypeFieldNumber = 20;
    private static readonly pb::FieldCodec<int?> _single_customerType_codec = pb::FieldCodec.ForStructWrapper<int>(162);
    private int? customerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CustomerType {
      get { return customerType_; }
      set {
        customerType_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InsertRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InsertRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerCode != other.CustomerCode) return false;
      if (CustomerName != other.CustomerName) return false;
      if (President != other.President) return false;
      if (PersonNo != other.PersonNo) return false;
      if (ZipCode != other.ZipCode) return false;
      if (Address != other.Address) return false;
      if (Address2 != other.Address2) return false;
      if (BusinessType != other.BusinessType) return false;
      if (BusinessItem != other.BusinessItem) return false;
      if (Phone != other.Phone) return false;
      if (Fax != other.Fax) return false;
      if (PrimaryPersonName != other.PrimaryPersonName) return false;
      if (PrimaryDepartment != other.PrimaryDepartment) return false;
      if (PrimaryTelephone != other.PrimaryTelephone) return false;
      if (PrimaryEmail != other.PrimaryEmail) return false;
      if (Email != other.Email) return false;
      if (BusinessCode != other.BusinessCode) return false;
      if (UnUsedFlag != other.UnUsedFlag) return false;
      if (RepresentEmail != other.RepresentEmail) return false;
      if (CustomerType != other.CustomerType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerCode.Length != 0) hash ^= CustomerCode.GetHashCode();
      if (CustomerName.Length != 0) hash ^= CustomerName.GetHashCode();
      if (President.Length != 0) hash ^= President.GetHashCode();
      if (PersonNo.Length != 0) hash ^= PersonNo.GetHashCode();
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (address2_ != null) hash ^= Address2.GetHashCode();
      if (BusinessType.Length != 0) hash ^= BusinessType.GetHashCode();
      if (BusinessItem.Length != 0) hash ^= BusinessItem.GetHashCode();
      if (phone_ != null) hash ^= Phone.GetHashCode();
      if (fax_ != null) hash ^= Fax.GetHashCode();
      if (primaryPersonName_ != null) hash ^= PrimaryPersonName.GetHashCode();
      if (primaryDepartment_ != null) hash ^= PrimaryDepartment.GetHashCode();
      if (primaryTelephone_ != null) hash ^= PrimaryTelephone.GetHashCode();
      if (primaryEmail_ != null) hash ^= PrimaryEmail.GetHashCode();
      if (email_ != null) hash ^= Email.GetHashCode();
      if (businessCode_ != null) hash ^= BusinessCode.GetHashCode();
      if (UnUsedFlag != 0) hash ^= UnUsedFlag.GetHashCode();
      if (representEmail_ != null) hash ^= RepresentEmail.GetHashCode();
      if (customerType_ != null) hash ^= CustomerType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CustomerCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerCode);
      }
      if (CustomerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CustomerName);
      }
      if (President.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(President);
      }
      if (PersonNo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PersonNo);
      }
      if (ZipCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ZipCode);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Address);
      }
      if (address2_ != null) {
        _single_address2_codec.WriteTagAndValue(output, Address2);
      }
      if (BusinessType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BusinessType);
      }
      if (BusinessItem.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(BusinessItem);
      }
      if (phone_ != null) {
        _single_phone_codec.WriteTagAndValue(output, Phone);
      }
      if (fax_ != null) {
        _single_fax_codec.WriteTagAndValue(output, Fax);
      }
      if (primaryPersonName_ != null) {
        _single_primaryPersonName_codec.WriteTagAndValue(output, PrimaryPersonName);
      }
      if (primaryDepartment_ != null) {
        _single_primaryDepartment_codec.WriteTagAndValue(output, PrimaryDepartment);
      }
      if (primaryTelephone_ != null) {
        _single_primaryTelephone_codec.WriteTagAndValue(output, PrimaryTelephone);
      }
      if (primaryEmail_ != null) {
        _single_primaryEmail_codec.WriteTagAndValue(output, PrimaryEmail);
      }
      if (email_ != null) {
        _single_email_codec.WriteTagAndValue(output, Email);
      }
      if (businessCode_ != null) {
        _single_businessCode_codec.WriteTagAndValue(output, BusinessCode);
      }
      if (UnUsedFlag != 0) {
        output.WriteRawTag(144, 1);
        output.WriteSInt32(UnUsedFlag);
      }
      if (representEmail_ != null) {
        _single_representEmail_codec.WriteTagAndValue(output, RepresentEmail);
      }
      if (customerType_ != null) {
        _single_customerType_codec.WriteTagAndValue(output, CustomerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerCode);
      }
      if (CustomerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerName);
      }
      if (President.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(President);
      }
      if (PersonNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonNo);
      }
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (address2_ != null) {
        size += _single_address2_codec.CalculateSizeWithTag(Address2);
      }
      if (BusinessType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessType);
      }
      if (BusinessItem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessItem);
      }
      if (phone_ != null) {
        size += _single_phone_codec.CalculateSizeWithTag(Phone);
      }
      if (fax_ != null) {
        size += _single_fax_codec.CalculateSizeWithTag(Fax);
      }
      if (primaryPersonName_ != null) {
        size += _single_primaryPersonName_codec.CalculateSizeWithTag(PrimaryPersonName);
      }
      if (primaryDepartment_ != null) {
        size += _single_primaryDepartment_codec.CalculateSizeWithTag(PrimaryDepartment);
      }
      if (primaryTelephone_ != null) {
        size += _single_primaryTelephone_codec.CalculateSizeWithTag(PrimaryTelephone);
      }
      if (primaryEmail_ != null) {
        size += _single_primaryEmail_codec.CalculateSizeWithTag(PrimaryEmail);
      }
      if (email_ != null) {
        size += _single_email_codec.CalculateSizeWithTag(Email);
      }
      if (businessCode_ != null) {
        size += _single_businessCode_codec.CalculateSizeWithTag(BusinessCode);
      }
      if (UnUsedFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(UnUsedFlag);
      }
      if (representEmail_ != null) {
        size += _single_representEmail_codec.CalculateSizeWithTag(RepresentEmail);
      }
      if (customerType_ != null) {
        size += _single_customerType_codec.CalculateSizeWithTag(CustomerType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InsertRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerCode.Length != 0) {
        CustomerCode = other.CustomerCode;
      }
      if (other.CustomerName.Length != 0) {
        CustomerName = other.CustomerName;
      }
      if (other.President.Length != 0) {
        President = other.President;
      }
      if (other.PersonNo.Length != 0) {
        PersonNo = other.PersonNo;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.address2_ != null) {
        if (address2_ == null || other.Address2 != "") {
          Address2 = other.Address2;
        }
      }
      if (other.BusinessType.Length != 0) {
        BusinessType = other.BusinessType;
      }
      if (other.BusinessItem.Length != 0) {
        BusinessItem = other.BusinessItem;
      }
      if (other.phone_ != null) {
        if (phone_ == null || other.Phone != "") {
          Phone = other.Phone;
        }
      }
      if (other.fax_ != null) {
        if (fax_ == null || other.Fax != "") {
          Fax = other.Fax;
        }
      }
      if (other.primaryPersonName_ != null) {
        if (primaryPersonName_ == null || other.PrimaryPersonName != "") {
          PrimaryPersonName = other.PrimaryPersonName;
        }
      }
      if (other.primaryDepartment_ != null) {
        if (primaryDepartment_ == null || other.PrimaryDepartment != "") {
          PrimaryDepartment = other.PrimaryDepartment;
        }
      }
      if (other.primaryTelephone_ != null) {
        if (primaryTelephone_ == null || other.PrimaryTelephone != "") {
          PrimaryTelephone = other.PrimaryTelephone;
        }
      }
      if (other.primaryEmail_ != null) {
        if (primaryEmail_ == null || other.PrimaryEmail != "") {
          PrimaryEmail = other.PrimaryEmail;
        }
      }
      if (other.email_ != null) {
        if (email_ == null || other.Email != "") {
          Email = other.Email;
        }
      }
      if (other.businessCode_ != null) {
        if (businessCode_ == null || other.BusinessCode != "") {
          BusinessCode = other.BusinessCode;
        }
      }
      if (other.UnUsedFlag != 0) {
        UnUsedFlag = other.UnUsedFlag;
      }
      if (other.representEmail_ != null) {
        if (representEmail_ == null || other.RepresentEmail != "") {
          RepresentEmail = other.RepresentEmail;
        }
      }
      if (other.customerType_ != null) {
        if (customerType_ == null || other.CustomerType != 0) {
          CustomerType = other.CustomerType;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerCode = input.ReadString();
            break;
          }
          case 18: {
            CustomerName = input.ReadString();
            break;
          }
          case 26: {
            President = input.ReadString();
            break;
          }
          case 34: {
            PersonNo = input.ReadString();
            break;
          }
          case 42: {
            ZipCode = input.ReadString();
            break;
          }
          case 50: {
            Address = input.ReadString();
            break;
          }
          case 58: {
            string value = _single_address2_codec.Read(input);
            if (address2_ == null || value != "") {
              Address2 = value;
            }
            break;
          }
          case 66: {
            BusinessType = input.ReadString();
            break;
          }
          case 74: {
            BusinessItem = input.ReadString();
            break;
          }
          case 82: {
            string value = _single_phone_codec.Read(input);
            if (phone_ == null || value != "") {
              Phone = value;
            }
            break;
          }
          case 90: {
            string value = _single_fax_codec.Read(input);
            if (fax_ == null || value != "") {
              Fax = value;
            }
            break;
          }
          case 98: {
            string value = _single_primaryPersonName_codec.Read(input);
            if (primaryPersonName_ == null || value != "") {
              PrimaryPersonName = value;
            }
            break;
          }
          case 106: {
            string value = _single_primaryDepartment_codec.Read(input);
            if (primaryDepartment_ == null || value != "") {
              PrimaryDepartment = value;
            }
            break;
          }
          case 114: {
            string value = _single_primaryTelephone_codec.Read(input);
            if (primaryTelephone_ == null || value != "") {
              PrimaryTelephone = value;
            }
            break;
          }
          case 122: {
            string value = _single_primaryEmail_codec.Read(input);
            if (primaryEmail_ == null || value != "") {
              PrimaryEmail = value;
            }
            break;
          }
          case 130: {
            string value = _single_email_codec.Read(input);
            if (email_ == null || value != "") {
              Email = value;
            }
            break;
          }
          case 138: {
            string value = _single_businessCode_codec.Read(input);
            if (businessCode_ == null || value != "") {
              BusinessCode = value;
            }
            break;
          }
          case 144: {
            UnUsedFlag = input.ReadSInt32();
            break;
          }
          case 154: {
            string value = _single_representEmail_codec.Read(input);
            if (representEmail_ == null || value != "") {
              RepresentEmail = value;
            }
            break;
          }
          case 162: {
            int? value = _single_customerType_codec.Read(input);
            if (customerType_ == null || value != 0) {
              CustomerType = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateRequest : pb::IMessage<UpdateRequest> {
    private static readonly pb::MessageParser<UpdateRequest> _parser = new pb::MessageParser<UpdateRequest>(() => new UpdateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest(UpdateRequest other) : this() {
      customerCode_ = other.customerCode_;
      customerName_ = other.customerName_;
      president_ = other.president_;
      personNo_ = other.personNo_;
      zipCode_ = other.zipCode_;
      address_ = other.address_;
      Address2 = other.Address2;
      businessType_ = other.businessType_;
      businessItem_ = other.businessItem_;
      Phone = other.Phone;
      Fax = other.Fax;
      PrimaryPersonName = other.PrimaryPersonName;
      PrimaryDepartment = other.PrimaryDepartment;
      PrimaryTelephone = other.PrimaryTelephone;
      PrimaryEmail = other.PrimaryEmail;
      Email = other.Email;
      BusinessCode = other.BusinessCode;
      unUsedFlag_ = other.unUsedFlag_;
      RepresentEmail = other.RepresentEmail;
      CustomerType = other.CustomerType;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateRequest Clone() {
      return new UpdateRequest(this);
    }

    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 1;
    private string customerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customerName" field.</summary>
    public const int CustomerNameFieldNumber = 2;
    private string customerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerName {
      get { return customerName_; }
      set {
        customerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "president" field.</summary>
    public const int PresidentFieldNumber = 3;
    private string president_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string President {
      get { return president_; }
      set {
        president_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "personNo" field.</summary>
    public const int PersonNoFieldNumber = 4;
    private string personNo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PersonNo {
      get { return personNo_; }
      set {
        personNo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zipCode" field.</summary>
    public const int ZipCodeFieldNumber = 5;
    private string zipCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZipCode {
      get { return zipCode_; }
      set {
        zipCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 6;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address2" field.</summary>
    public const int Address2FieldNumber = 7;
    private static readonly pb::FieldCodec<string> _single_address2_codec = pb::FieldCodec.ForClassWrapper<string>(58);
    private string address2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address2 {
      get { return address2_; }
      set {
        address2_ = value;
      }
    }


    /// <summary>Field number for the "businessType" field.</summary>
    public const int BusinessTypeFieldNumber = 8;
    private string businessType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessType {
      get { return businessType_; }
      set {
        businessType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "businessItem" field.</summary>
    public const int BusinessItemFieldNumber = 9;
    private string businessItem_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessItem {
      get { return businessItem_; }
      set {
        businessItem_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _single_phone_codec = pb::FieldCodec.ForClassWrapper<string>(82);
    private string phone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = value;
      }
    }


    /// <summary>Field number for the "fax" field.</summary>
    public const int FaxFieldNumber = 11;
    private static readonly pb::FieldCodec<string> _single_fax_codec = pb::FieldCodec.ForClassWrapper<string>(90);
    private string fax_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fax {
      get { return fax_; }
      set {
        fax_ = value;
      }
    }


    /// <summary>Field number for the "primaryPersonName" field.</summary>
    public const int PrimaryPersonNameFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _single_primaryPersonName_codec = pb::FieldCodec.ForClassWrapper<string>(98);
    private string primaryPersonName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryPersonName {
      get { return primaryPersonName_; }
      set {
        primaryPersonName_ = value;
      }
    }


    /// <summary>Field number for the "primaryDepartment" field.</summary>
    public const int PrimaryDepartmentFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _single_primaryDepartment_codec = pb::FieldCodec.ForClassWrapper<string>(106);
    private string primaryDepartment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryDepartment {
      get { return primaryDepartment_; }
      set {
        primaryDepartment_ = value;
      }
    }


    /// <summary>Field number for the "primaryTelephone" field.</summary>
    public const int PrimaryTelephoneFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _single_primaryTelephone_codec = pb::FieldCodec.ForClassWrapper<string>(114);
    private string primaryTelephone_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryTelephone {
      get { return primaryTelephone_; }
      set {
        primaryTelephone_ = value;
      }
    }


    /// <summary>Field number for the "primaryEmail" field.</summary>
    public const int PrimaryEmailFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _single_primaryEmail_codec = pb::FieldCodec.ForClassWrapper<string>(122);
    private string primaryEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PrimaryEmail {
      get { return primaryEmail_; }
      set {
        primaryEmail_ = value;
      }
    }


    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 16;
    private static readonly pb::FieldCodec<string> _single_email_codec = pb::FieldCodec.ForClassWrapper<string>(130);
    private string email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }


    /// <summary>Field number for the "businessCode" field.</summary>
    public const int BusinessCodeFieldNumber = 17;
    private static readonly pb::FieldCodec<string> _single_businessCode_codec = pb::FieldCodec.ForClassWrapper<string>(138);
    private string businessCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BusinessCode {
      get { return businessCode_; }
      set {
        businessCode_ = value;
      }
    }


    /// <summary>Field number for the "unUsedFlag" field.</summary>
    public const int UnUsedFlagFieldNumber = 18;
    private int unUsedFlag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnUsedFlag {
      get { return unUsedFlag_; }
      set {
        unUsedFlag_ = value;
      }
    }

    /// <summary>Field number for the "representEmail" field.</summary>
    public const int RepresentEmailFieldNumber = 19;
    private static readonly pb::FieldCodec<string> _single_representEmail_codec = pb::FieldCodec.ForClassWrapper<string>(154);
    private string representEmail_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepresentEmail {
      get { return representEmail_; }
      set {
        representEmail_ = value;
      }
    }


    /// <summary>Field number for the "customerType" field.</summary>
    public const int CustomerTypeFieldNumber = 20;
    private static readonly pb::FieldCodec<int?> _single_customerType_codec = pb::FieldCodec.ForStructWrapper<int>(162);
    private int? customerType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int? CustomerType {
      get { return customerType_; }
      set {
        customerType_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerCode != other.CustomerCode) return false;
      if (CustomerName != other.CustomerName) return false;
      if (President != other.President) return false;
      if (PersonNo != other.PersonNo) return false;
      if (ZipCode != other.ZipCode) return false;
      if (Address != other.Address) return false;
      if (Address2 != other.Address2) return false;
      if (BusinessType != other.BusinessType) return false;
      if (BusinessItem != other.BusinessItem) return false;
      if (Phone != other.Phone) return false;
      if (Fax != other.Fax) return false;
      if (PrimaryPersonName != other.PrimaryPersonName) return false;
      if (PrimaryDepartment != other.PrimaryDepartment) return false;
      if (PrimaryTelephone != other.PrimaryTelephone) return false;
      if (PrimaryEmail != other.PrimaryEmail) return false;
      if (Email != other.Email) return false;
      if (BusinessCode != other.BusinessCode) return false;
      if (UnUsedFlag != other.UnUsedFlag) return false;
      if (RepresentEmail != other.RepresentEmail) return false;
      if (CustomerType != other.CustomerType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerCode.Length != 0) hash ^= CustomerCode.GetHashCode();
      if (CustomerName.Length != 0) hash ^= CustomerName.GetHashCode();
      if (President.Length != 0) hash ^= President.GetHashCode();
      if (PersonNo.Length != 0) hash ^= PersonNo.GetHashCode();
      if (ZipCode.Length != 0) hash ^= ZipCode.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (address2_ != null) hash ^= Address2.GetHashCode();
      if (BusinessType.Length != 0) hash ^= BusinessType.GetHashCode();
      if (BusinessItem.Length != 0) hash ^= BusinessItem.GetHashCode();
      if (phone_ != null) hash ^= Phone.GetHashCode();
      if (fax_ != null) hash ^= Fax.GetHashCode();
      if (primaryPersonName_ != null) hash ^= PrimaryPersonName.GetHashCode();
      if (primaryDepartment_ != null) hash ^= PrimaryDepartment.GetHashCode();
      if (primaryTelephone_ != null) hash ^= PrimaryTelephone.GetHashCode();
      if (primaryEmail_ != null) hash ^= PrimaryEmail.GetHashCode();
      if (email_ != null) hash ^= Email.GetHashCode();
      if (businessCode_ != null) hash ^= BusinessCode.GetHashCode();
      if (UnUsedFlag != 0) hash ^= UnUsedFlag.GetHashCode();
      if (representEmail_ != null) hash ^= RepresentEmail.GetHashCode();
      if (customerType_ != null) hash ^= CustomerType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CustomerCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerCode);
      }
      if (CustomerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CustomerName);
      }
      if (President.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(President);
      }
      if (PersonNo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PersonNo);
      }
      if (ZipCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ZipCode);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Address);
      }
      if (address2_ != null) {
        _single_address2_codec.WriteTagAndValue(output, Address2);
      }
      if (BusinessType.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(BusinessType);
      }
      if (BusinessItem.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(BusinessItem);
      }
      if (phone_ != null) {
        _single_phone_codec.WriteTagAndValue(output, Phone);
      }
      if (fax_ != null) {
        _single_fax_codec.WriteTagAndValue(output, Fax);
      }
      if (primaryPersonName_ != null) {
        _single_primaryPersonName_codec.WriteTagAndValue(output, PrimaryPersonName);
      }
      if (primaryDepartment_ != null) {
        _single_primaryDepartment_codec.WriteTagAndValue(output, PrimaryDepartment);
      }
      if (primaryTelephone_ != null) {
        _single_primaryTelephone_codec.WriteTagAndValue(output, PrimaryTelephone);
      }
      if (primaryEmail_ != null) {
        _single_primaryEmail_codec.WriteTagAndValue(output, PrimaryEmail);
      }
      if (email_ != null) {
        _single_email_codec.WriteTagAndValue(output, Email);
      }
      if (businessCode_ != null) {
        _single_businessCode_codec.WriteTagAndValue(output, BusinessCode);
      }
      if (UnUsedFlag != 0) {
        output.WriteRawTag(144, 1);
        output.WriteSInt32(UnUsedFlag);
      }
      if (representEmail_ != null) {
        _single_representEmail_codec.WriteTagAndValue(output, RepresentEmail);
      }
      if (customerType_ != null) {
        _single_customerType_codec.WriteTagAndValue(output, CustomerType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerCode);
      }
      if (CustomerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerName);
      }
      if (President.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(President);
      }
      if (PersonNo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PersonNo);
      }
      if (ZipCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZipCode);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (address2_ != null) {
        size += _single_address2_codec.CalculateSizeWithTag(Address2);
      }
      if (BusinessType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessType);
      }
      if (BusinessItem.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BusinessItem);
      }
      if (phone_ != null) {
        size += _single_phone_codec.CalculateSizeWithTag(Phone);
      }
      if (fax_ != null) {
        size += _single_fax_codec.CalculateSizeWithTag(Fax);
      }
      if (primaryPersonName_ != null) {
        size += _single_primaryPersonName_codec.CalculateSizeWithTag(PrimaryPersonName);
      }
      if (primaryDepartment_ != null) {
        size += _single_primaryDepartment_codec.CalculateSizeWithTag(PrimaryDepartment);
      }
      if (primaryTelephone_ != null) {
        size += _single_primaryTelephone_codec.CalculateSizeWithTag(PrimaryTelephone);
      }
      if (primaryEmail_ != null) {
        size += _single_primaryEmail_codec.CalculateSizeWithTag(PrimaryEmail);
      }
      if (email_ != null) {
        size += _single_email_codec.CalculateSizeWithTag(Email);
      }
      if (businessCode_ != null) {
        size += _single_businessCode_codec.CalculateSizeWithTag(BusinessCode);
      }
      if (UnUsedFlag != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(UnUsedFlag);
      }
      if (representEmail_ != null) {
        size += _single_representEmail_codec.CalculateSizeWithTag(RepresentEmail);
      }
      if (customerType_ != null) {
        size += _single_customerType_codec.CalculateSizeWithTag(CustomerType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerCode.Length != 0) {
        CustomerCode = other.CustomerCode;
      }
      if (other.CustomerName.Length != 0) {
        CustomerName = other.CustomerName;
      }
      if (other.President.Length != 0) {
        President = other.President;
      }
      if (other.PersonNo.Length != 0) {
        PersonNo = other.PersonNo;
      }
      if (other.ZipCode.Length != 0) {
        ZipCode = other.ZipCode;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.address2_ != null) {
        if (address2_ == null || other.Address2 != "") {
          Address2 = other.Address2;
        }
      }
      if (other.BusinessType.Length != 0) {
        BusinessType = other.BusinessType;
      }
      if (other.BusinessItem.Length != 0) {
        BusinessItem = other.BusinessItem;
      }
      if (other.phone_ != null) {
        if (phone_ == null || other.Phone != "") {
          Phone = other.Phone;
        }
      }
      if (other.fax_ != null) {
        if (fax_ == null || other.Fax != "") {
          Fax = other.Fax;
        }
      }
      if (other.primaryPersonName_ != null) {
        if (primaryPersonName_ == null || other.PrimaryPersonName != "") {
          PrimaryPersonName = other.PrimaryPersonName;
        }
      }
      if (other.primaryDepartment_ != null) {
        if (primaryDepartment_ == null || other.PrimaryDepartment != "") {
          PrimaryDepartment = other.PrimaryDepartment;
        }
      }
      if (other.primaryTelephone_ != null) {
        if (primaryTelephone_ == null || other.PrimaryTelephone != "") {
          PrimaryTelephone = other.PrimaryTelephone;
        }
      }
      if (other.primaryEmail_ != null) {
        if (primaryEmail_ == null || other.PrimaryEmail != "") {
          PrimaryEmail = other.PrimaryEmail;
        }
      }
      if (other.email_ != null) {
        if (email_ == null || other.Email != "") {
          Email = other.Email;
        }
      }
      if (other.businessCode_ != null) {
        if (businessCode_ == null || other.BusinessCode != "") {
          BusinessCode = other.BusinessCode;
        }
      }
      if (other.UnUsedFlag != 0) {
        UnUsedFlag = other.UnUsedFlag;
      }
      if (other.representEmail_ != null) {
        if (representEmail_ == null || other.RepresentEmail != "") {
          RepresentEmail = other.RepresentEmail;
        }
      }
      if (other.customerType_ != null) {
        if (customerType_ == null || other.CustomerType != 0) {
          CustomerType = other.CustomerType;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerCode = input.ReadString();
            break;
          }
          case 18: {
            CustomerName = input.ReadString();
            break;
          }
          case 26: {
            President = input.ReadString();
            break;
          }
          case 34: {
            PersonNo = input.ReadString();
            break;
          }
          case 42: {
            ZipCode = input.ReadString();
            break;
          }
          case 50: {
            Address = input.ReadString();
            break;
          }
          case 58: {
            string value = _single_address2_codec.Read(input);
            if (address2_ == null || value != "") {
              Address2 = value;
            }
            break;
          }
          case 66: {
            BusinessType = input.ReadString();
            break;
          }
          case 74: {
            BusinessItem = input.ReadString();
            break;
          }
          case 82: {
            string value = _single_phone_codec.Read(input);
            if (phone_ == null || value != "") {
              Phone = value;
            }
            break;
          }
          case 90: {
            string value = _single_fax_codec.Read(input);
            if (fax_ == null || value != "") {
              Fax = value;
            }
            break;
          }
          case 98: {
            string value = _single_primaryPersonName_codec.Read(input);
            if (primaryPersonName_ == null || value != "") {
              PrimaryPersonName = value;
            }
            break;
          }
          case 106: {
            string value = _single_primaryDepartment_codec.Read(input);
            if (primaryDepartment_ == null || value != "") {
              PrimaryDepartment = value;
            }
            break;
          }
          case 114: {
            string value = _single_primaryTelephone_codec.Read(input);
            if (primaryTelephone_ == null || value != "") {
              PrimaryTelephone = value;
            }
            break;
          }
          case 122: {
            string value = _single_primaryEmail_codec.Read(input);
            if (primaryEmail_ == null || value != "") {
              PrimaryEmail = value;
            }
            break;
          }
          case 130: {
            string value = _single_email_codec.Read(input);
            if (email_ == null || value != "") {
              Email = value;
            }
            break;
          }
          case 138: {
            string value = _single_businessCode_codec.Read(input);
            if (businessCode_ == null || value != "") {
              BusinessCode = value;
            }
            break;
          }
          case 144: {
            UnUsedFlag = input.ReadSInt32();
            break;
          }
          case 154: {
            string value = _single_representEmail_codec.Read(input);
            if (representEmail_ == null || value != "") {
              RepresentEmail = value;
            }
            break;
          }
          case 162: {
            int? value = _single_customerType_codec.Read(input);
            if (customerType_ == null || value != 0) {
              CustomerType = value;
            }
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateResponse : pb::IMessage<UpdateResponse> {
    private static readonly pb::MessageParser<UpdateResponse> _parser = new pb::MessageParser<UpdateResponse>(() => new UpdateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse(UpdateResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateResponse Clone() {
      return new UpdateResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteRequest : pb::IMessage<DeleteRequest> {
    private static readonly pb::MessageParser<DeleteRequest> _parser = new pb::MessageParser<DeleteRequest>(() => new DeleteRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest(DeleteRequest other) : this() {
      customerCode_ = other.customerCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteRequest Clone() {
      return new DeleteRequest(this);
    }

    /// <summary>Field number for the "customerCode" field.</summary>
    public const int CustomerCodeFieldNumber = 1;
    private string customerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CustomerCode {
      get { return customerCode_; }
      set {
        customerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CustomerCode != other.CustomerCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CustomerCode.Length != 0) hash ^= CustomerCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CustomerCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CustomerCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CustomerCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteRequest other) {
      if (other == null) {
        return;
      }
      if (other.CustomerCode.Length != 0) {
        CustomerCode = other.CustomerCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CustomerCode = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteResponse : pb::IMessage<DeleteResponse> {
    private static readonly pb::MessageParser<DeleteResponse> _parser = new pb::MessageParser<DeleteResponse>(() => new DeleteResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::HaccpManager.CustomersProtos.CustomersReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse(DeleteResponse other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteResponse Clone() {
      return new DeleteResponse(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteResponse other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
