// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mes/CalendarType.proto

package CalendarTypeSvc;

public final class CalendarTypeOuterClass {
  private CalendarTypeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GrpcDecimalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.GrpcDecimal)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 units = 1;</code>
     * @return The units.
     */
    long getUnits();

    /**
     * <code>sfixed32 nanos = 2;</code>
     * @return The nanos.
     */
    int getNanos();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.GrpcDecimal}
   */
  public static final class GrpcDecimal extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.GrpcDecimal)
      GrpcDecimalOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GrpcDecimal.newBuilder() to construct.
    private GrpcDecimal(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GrpcDecimal() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GrpcDecimal();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GrpcDecimal(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              units_ = input.readInt64();
              break;
            }
            case 21: {

              nanos_ = input.readSFixed32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GrpcDecimal_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GrpcDecimal_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal.class, CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal.Builder.class);
    }

    public static final int UNITS_FIELD_NUMBER = 1;
    private long units_;
    /**
     * <code>int64 units = 1;</code>
     * @return The units.
     */
    @java.lang.Override
    public long getUnits() {
      return units_;
    }

    public static final int NANOS_FIELD_NUMBER = 2;
    private int nanos_;
    /**
     * <code>sfixed32 nanos = 2;</code>
     * @return The nanos.
     */
    @java.lang.Override
    public int getNanos() {
      return nanos_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (units_ != 0L) {
        output.writeInt64(1, units_);
      }
      if (nanos_ != 0) {
        output.writeSFixed32(2, nanos_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (units_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, units_);
      }
      if (nanos_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSFixed32Size(2, nanos_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal other = (CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal) obj;

      if (getUnits()
          != other.getUnits()) return false;
      if (getNanos()
          != other.getNanos()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + UNITS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getUnits());
      hash = (37 * hash) + NANOS_FIELD_NUMBER;
      hash = (53 * hash) + getNanos();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.GrpcDecimal}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.GrpcDecimal)
        CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimalOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GrpcDecimal_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GrpcDecimal_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal.class, CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        units_ = 0L;

        nanos_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GrpcDecimal_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal build() {
        CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal result = new CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal(this);
        result.units_ = units_;
        result.nanos_ = nanos_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal.getDefaultInstance()) return this;
        if (other.getUnits() != 0L) {
          setUnits(other.getUnits());
        }
        if (other.getNanos() != 0) {
          setNanos(other.getNanos());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long units_ ;
      /**
       * <code>int64 units = 1;</code>
       * @return The units.
       */
      @java.lang.Override
      public long getUnits() {
        return units_;
      }
      /**
       * <code>int64 units = 1;</code>
       * @param value The units to set.
       * @return This builder for chaining.
       */
      public Builder setUnits(long value) {
        
        units_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 units = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearUnits() {
        
        units_ = 0L;
        onChanged();
        return this;
      }

      private int nanos_ ;
      /**
       * <code>sfixed32 nanos = 2;</code>
       * @return The nanos.
       */
      @java.lang.Override
      public int getNanos() {
        return nanos_;
      }
      /**
       * <code>sfixed32 nanos = 2;</code>
       * @param value The nanos to set.
       * @return This builder for chaining.
       */
      public Builder setNanos(int value) {
        
        nanos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sfixed32 nanos = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearNanos() {
        
        nanos_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.GrpcDecimal)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.GrpcDecimal)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GrpcDecimal>
        PARSER = new com.google.protobuf.AbstractParser<GrpcDecimal>() {
      @java.lang.Override
      public GrpcDecimal parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GrpcDecimal(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GrpcDecimal> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GrpcDecimal> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.GrpcDecimal getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalendarTypeResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.CalendarTypeResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes calendarType = 1;</code>
     * @return The calendarType.
     */
    com.google.protobuf.ByteString getCalendarType();

    /**
     * <code>string jsonString = 2;</code>
     * @return The jsonString.
     */
    java.lang.String getJsonString();
    /**
     * <code>string jsonString = 2;</code>
     * @return The bytes for jsonString.
     */
    com.google.protobuf.ByteString
        getJsonStringBytes();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.CalendarTypeResponse}
   */
  public static final class CalendarTypeResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.CalendarTypeResponse)
      CalendarTypeResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CalendarTypeResponse.newBuilder() to construct.
    private CalendarTypeResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CalendarTypeResponse() {
      calendarType_ = com.google.protobuf.ByteString.EMPTY;
      jsonString_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CalendarTypeResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CalendarTypeResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              calendarType_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              jsonString_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse.Builder.class);
    }

    public static final int CALENDARTYPE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString calendarType_;
    /**
     * <code>bytes calendarType = 1;</code>
     * @return The calendarType.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCalendarType() {
      return calendarType_;
    }

    public static final int JSONSTRING_FIELD_NUMBER = 2;
    private volatile java.lang.Object jsonString_;
    /**
     * <code>string jsonString = 2;</code>
     * @return The jsonString.
     */
    @java.lang.Override
    public java.lang.String getJsonString() {
      java.lang.Object ref = jsonString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jsonString_ = s;
        return s;
      }
    }
    /**
     * <code>string jsonString = 2;</code>
     * @return The bytes for jsonString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJsonStringBytes() {
      java.lang.Object ref = jsonString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jsonString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!calendarType_.isEmpty()) {
        output.writeBytes(1, calendarType_);
      }
      if (!getJsonStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, jsonString_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!calendarType_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, calendarType_);
      }
      if (!getJsonStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, jsonString_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse other = (CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse) obj;

      if (!getCalendarType()
          .equals(other.getCalendarType())) return false;
      if (!getJsonString()
          .equals(other.getJsonString())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALENDARTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarType().hashCode();
      hash = (37 * hash) + JSONSTRING_FIELD_NUMBER;
      hash = (53 * hash) + getJsonString().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.CalendarTypeResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.CalendarTypeResponse)
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        calendarType_ = com.google.protobuf.ByteString.EMPTY;

        jsonString_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeResponse_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse build() {
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse result = new CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse(this);
        result.calendarType_ = calendarType_;
        result.jsonString_ = jsonString_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse.getDefaultInstance()) return this;
        if (other.getCalendarType() != com.google.protobuf.ByteString.EMPTY) {
          setCalendarType(other.getCalendarType());
        }
        if (!other.getJsonString().isEmpty()) {
          jsonString_ = other.jsonString_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString calendarType_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes calendarType = 1;</code>
       * @return The calendarType.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCalendarType() {
        return calendarType_;
      }
      /**
       * <code>bytes calendarType = 1;</code>
       * @param value The calendarType to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarType(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        calendarType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes calendarType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarType() {
        
        calendarType_ = getDefaultInstance().getCalendarType();
        onChanged();
        return this;
      }

      private java.lang.Object jsonString_ = "";
      /**
       * <code>string jsonString = 2;</code>
       * @return The jsonString.
       */
      public java.lang.String getJsonString() {
        java.lang.Object ref = jsonString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jsonString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string jsonString = 2;</code>
       * @return The bytes for jsonString.
       */
      public com.google.protobuf.ByteString
          getJsonStringBytes() {
        java.lang.Object ref = jsonString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jsonString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string jsonString = 2;</code>
       * @param value The jsonString to set.
       * @return This builder for chaining.
       */
      public Builder setJsonString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jsonString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string jsonString = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearJsonString() {
        
        jsonString_ = getDefaultInstance().getJsonString();
        onChanged();
        return this;
      }
      /**
       * <code>string jsonString = 2;</code>
       * @param value The bytes for jsonString to set.
       * @return This builder for chaining.
       */
      public Builder setJsonStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jsonString_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.CalendarTypeResponse)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.CalendarTypeResponse)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CalendarTypeResponse>
        PARSER = new com.google.protobuf.AbstractParser<CalendarTypeResponse>() {
      @java.lang.Override
      public CalendarTypeResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalendarTypeResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CalendarTypeResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CalendarTypeResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CalendarTypeSetResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.CalendarTypeSetResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes calendarTypeSet = 1;</code>
     * @return The calendarTypeSet.
     */
    com.google.protobuf.ByteString getCalendarTypeSet();

    /**
     * <code>string jsonString = 2;</code>
     * @return The jsonString.
     */
    java.lang.String getJsonString();
    /**
     * <code>string jsonString = 2;</code>
     * @return The bytes for jsonString.
     */
    com.google.protobuf.ByteString
        getJsonStringBytes();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.CalendarTypeSetResponse}
   */
  public static final class CalendarTypeSetResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.CalendarTypeSetResponse)
      CalendarTypeSetResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CalendarTypeSetResponse.newBuilder() to construct.
    private CalendarTypeSetResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CalendarTypeSetResponse() {
      calendarTypeSet_ = com.google.protobuf.ByteString.EMPTY;
      jsonString_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CalendarTypeSetResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private CalendarTypeSetResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              calendarTypeSet_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              jsonString_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeSetResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeSetResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse.Builder.class);
    }

    public static final int CALENDARTYPESET_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString calendarTypeSet_;
    /**
     * <code>bytes calendarTypeSet = 1;</code>
     * @return The calendarTypeSet.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getCalendarTypeSet() {
      return calendarTypeSet_;
    }

    public static final int JSONSTRING_FIELD_NUMBER = 2;
    private volatile java.lang.Object jsonString_;
    /**
     * <code>string jsonString = 2;</code>
     * @return The jsonString.
     */
    @java.lang.Override
    public java.lang.String getJsonString() {
      java.lang.Object ref = jsonString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jsonString_ = s;
        return s;
      }
    }
    /**
     * <code>string jsonString = 2;</code>
     * @return The bytes for jsonString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJsonStringBytes() {
      java.lang.Object ref = jsonString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jsonString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!calendarTypeSet_.isEmpty()) {
        output.writeBytes(1, calendarTypeSet_);
      }
      if (!getJsonStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, jsonString_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!calendarTypeSet_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, calendarTypeSet_);
      }
      if (!getJsonStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, jsonString_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse other = (CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse) obj;

      if (!getCalendarTypeSet()
          .equals(other.getCalendarTypeSet())) return false;
      if (!getJsonString()
          .equals(other.getJsonString())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALENDARTYPESET_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarTypeSet().hashCode();
      hash = (37 * hash) + JSONSTRING_FIELD_NUMBER;
      hash = (53 * hash) + getJsonString().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.CalendarTypeSetResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.CalendarTypeSetResponse)
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeSetResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeSetResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        calendarTypeSet_ = com.google.protobuf.ByteString.EMPTY;

        jsonString_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_CalendarTypeSetResponse_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse build() {
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse result = new CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse(this);
        result.calendarTypeSet_ = calendarTypeSet_;
        result.jsonString_ = jsonString_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse.getDefaultInstance()) return this;
        if (other.getCalendarTypeSet() != com.google.protobuf.ByteString.EMPTY) {
          setCalendarTypeSet(other.getCalendarTypeSet());
        }
        if (!other.getJsonString().isEmpty()) {
          jsonString_ = other.jsonString_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString calendarTypeSet_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes calendarTypeSet = 1;</code>
       * @return The calendarTypeSet.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getCalendarTypeSet() {
        return calendarTypeSet_;
      }
      /**
       * <code>bytes calendarTypeSet = 1;</code>
       * @param value The calendarTypeSet to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarTypeSet(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        calendarTypeSet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes calendarTypeSet = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarTypeSet() {
        
        calendarTypeSet_ = getDefaultInstance().getCalendarTypeSet();
        onChanged();
        return this;
      }

      private java.lang.Object jsonString_ = "";
      /**
       * <code>string jsonString = 2;</code>
       * @return The jsonString.
       */
      public java.lang.String getJsonString() {
        java.lang.Object ref = jsonString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jsonString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string jsonString = 2;</code>
       * @return The bytes for jsonString.
       */
      public com.google.protobuf.ByteString
          getJsonStringBytes() {
        java.lang.Object ref = jsonString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jsonString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string jsonString = 2;</code>
       * @param value The jsonString to set.
       * @return This builder for chaining.
       */
      public Builder setJsonString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jsonString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string jsonString = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearJsonString() {
        
        jsonString_ = getDefaultInstance().getJsonString();
        onChanged();
        return this;
      }
      /**
       * <code>string jsonString = 2;</code>
       * @param value The bytes for jsonString to set.
       * @return This builder for chaining.
       */
      public Builder setJsonStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jsonString_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.CalendarTypeSetResponse)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.CalendarTypeSetResponse)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CalendarTypeSetResponse>
        PARSER = new com.google.protobuf.AbstractParser<CalendarTypeSetResponse>() {
      @java.lang.Override
      public CalendarTypeSetResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CalendarTypeSetResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CalendarTypeSetResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CalendarTypeSetResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.CalendarTypeSetResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DataSetResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.DataSetResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>bytes dataSet = 1;</code>
     * @return The dataSet.
     */
    com.google.protobuf.ByteString getDataSet();

    /**
     * <code>string jsonString = 2;</code>
     * @return The jsonString.
     */
    java.lang.String getJsonString();
    /**
     * <code>string jsonString = 2;</code>
     * @return The bytes for jsonString.
     */
    com.google.protobuf.ByteString
        getJsonStringBytes();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.DataSetResponse}
   */
  public static final class DataSetResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.DataSetResponse)
      DataSetResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DataSetResponse.newBuilder() to construct.
    private DataSetResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DataSetResponse() {
      dataSet_ = com.google.protobuf.ByteString.EMPTY;
      jsonString_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DataSetResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DataSetResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {

              dataSet_ = input.readBytes();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              jsonString_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DataSetResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DataSetResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse.Builder.class);
    }

    public static final int DATASET_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString dataSet_;
    /**
     * <code>bytes dataSet = 1;</code>
     * @return The dataSet.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDataSet() {
      return dataSet_;
    }

    public static final int JSONSTRING_FIELD_NUMBER = 2;
    private volatile java.lang.Object jsonString_;
    /**
     * <code>string jsonString = 2;</code>
     * @return The jsonString.
     */
    @java.lang.Override
    public java.lang.String getJsonString() {
      java.lang.Object ref = jsonString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        jsonString_ = s;
        return s;
      }
    }
    /**
     * <code>string jsonString = 2;</code>
     * @return The bytes for jsonString.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getJsonStringBytes() {
      java.lang.Object ref = jsonString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        jsonString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!dataSet_.isEmpty()) {
        output.writeBytes(1, dataSet_);
      }
      if (!getJsonStringBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, jsonString_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!dataSet_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, dataSet_);
      }
      if (!getJsonStringBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, jsonString_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse other = (CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse) obj;

      if (!getDataSet()
          .equals(other.getDataSet())) return false;
      if (!getJsonString()
          .equals(other.getJsonString())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + DATASET_FIELD_NUMBER;
      hash = (53 * hash) + getDataSet().hashCode();
      hash = (37 * hash) + JSONSTRING_FIELD_NUMBER;
      hash = (53 * hash) + getJsonString().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.DataSetResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.DataSetResponse)
        CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DataSetResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DataSetResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        dataSet_ = com.google.protobuf.ByteString.EMPTY;

        jsonString_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DataSetResponse_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse build() {
        CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse result = new CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse(this);
        result.dataSet_ = dataSet_;
        result.jsonString_ = jsonString_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse.getDefaultInstance()) return this;
        if (other.getDataSet() != com.google.protobuf.ByteString.EMPTY) {
          setDataSet(other.getDataSet());
        }
        if (!other.getJsonString().isEmpty()) {
          jsonString_ = other.jsonString_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.ByteString dataSet_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes dataSet = 1;</code>
       * @return The dataSet.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDataSet() {
        return dataSet_;
      }
      /**
       * <code>bytes dataSet = 1;</code>
       * @param value The dataSet to set.
       * @return This builder for chaining.
       */
      public Builder setDataSet(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        dataSet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes dataSet = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataSet() {
        
        dataSet_ = getDefaultInstance().getDataSet();
        onChanged();
        return this;
      }

      private java.lang.Object jsonString_ = "";
      /**
       * <code>string jsonString = 2;</code>
       * @return The jsonString.
       */
      public java.lang.String getJsonString() {
        java.lang.Object ref = jsonString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          jsonString_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string jsonString = 2;</code>
       * @return The bytes for jsonString.
       */
      public com.google.protobuf.ByteString
          getJsonStringBytes() {
        java.lang.Object ref = jsonString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          jsonString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string jsonString = 2;</code>
       * @param value The jsonString to set.
       * @return This builder for chaining.
       */
      public Builder setJsonString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        jsonString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string jsonString = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearJsonString() {
        
        jsonString_ = getDefaultInstance().getJsonString();
        onChanged();
        return this;
      }
      /**
       * <code>string jsonString = 2;</code>
       * @param value The bytes for jsonString to set.
       * @return This builder for chaining.
       */
      public Builder setJsonStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        jsonString_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.DataSetResponse)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.DataSetResponse)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DataSetResponse>
        PARSER = new com.google.protobuf.AbstractParser<DataSetResponse>() {
      @java.lang.Override
      public DataSetResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DataSetResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DataSetResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DataSetResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.DataSetResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetByKeyRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.GetByKeyRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    int getCalendarType();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.GetByKeyRequest}
   */
  public static final class GetByKeyRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.GetByKeyRequest)
      GetByKeyRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetByKeyRequest.newBuilder() to construct.
    private GetByKeyRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetByKeyRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetByKeyRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetByKeyRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              calendarType_ = input.readSInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GetByKeyRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GetByKeyRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest.Builder.class);
    }

    public static final int CALENDARTYPE_FIELD_NUMBER = 1;
    private int calendarType_;
    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    @java.lang.Override
    public int getCalendarType() {
      return calendarType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (calendarType_ != 0) {
        output.writeSInt32(1, calendarType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (calendarType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, calendarType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest other = (CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest) obj;

      if (getCalendarType()
          != other.getCalendarType()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALENDARTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.GetByKeyRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.GetByKeyRequest)
        CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GetByKeyRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GetByKeyRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        calendarType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_GetByKeyRequest_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest build() {
        CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest result = new CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest(this);
        result.calendarType_ = calendarType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest.getDefaultInstance()) return this;
        if (other.getCalendarType() != 0) {
          setCalendarType(other.getCalendarType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int calendarType_ ;
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return The calendarType.
       */
      @java.lang.Override
      public int getCalendarType() {
        return calendarType_;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @param value The calendarType to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarType(int value) {
        
        calendarType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarType() {
        
        calendarType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.GetByKeyRequest)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.GetByKeyRequest)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetByKeyRequest>
        PARSER = new com.google.protobuf.AbstractParser<GetByKeyRequest>() {
      @java.lang.Override
      public GetByKeyRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetByKeyRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetByKeyRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetByKeyRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.GetByKeyRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface InsertRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.InsertRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    int getCalendarType();

    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The calendarTypeName.
     */
    java.lang.String getCalendarTypeName();
    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The bytes for calendarTypeName.
     */
    com.google.protobuf.ByteString
        getCalendarTypeNameBytes();

    /**
     * <code>sint32 mon = 3;</code>
     * @return The mon.
     */
    int getMon();

    /**
     * <code>sint32 tue = 4;</code>
     * @return The tue.
     */
    int getTue();

    /**
     * <code>sint32 wed = 5;</code>
     * @return The wed.
     */
    int getWed();

    /**
     * <code>sint32 thu = 6;</code>
     * @return The thu.
     */
    int getThu();

    /**
     * <code>sint32 fri = 7;</code>
     * @return The fri.
     */
    int getFri();

    /**
     * <code>sint32 sat = 8;</code>
     * @return The sat.
     */
    int getSat();

    /**
     * <code>sint32 sun = 9;</code>
     * @return The sun.
     */
    int getSun();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.InsertRequest}
   */
  public static final class InsertRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.InsertRequest)
      InsertRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InsertRequest.newBuilder() to construct.
    private InsertRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InsertRequest() {
      calendarTypeName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InsertRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InsertRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              calendarType_ = input.readSInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              calendarTypeName_ = s;
              break;
            }
            case 24: {

              mon_ = input.readSInt32();
              break;
            }
            case 32: {

              tue_ = input.readSInt32();
              break;
            }
            case 40: {

              wed_ = input.readSInt32();
              break;
            }
            case 48: {

              thu_ = input.readSInt32();
              break;
            }
            case 56: {

              fri_ = input.readSInt32();
              break;
            }
            case 64: {

              sat_ = input.readSInt32();
              break;
            }
            case 72: {

              sun_ = input.readSInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_InsertRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_InsertRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest.Builder.class);
    }

    public static final int CALENDARTYPE_FIELD_NUMBER = 1;
    private int calendarType_;
    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    @java.lang.Override
    public int getCalendarType() {
      return calendarType_;
    }

    public static final int CALENDARTYPENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object calendarTypeName_;
    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The calendarTypeName.
     */
    @java.lang.Override
    public java.lang.String getCalendarTypeName() {
      java.lang.Object ref = calendarTypeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        calendarTypeName_ = s;
        return s;
      }
    }
    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The bytes for calendarTypeName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCalendarTypeNameBytes() {
      java.lang.Object ref = calendarTypeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calendarTypeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MON_FIELD_NUMBER = 3;
    private int mon_;
    /**
     * <code>sint32 mon = 3;</code>
     * @return The mon.
     */
    @java.lang.Override
    public int getMon() {
      return mon_;
    }

    public static final int TUE_FIELD_NUMBER = 4;
    private int tue_;
    /**
     * <code>sint32 tue = 4;</code>
     * @return The tue.
     */
    @java.lang.Override
    public int getTue() {
      return tue_;
    }

    public static final int WED_FIELD_NUMBER = 5;
    private int wed_;
    /**
     * <code>sint32 wed = 5;</code>
     * @return The wed.
     */
    @java.lang.Override
    public int getWed() {
      return wed_;
    }

    public static final int THU_FIELD_NUMBER = 6;
    private int thu_;
    /**
     * <code>sint32 thu = 6;</code>
     * @return The thu.
     */
    @java.lang.Override
    public int getThu() {
      return thu_;
    }

    public static final int FRI_FIELD_NUMBER = 7;
    private int fri_;
    /**
     * <code>sint32 fri = 7;</code>
     * @return The fri.
     */
    @java.lang.Override
    public int getFri() {
      return fri_;
    }

    public static final int SAT_FIELD_NUMBER = 8;
    private int sat_;
    /**
     * <code>sint32 sat = 8;</code>
     * @return The sat.
     */
    @java.lang.Override
    public int getSat() {
      return sat_;
    }

    public static final int SUN_FIELD_NUMBER = 9;
    private int sun_;
    /**
     * <code>sint32 sun = 9;</code>
     * @return The sun.
     */
    @java.lang.Override
    public int getSun() {
      return sun_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (calendarType_ != 0) {
        output.writeSInt32(1, calendarType_);
      }
      if (!getCalendarTypeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, calendarTypeName_);
      }
      if (mon_ != 0) {
        output.writeSInt32(3, mon_);
      }
      if (tue_ != 0) {
        output.writeSInt32(4, tue_);
      }
      if (wed_ != 0) {
        output.writeSInt32(5, wed_);
      }
      if (thu_ != 0) {
        output.writeSInt32(6, thu_);
      }
      if (fri_ != 0) {
        output.writeSInt32(7, fri_);
      }
      if (sat_ != 0) {
        output.writeSInt32(8, sat_);
      }
      if (sun_ != 0) {
        output.writeSInt32(9, sun_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (calendarType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, calendarType_);
      }
      if (!getCalendarTypeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, calendarTypeName_);
      }
      if (mon_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, mon_);
      }
      if (tue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, tue_);
      }
      if (wed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, wed_);
      }
      if (thu_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, thu_);
      }
      if (fri_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, fri_);
      }
      if (sat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, sat_);
      }
      if (sun_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, sun_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest other = (CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest) obj;

      if (getCalendarType()
          != other.getCalendarType()) return false;
      if (!getCalendarTypeName()
          .equals(other.getCalendarTypeName())) return false;
      if (getMon()
          != other.getMon()) return false;
      if (getTue()
          != other.getTue()) return false;
      if (getWed()
          != other.getWed()) return false;
      if (getThu()
          != other.getThu()) return false;
      if (getFri()
          != other.getFri()) return false;
      if (getSat()
          != other.getSat()) return false;
      if (getSun()
          != other.getSun()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALENDARTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarType();
      hash = (37 * hash) + CALENDARTYPENAME_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarTypeName().hashCode();
      hash = (37 * hash) + MON_FIELD_NUMBER;
      hash = (53 * hash) + getMon();
      hash = (37 * hash) + TUE_FIELD_NUMBER;
      hash = (53 * hash) + getTue();
      hash = (37 * hash) + WED_FIELD_NUMBER;
      hash = (53 * hash) + getWed();
      hash = (37 * hash) + THU_FIELD_NUMBER;
      hash = (53 * hash) + getThu();
      hash = (37 * hash) + FRI_FIELD_NUMBER;
      hash = (53 * hash) + getFri();
      hash = (37 * hash) + SAT_FIELD_NUMBER;
      hash = (53 * hash) + getSat();
      hash = (37 * hash) + SUN_FIELD_NUMBER;
      hash = (53 * hash) + getSun();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.InsertRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.InsertRequest)
        CalendarTypeSvc.CalendarTypeOuterClass.InsertRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_InsertRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_InsertRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        calendarType_ = 0;

        calendarTypeName_ = "";

        mon_ = 0;

        tue_ = 0;

        wed_ = 0;

        thu_ = 0;

        fri_ = 0;

        sat_ = 0;

        sun_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_InsertRequest_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest build() {
        CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest result = new CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest(this);
        result.calendarType_ = calendarType_;
        result.calendarTypeName_ = calendarTypeName_;
        result.mon_ = mon_;
        result.tue_ = tue_;
        result.wed_ = wed_;
        result.thu_ = thu_;
        result.fri_ = fri_;
        result.sat_ = sat_;
        result.sun_ = sun_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest.getDefaultInstance()) return this;
        if (other.getCalendarType() != 0) {
          setCalendarType(other.getCalendarType());
        }
        if (!other.getCalendarTypeName().isEmpty()) {
          calendarTypeName_ = other.calendarTypeName_;
          onChanged();
        }
        if (other.getMon() != 0) {
          setMon(other.getMon());
        }
        if (other.getTue() != 0) {
          setTue(other.getTue());
        }
        if (other.getWed() != 0) {
          setWed(other.getWed());
        }
        if (other.getThu() != 0) {
          setThu(other.getThu());
        }
        if (other.getFri() != 0) {
          setFri(other.getFri());
        }
        if (other.getSat() != 0) {
          setSat(other.getSat());
        }
        if (other.getSun() != 0) {
          setSun(other.getSun());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int calendarType_ ;
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return The calendarType.
       */
      @java.lang.Override
      public int getCalendarType() {
        return calendarType_;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @param value The calendarType to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarType(int value) {
        
        calendarType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarType() {
        
        calendarType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object calendarTypeName_ = "";
      /**
       * <code>string calendarTypeName = 2;</code>
       * @return The calendarTypeName.
       */
      public java.lang.String getCalendarTypeName() {
        java.lang.Object ref = calendarTypeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          calendarTypeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @return The bytes for calendarTypeName.
       */
      public com.google.protobuf.ByteString
          getCalendarTypeNameBytes() {
        java.lang.Object ref = calendarTypeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calendarTypeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @param value The calendarTypeName to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        calendarTypeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarTypeName() {
        
        calendarTypeName_ = getDefaultInstance().getCalendarTypeName();
        onChanged();
        return this;
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @param value The bytes for calendarTypeName to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        calendarTypeName_ = value;
        onChanged();
        return this;
      }

      private int mon_ ;
      /**
       * <code>sint32 mon = 3;</code>
       * @return The mon.
       */
      @java.lang.Override
      public int getMon() {
        return mon_;
      }
      /**
       * <code>sint32 mon = 3;</code>
       * @param value The mon to set.
       * @return This builder for chaining.
       */
      public Builder setMon(int value) {
        
        mon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 mon = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMon() {
        
        mon_ = 0;
        onChanged();
        return this;
      }

      private int tue_ ;
      /**
       * <code>sint32 tue = 4;</code>
       * @return The tue.
       */
      @java.lang.Override
      public int getTue() {
        return tue_;
      }
      /**
       * <code>sint32 tue = 4;</code>
       * @param value The tue to set.
       * @return This builder for chaining.
       */
      public Builder setTue(int value) {
        
        tue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 tue = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTue() {
        
        tue_ = 0;
        onChanged();
        return this;
      }

      private int wed_ ;
      /**
       * <code>sint32 wed = 5;</code>
       * @return The wed.
       */
      @java.lang.Override
      public int getWed() {
        return wed_;
      }
      /**
       * <code>sint32 wed = 5;</code>
       * @param value The wed to set.
       * @return This builder for chaining.
       */
      public Builder setWed(int value) {
        
        wed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 wed = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWed() {
        
        wed_ = 0;
        onChanged();
        return this;
      }

      private int thu_ ;
      /**
       * <code>sint32 thu = 6;</code>
       * @return The thu.
       */
      @java.lang.Override
      public int getThu() {
        return thu_;
      }
      /**
       * <code>sint32 thu = 6;</code>
       * @param value The thu to set.
       * @return This builder for chaining.
       */
      public Builder setThu(int value) {
        
        thu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 thu = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearThu() {
        
        thu_ = 0;
        onChanged();
        return this;
      }

      private int fri_ ;
      /**
       * <code>sint32 fri = 7;</code>
       * @return The fri.
       */
      @java.lang.Override
      public int getFri() {
        return fri_;
      }
      /**
       * <code>sint32 fri = 7;</code>
       * @param value The fri to set.
       * @return This builder for chaining.
       */
      public Builder setFri(int value) {
        
        fri_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 fri = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFri() {
        
        fri_ = 0;
        onChanged();
        return this;
      }

      private int sat_ ;
      /**
       * <code>sint32 sat = 8;</code>
       * @return The sat.
       */
      @java.lang.Override
      public int getSat() {
        return sat_;
      }
      /**
       * <code>sint32 sat = 8;</code>
       * @param value The sat to set.
       * @return This builder for chaining.
       */
      public Builder setSat(int value) {
        
        sat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sat = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSat() {
        
        sat_ = 0;
        onChanged();
        return this;
      }

      private int sun_ ;
      /**
       * <code>sint32 sun = 9;</code>
       * @return The sun.
       */
      @java.lang.Override
      public int getSun() {
        return sun_;
      }
      /**
       * <code>sint32 sun = 9;</code>
       * @param value The sun to set.
       * @return This builder for chaining.
       */
      public Builder setSun(int value) {
        
        sun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sun = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSun() {
        
        sun_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.InsertRequest)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.InsertRequest)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InsertRequest>
        PARSER = new com.google.protobuf.AbstractParser<InsertRequest>() {
      @java.lang.Override
      public InsertRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InsertRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InsertRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InsertRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.InsertRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.UpdateRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    int getCalendarType();

    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The calendarTypeName.
     */
    java.lang.String getCalendarTypeName();
    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The bytes for calendarTypeName.
     */
    com.google.protobuf.ByteString
        getCalendarTypeNameBytes();

    /**
     * <code>sint32 mon = 3;</code>
     * @return The mon.
     */
    int getMon();

    /**
     * <code>sint32 tue = 4;</code>
     * @return The tue.
     */
    int getTue();

    /**
     * <code>sint32 wed = 5;</code>
     * @return The wed.
     */
    int getWed();

    /**
     * <code>sint32 thu = 6;</code>
     * @return The thu.
     */
    int getThu();

    /**
     * <code>sint32 fri = 7;</code>
     * @return The fri.
     */
    int getFri();

    /**
     * <code>sint32 sat = 8;</code>
     * @return The sat.
     */
    int getSat();

    /**
     * <code>sint32 sun = 9;</code>
     * @return The sun.
     */
    int getSun();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.UpdateRequest}
   */
  public static final class UpdateRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.UpdateRequest)
      UpdateRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateRequest.newBuilder() to construct.
    private UpdateRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateRequest() {
      calendarTypeName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpdateRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              calendarType_ = input.readSInt32();
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              calendarTypeName_ = s;
              break;
            }
            case 24: {

              mon_ = input.readSInt32();
              break;
            }
            case 32: {

              tue_ = input.readSInt32();
              break;
            }
            case 40: {

              wed_ = input.readSInt32();
              break;
            }
            case 48: {

              thu_ = input.readSInt32();
              break;
            }
            case 56: {

              fri_ = input.readSInt32();
              break;
            }
            case 64: {

              sat_ = input.readSInt32();
              break;
            }
            case 72: {

              sun_ = input.readSInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest.Builder.class);
    }

    public static final int CALENDARTYPE_FIELD_NUMBER = 1;
    private int calendarType_;
    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    @java.lang.Override
    public int getCalendarType() {
      return calendarType_;
    }

    public static final int CALENDARTYPENAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object calendarTypeName_;
    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The calendarTypeName.
     */
    @java.lang.Override
    public java.lang.String getCalendarTypeName() {
      java.lang.Object ref = calendarTypeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        calendarTypeName_ = s;
        return s;
      }
    }
    /**
     * <code>string calendarTypeName = 2;</code>
     * @return The bytes for calendarTypeName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCalendarTypeNameBytes() {
      java.lang.Object ref = calendarTypeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        calendarTypeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MON_FIELD_NUMBER = 3;
    private int mon_;
    /**
     * <code>sint32 mon = 3;</code>
     * @return The mon.
     */
    @java.lang.Override
    public int getMon() {
      return mon_;
    }

    public static final int TUE_FIELD_NUMBER = 4;
    private int tue_;
    /**
     * <code>sint32 tue = 4;</code>
     * @return The tue.
     */
    @java.lang.Override
    public int getTue() {
      return tue_;
    }

    public static final int WED_FIELD_NUMBER = 5;
    private int wed_;
    /**
     * <code>sint32 wed = 5;</code>
     * @return The wed.
     */
    @java.lang.Override
    public int getWed() {
      return wed_;
    }

    public static final int THU_FIELD_NUMBER = 6;
    private int thu_;
    /**
     * <code>sint32 thu = 6;</code>
     * @return The thu.
     */
    @java.lang.Override
    public int getThu() {
      return thu_;
    }

    public static final int FRI_FIELD_NUMBER = 7;
    private int fri_;
    /**
     * <code>sint32 fri = 7;</code>
     * @return The fri.
     */
    @java.lang.Override
    public int getFri() {
      return fri_;
    }

    public static final int SAT_FIELD_NUMBER = 8;
    private int sat_;
    /**
     * <code>sint32 sat = 8;</code>
     * @return The sat.
     */
    @java.lang.Override
    public int getSat() {
      return sat_;
    }

    public static final int SUN_FIELD_NUMBER = 9;
    private int sun_;
    /**
     * <code>sint32 sun = 9;</code>
     * @return The sun.
     */
    @java.lang.Override
    public int getSun() {
      return sun_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (calendarType_ != 0) {
        output.writeSInt32(1, calendarType_);
      }
      if (!getCalendarTypeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, calendarTypeName_);
      }
      if (mon_ != 0) {
        output.writeSInt32(3, mon_);
      }
      if (tue_ != 0) {
        output.writeSInt32(4, tue_);
      }
      if (wed_ != 0) {
        output.writeSInt32(5, wed_);
      }
      if (thu_ != 0) {
        output.writeSInt32(6, thu_);
      }
      if (fri_ != 0) {
        output.writeSInt32(7, fri_);
      }
      if (sat_ != 0) {
        output.writeSInt32(8, sat_);
      }
      if (sun_ != 0) {
        output.writeSInt32(9, sun_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (calendarType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, calendarType_);
      }
      if (!getCalendarTypeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, calendarTypeName_);
      }
      if (mon_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(3, mon_);
      }
      if (tue_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(4, tue_);
      }
      if (wed_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(5, wed_);
      }
      if (thu_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(6, thu_);
      }
      if (fri_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(7, fri_);
      }
      if (sat_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(8, sat_);
      }
      if (sun_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(9, sun_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest other = (CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest) obj;

      if (getCalendarType()
          != other.getCalendarType()) return false;
      if (!getCalendarTypeName()
          .equals(other.getCalendarTypeName())) return false;
      if (getMon()
          != other.getMon()) return false;
      if (getTue()
          != other.getTue()) return false;
      if (getWed()
          != other.getWed()) return false;
      if (getThu()
          != other.getThu()) return false;
      if (getFri()
          != other.getFri()) return false;
      if (getSat()
          != other.getSat()) return false;
      if (getSun()
          != other.getSun()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALENDARTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarType();
      hash = (37 * hash) + CALENDARTYPENAME_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarTypeName().hashCode();
      hash = (37 * hash) + MON_FIELD_NUMBER;
      hash = (53 * hash) + getMon();
      hash = (37 * hash) + TUE_FIELD_NUMBER;
      hash = (53 * hash) + getTue();
      hash = (37 * hash) + WED_FIELD_NUMBER;
      hash = (53 * hash) + getWed();
      hash = (37 * hash) + THU_FIELD_NUMBER;
      hash = (53 * hash) + getThu();
      hash = (37 * hash) + FRI_FIELD_NUMBER;
      hash = (53 * hash) + getFri();
      hash = (37 * hash) + SAT_FIELD_NUMBER;
      hash = (53 * hash) + getSat();
      hash = (37 * hash) + SUN_FIELD_NUMBER;
      hash = (53 * hash) + getSun();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.UpdateRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.UpdateRequest)
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        calendarType_ = 0;

        calendarTypeName_ = "";

        mon_ = 0;

        tue_ = 0;

        wed_ = 0;

        thu_ = 0;

        fri_ = 0;

        sat_ = 0;

        sun_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateRequest_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest build() {
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest result = new CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest(this);
        result.calendarType_ = calendarType_;
        result.calendarTypeName_ = calendarTypeName_;
        result.mon_ = mon_;
        result.tue_ = tue_;
        result.wed_ = wed_;
        result.thu_ = thu_;
        result.fri_ = fri_;
        result.sat_ = sat_;
        result.sun_ = sun_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest.getDefaultInstance()) return this;
        if (other.getCalendarType() != 0) {
          setCalendarType(other.getCalendarType());
        }
        if (!other.getCalendarTypeName().isEmpty()) {
          calendarTypeName_ = other.calendarTypeName_;
          onChanged();
        }
        if (other.getMon() != 0) {
          setMon(other.getMon());
        }
        if (other.getTue() != 0) {
          setTue(other.getTue());
        }
        if (other.getWed() != 0) {
          setWed(other.getWed());
        }
        if (other.getThu() != 0) {
          setThu(other.getThu());
        }
        if (other.getFri() != 0) {
          setFri(other.getFri());
        }
        if (other.getSat() != 0) {
          setSat(other.getSat());
        }
        if (other.getSun() != 0) {
          setSun(other.getSun());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int calendarType_ ;
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return The calendarType.
       */
      @java.lang.Override
      public int getCalendarType() {
        return calendarType_;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @param value The calendarType to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarType(int value) {
        
        calendarType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarType() {
        
        calendarType_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object calendarTypeName_ = "";
      /**
       * <code>string calendarTypeName = 2;</code>
       * @return The calendarTypeName.
       */
      public java.lang.String getCalendarTypeName() {
        java.lang.Object ref = calendarTypeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          calendarTypeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @return The bytes for calendarTypeName.
       */
      public com.google.protobuf.ByteString
          getCalendarTypeNameBytes() {
        java.lang.Object ref = calendarTypeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          calendarTypeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @param value The calendarTypeName to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        calendarTypeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarTypeName() {
        
        calendarTypeName_ = getDefaultInstance().getCalendarTypeName();
        onChanged();
        return this;
      }
      /**
       * <code>string calendarTypeName = 2;</code>
       * @param value The bytes for calendarTypeName to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        calendarTypeName_ = value;
        onChanged();
        return this;
      }

      private int mon_ ;
      /**
       * <code>sint32 mon = 3;</code>
       * @return The mon.
       */
      @java.lang.Override
      public int getMon() {
        return mon_;
      }
      /**
       * <code>sint32 mon = 3;</code>
       * @param value The mon to set.
       * @return This builder for chaining.
       */
      public Builder setMon(int value) {
        
        mon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 mon = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMon() {
        
        mon_ = 0;
        onChanged();
        return this;
      }

      private int tue_ ;
      /**
       * <code>sint32 tue = 4;</code>
       * @return The tue.
       */
      @java.lang.Override
      public int getTue() {
        return tue_;
      }
      /**
       * <code>sint32 tue = 4;</code>
       * @param value The tue to set.
       * @return This builder for chaining.
       */
      public Builder setTue(int value) {
        
        tue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 tue = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTue() {
        
        tue_ = 0;
        onChanged();
        return this;
      }

      private int wed_ ;
      /**
       * <code>sint32 wed = 5;</code>
       * @return The wed.
       */
      @java.lang.Override
      public int getWed() {
        return wed_;
      }
      /**
       * <code>sint32 wed = 5;</code>
       * @param value The wed to set.
       * @return This builder for chaining.
       */
      public Builder setWed(int value) {
        
        wed_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 wed = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearWed() {
        
        wed_ = 0;
        onChanged();
        return this;
      }

      private int thu_ ;
      /**
       * <code>sint32 thu = 6;</code>
       * @return The thu.
       */
      @java.lang.Override
      public int getThu() {
        return thu_;
      }
      /**
       * <code>sint32 thu = 6;</code>
       * @param value The thu to set.
       * @return This builder for chaining.
       */
      public Builder setThu(int value) {
        
        thu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 thu = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearThu() {
        
        thu_ = 0;
        onChanged();
        return this;
      }

      private int fri_ ;
      /**
       * <code>sint32 fri = 7;</code>
       * @return The fri.
       */
      @java.lang.Override
      public int getFri() {
        return fri_;
      }
      /**
       * <code>sint32 fri = 7;</code>
       * @param value The fri to set.
       * @return This builder for chaining.
       */
      public Builder setFri(int value) {
        
        fri_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 fri = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearFri() {
        
        fri_ = 0;
        onChanged();
        return this;
      }

      private int sat_ ;
      /**
       * <code>sint32 sat = 8;</code>
       * @return The sat.
       */
      @java.lang.Override
      public int getSat() {
        return sat_;
      }
      /**
       * <code>sint32 sat = 8;</code>
       * @param value The sat to set.
       * @return This builder for chaining.
       */
      public Builder setSat(int value) {
        
        sat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sat = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearSat() {
        
        sat_ = 0;
        onChanged();
        return this;
      }

      private int sun_ ;
      /**
       * <code>sint32 sun = 9;</code>
       * @return The sun.
       */
      @java.lang.Override
      public int getSun() {
        return sun_;
      }
      /**
       * <code>sint32 sun = 9;</code>
       * @param value The sun to set.
       * @return This builder for chaining.
       */
      public Builder setSun(int value) {
        
        sun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 sun = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearSun() {
        
        sun_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.UpdateRequest)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.UpdateRequest)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateRequest>
        PARSER = new com.google.protobuf.AbstractParser<UpdateRequest>() {
      @java.lang.Override
      public UpdateRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.UpdateRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.UpdateResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 count = 1;</code>
     * @return The count.
     */
    int getCount();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.UpdateResponse}
   */
  public static final class UpdateResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.UpdateResponse)
      UpdateResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateResponse.newBuilder() to construct.
    private UpdateResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new UpdateResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              count_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse.Builder.class);
    }

    public static final int COUNT_FIELD_NUMBER = 1;
    private int count_;
    /**
     * <code>int32 count = 1;</code>
     * @return The count.
     */
    @java.lang.Override
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (count_ != 0) {
        output.writeInt32(1, count_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, count_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse other = (CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse) obj;

      if (getCount()
          != other.getCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.UpdateResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.UpdateResponse)
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        count_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_UpdateResponse_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse build() {
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse result = new CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse(this);
        result.count_ = count_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse.getDefaultInstance()) return this;
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int count_ ;
      /**
       * <code>int32 count = 1;</code>
       * @return The count.
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }
      /**
       * <code>int32 count = 1;</code>
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.UpdateResponse)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.UpdateResponse)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateResponse>
        PARSER = new com.google.protobuf.AbstractParser<UpdateResponse>() {
      @java.lang.Override
      public UpdateResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.UpdateResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.DeleteRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    int getCalendarType();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.DeleteRequest}
   */
  public static final class DeleteRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.DeleteRequest)
      DeleteRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeleteRequest.newBuilder() to construct.
    private DeleteRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeleteRequest() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeleteRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              calendarType_ = input.readSInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest.Builder.class);
    }

    public static final int CALENDARTYPE_FIELD_NUMBER = 1;
    private int calendarType_;
    /**
     * <code>sint32 calendarType = 1;</code>
     * @return The calendarType.
     */
    @java.lang.Override
    public int getCalendarType() {
      return calendarType_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (calendarType_ != 0) {
        output.writeSInt32(1, calendarType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (calendarType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, calendarType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest other = (CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest) obj;

      if (getCalendarType()
          != other.getCalendarType()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALENDARTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCalendarType();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.DeleteRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.DeleteRequest)
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest.class, CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        calendarType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteRequest_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest build() {
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest result = new CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest(this);
        result.calendarType_ = calendarType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest.getDefaultInstance()) return this;
        if (other.getCalendarType() != 0) {
          setCalendarType(other.getCalendarType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int calendarType_ ;
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return The calendarType.
       */
      @java.lang.Override
      public int getCalendarType() {
        return calendarType_;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @param value The calendarType to set.
       * @return This builder for chaining.
       */
      public Builder setCalendarType(int value) {
        
        calendarType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>sint32 calendarType = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCalendarType() {
        
        calendarType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.DeleteRequest)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.DeleteRequest)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeleteRequest>
        PARSER = new com.google.protobuf.AbstractParser<DeleteRequest>() {
      @java.lang.Override
      public DeleteRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeleteRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.DeleteRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DeleteResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CalendarTypeSvc.DeleteResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 count = 1;</code>
     * @return The count.
     */
    int getCount();
  }
  /**
   * Protobuf type {@code CalendarTypeSvc.DeleteResponse}
   */
  public static final class DeleteResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:CalendarTypeSvc.DeleteResponse)
      DeleteResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DeleteResponse.newBuilder() to construct.
    private DeleteResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DeleteResponse() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DeleteResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DeleteResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              count_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse.Builder.class);
    }

    public static final int COUNT_FIELD_NUMBER = 1;
    private int count_;
    /**
     * <code>int32 count = 1;</code>
     * @return The count.
     */
    @java.lang.Override
    public int getCount() {
      return count_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (count_ != 0) {
        output.writeInt32(1, count_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (count_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, count_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse)) {
        return super.equals(obj);
      }
      CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse other = (CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse) obj;

      if (getCount()
          != other.getCount()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CalendarTypeSvc.DeleteResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CalendarTypeSvc.DeleteResponse)
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse.class, CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse.Builder.class);
      }

      // Construct using CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        count_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.internal_static_CalendarTypeSvc_DeleteResponse_descriptor;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse getDefaultInstanceForType() {
        return CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse.getDefaultInstance();
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse build() {
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse buildPartial() {
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse result = new CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse(this);
        result.count_ = count_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse) {
          return mergeFrom((CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse other) {
        if (other == CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse.getDefaultInstance()) return this;
        if (other.getCount() != 0) {
          setCount(other.getCount());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int count_ ;
      /**
       * <code>int32 count = 1;</code>
       * @return The count.
       */
      @java.lang.Override
      public int getCount() {
        return count_;
      }
      /**
       * <code>int32 count = 1;</code>
       * @param value The count to set.
       * @return This builder for chaining.
       */
      public Builder setCount(int value) {
        
        count_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 count = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCount() {
        
        count_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:CalendarTypeSvc.DeleteResponse)
    }

    // @@protoc_insertion_point(class_scope:CalendarTypeSvc.DeleteResponse)
    private static final CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse();
    }

    public static CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DeleteResponse>
        PARSER = new com.google.protobuf.AbstractParser<DeleteResponse>() {
      @java.lang.Override
      public DeleteResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DeleteResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DeleteResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DeleteResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public CalendarTypeSvc.CalendarTypeOuterClass.DeleteResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_GrpcDecimal_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_GrpcDecimal_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_CalendarTypeResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_CalendarTypeResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_CalendarTypeSetResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_CalendarTypeSetResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_DataSetResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_DataSetResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_GetByKeyRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_GetByKeyRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_InsertRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_InsertRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_UpdateRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_UpdateRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_UpdateResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_UpdateResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_DeleteRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_DeleteRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CalendarTypeSvc_DeleteResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_CalendarTypeSvc_DeleteResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026mes/CalendarType.proto\022\017CalendarTypeSv" +
      "c\032\037google/protobuf/timestamp.proto\032\036goog" +
      "le/protobuf/duration.proto\032\036google/proto" +
      "buf/wrappers.proto\032\033google/protobuf/empt" +
      "y.proto\"+\n\013GrpcDecimal\022\r\n\005units\030\001 \001(\003\022\r\n" +
      "\005nanos\030\002 \001(\017\"@\n\024CalendarTypeResponse\022\024\n\014" +
      "calendarType\030\001 \001(\014\022\022\n\njsonString\030\002 \001(\t\"F" +
      "\n\027CalendarTypeSetResponse\022\027\n\017calendarTyp" +
      "eSet\030\001 \001(\014\022\022\n\njsonString\030\002 \001(\t\"6\n\017DataSe" +
      "tResponse\022\017\n\007dataSet\030\001 \001(\014\022\022\n\njsonString" +
      "\030\002 \001(\t\"\'\n\017GetByKeyRequest\022\024\n\014calendarTyp" +
      "e\030\001 \001(\021\"\232\001\n\rInsertRequest\022\024\n\014calendarTyp" +
      "e\030\001 \001(\021\022\030\n\020calendarTypeName\030\002 \001(\t\022\013\n\003mon" +
      "\030\003 \001(\021\022\013\n\003tue\030\004 \001(\021\022\013\n\003wed\030\005 \001(\021\022\013\n\003thu\030" +
      "\006 \001(\021\022\013\n\003fri\030\007 \001(\021\022\013\n\003sat\030\010 \001(\021\022\013\n\003sun\030\t" +
      " \001(\021\"\232\001\n\rUpdateRequest\022\024\n\014calendarType\030\001" +
      " \001(\021\022\030\n\020calendarTypeName\030\002 \001(\t\022\013\n\003mon\030\003 " +
      "\001(\021\022\013\n\003tue\030\004 \001(\021\022\013\n\003wed\030\005 \001(\021\022\013\n\003thu\030\006 \001" +
      "(\021\022\013\n\003fri\030\007 \001(\021\022\013\n\003sat\030\010 \001(\021\022\013\n\003sun\030\t \001(" +
      "\021\"\037\n\016UpdateResponse\022\r\n\005count\030\001 \001(\005\"%\n\rDe" +
      "leteRequest\022\024\n\014calendarType\030\001 \001(\021\"\037\n\016Del" +
      "eteResponse\022\r\n\005count\030\001 \001(\0052\224\005\n\014CalendarT" +
      "ype\022S\n\010GetByKey\022 .CalendarTypeSvc.GetByK" +
      "eyRequest\032%.CalendarTypeSvc.CalendarType" +
      "Response\022W\n\014GetByKeyJson\022 .CalendarTypeS" +
      "vc.GetByKeyRequest\032%.CalendarTypeSvc.Cal" +
      "endarTypeResponse\022J\n\006GetAll\022\026.google.pro" +
      "tobuf.Empty\032(.CalendarTypeSvc.CalendarTy" +
      "peSetResponse\022N\n\nGetAllJson\022\026.google.pro" +
      "tobuf.Empty\032(.CalendarTypeSvc.CalendarTy" +
      "peSetResponse\022O\n\006Insert\022\036.CalendarTypeSv" +
      "c.InsertRequest\032%.CalendarTypeSvc.Calend" +
      "arTypeResponse\022S\n\nInsertJson\022\036.CalendarT" +
      "ypeSvc.InsertRequest\032%.CalendarTypeSvc.C" +
      "alendarTypeResponse\022I\n\006Update\022\036.Calendar" +
      "TypeSvc.UpdateRequest\032\037.CalendarTypeSvc." +
      "UpdateResponse\022I\n\006Delete\022\036.CalendarTypeS" +
      "vc.DeleteRequest\032\037.CalendarTypeSvc.Delet" +
      "eResponseB\"\252\002\037HaccpManager.CalendarTypeP" +
      "rotosb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
          com.google.protobuf.DurationProto.getDescriptor(),
          com.google.protobuf.WrappersProto.getDescriptor(),
          com.google.protobuf.EmptyProto.getDescriptor(),
        });
    internal_static_CalendarTypeSvc_GrpcDecimal_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CalendarTypeSvc_GrpcDecimal_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_GrpcDecimal_descriptor,
        new java.lang.String[] { "Units", "Nanos", });
    internal_static_CalendarTypeSvc_CalendarTypeResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_CalendarTypeSvc_CalendarTypeResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_CalendarTypeResponse_descriptor,
        new java.lang.String[] { "CalendarType", "JsonString", });
    internal_static_CalendarTypeSvc_CalendarTypeSetResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_CalendarTypeSvc_CalendarTypeSetResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_CalendarTypeSetResponse_descriptor,
        new java.lang.String[] { "CalendarTypeSet", "JsonString", });
    internal_static_CalendarTypeSvc_DataSetResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_CalendarTypeSvc_DataSetResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_DataSetResponse_descriptor,
        new java.lang.String[] { "DataSet", "JsonString", });
    internal_static_CalendarTypeSvc_GetByKeyRequest_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_CalendarTypeSvc_GetByKeyRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_GetByKeyRequest_descriptor,
        new java.lang.String[] { "CalendarType", });
    internal_static_CalendarTypeSvc_InsertRequest_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_CalendarTypeSvc_InsertRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_InsertRequest_descriptor,
        new java.lang.String[] { "CalendarType", "CalendarTypeName", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", });
    internal_static_CalendarTypeSvc_UpdateRequest_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_CalendarTypeSvc_UpdateRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_UpdateRequest_descriptor,
        new java.lang.String[] { "CalendarType", "CalendarTypeName", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun", });
    internal_static_CalendarTypeSvc_UpdateResponse_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_CalendarTypeSvc_UpdateResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_UpdateResponse_descriptor,
        new java.lang.String[] { "Count", });
    internal_static_CalendarTypeSvc_DeleteRequest_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_CalendarTypeSvc_DeleteRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_DeleteRequest_descriptor,
        new java.lang.String[] { "CalendarType", });
    internal_static_CalendarTypeSvc_DeleteResponse_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_CalendarTypeSvc_DeleteResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_CalendarTypeSvc_DeleteResponse_descriptor,
        new java.lang.String[] { "Count", });
    com.google.protobuf.TimestampProto.getDescriptor();
    com.google.protobuf.DurationProto.getDescriptor();
    com.google.protobuf.WrappersProto.getDescriptor();
    com.google.protobuf.EmptyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
